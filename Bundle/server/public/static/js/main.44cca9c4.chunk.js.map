{"version":3,"sources":["static/loader.gif","components/Loader/Loader.js","components/Root/LoginWrapper.js","components/Root/PrivateWrapper.js","services/apis.js","services/httpCall.js","actions/loadingAction.js","services/errorHandler.js","actions/authAction.js","components/Login/Login.js","components/Loader/EntryLoader.js","components/Wrapper/Header.js","services/decideSideBar.js","components/Wrapper/SideBar.js","components/Users/userColumn.js","components/Users/UserList.js","services/beforeUpload.js","components/Users/UserCreate.js","components/Category/CategoryCreate.js","components/Category/categoryColumn.js","components/Category/CategoryList.js","services/TextEditor.js","components/Product/ProductCreate.js","components/Product/productcolumnAdmin.js","components/Product/ProductListAdmin.js","components/Product/ProductDetailsCommon.js","components/Product/ProductDetailsAdmin.js","components/Product/productcolumnSeller.js","components/Product/ProductListSeller.js","components/Product/UpdateProductStock.js","components/Product/ProductDetailsSeller.js","components/Wrapper/Dashboard.js","components/Wrapper/DashboardWrapper.js","App.js","reducers/loaderReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","connect","state","loader","Loader","props","className","loading_active","id","Auth","children","rest","render","location","isLoggedIn","to","pathname","from","apis","BASE_LOCAL_URL","BASE_SERVER_URL","LOGIN_WITH_EMAIL_AND_PASSWORD","GET_USER_DETAILS","UPLOAD_USER_AVATAR","USER_CREATE","LIST_USERS","CATEGORY_CREATE","LIST_CATEGORY","CREATE_PRODUCT","UPLOAD_PRODUCT_IMAGE","LIST_PRODUCTS_FOR_ADMIN","PRODUCT_DETAILS_FOR_ADMIN","LIST_PRODUCT_FOR_SELLER","PRODUCT_DETAILS_FOR_SELLER","UPDATE_PRODUCT_STOCK_SELLER","http","axios","create","baseURL","loading","data","type","payload","Errorhandler","error","cb","console","log","response","status","message","e","login","token","userdetails","defaults","headers","common","logout","localStorage","removeItem","setUserDetails","user","Title","level","name","onFinish","values","post","then","result","userType","setItem","catch","err","finally","Item","hasFeedback","rules","required","prefix","MailOutlined","placeholder","Password","LockOutlined","htmlType","href","EntryLoader","src","require","alt","Theme","Header","justify","gutter","align","dot","BellOutlined","placement","trigger","UserOutlined","title","LogoutOutlined","onClick","AdminSideBar","theme","mode","SubMenu","key","PlusCircleOutlined","UnorderedListOutlined","BranchesOutlined","ShoppingCartOutlined","SellerSideBar","Sider","Layout","collapsible","collapsed","sideBarCollapsed","columns","dataIndex","color","moment","format","useState","isTableLoading","setIstableLoading","userData","setUserData","currentPage","setCurrentpage","totalData","setTotalData","pageSize","setUserType","pageChanger","page","onUserTypeChange","value","useEffect","body","pageNumber","total","fetchUserData","subTitle","extra","icon","scroll","x","bordered","pagination","dataSource","column","rowKey","style","width","onChange","Option","footer","current","beforeUpload","file","extension","size","isJpgOrPng","includes","isLt2M","Select","Form","useForm","form","avatar","setAvatar","isAvatarUploading","setIsAvatarUploading","layout","email","phoneNumber","password","deliverTo","info","resetFields","scrollToFirstError","span","label","grid","shape","listType","showUploadList","formData","FormData","append","LoadingOutlined","PlusOutlined","len","min","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","minHeight","tokenSeparators","categoryData","setCategoryData","fetchCategoryData","RichEditorExample","focus","refs","editor","editorState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","link","hasremove","images","setImages","allCategories","setAllCategories","EditorState","createEmpty","productDescription","setProductDescription","fetchAllCategory","isAllImagePresent","flag","forEach","ele","raw","convertToRaw","category","regularPrice","salePrice","weight","description","JSON","stringify","success","push","ContentState","createFromText","showSearch","filterOption","input","option","toLowerCase","indexOf","i","_id","marginBottom","aspect","fl","index","img1","img2","img3","ind","img","l","length","splice","removeImage","newImg","Array","isArray","productData","setProductData","fetchProductData","Typography","UpdateProductStockSeller","autoplay","productDetails","createdAt","readOnly","useParams","setProductDetails","get","convertFromRaw","parse","createWithContent","productId","isDisabled","setIsDisabled","setFieldsValue","stock","marginTop","parseInt","initialValues","disabled","setSideBarCollapsed","toggleSideBar","Content","exact","path","Footer","Token","getItem","Fragment","initialState","combineReducers","action","lc","middleware","thunk","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.44cca9c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.e6dcd181.gif\";","import React from 'react';\nimport \"./loader.less\";\nimport {connect} from 'react-redux';\n\n\nfunction Loader(props) {\n    return (\n        <div className={props.loader.loading_active>0?\"loader-wrapper vsbl\":\"loader-wrapper nt-vsbl\"}>  \n           <div id=\"loader_bar\"><b></b><i></i></div>   \n        </div>\n    )\n}\n\nconst mapStateToProps= (state) => ({\n    loader : state.Loader\n})\n\nexport default connect(mapStateToProps, { })(Loader);","import React,{ ReactNode } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\n\nfunction LoginWrapper({ children,Auth, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !Auth.isLoggedIn ? \n                (\n                    children\n                ) \n                : \n                (\n                    <Redirect\n                        to={{\n                            pathname: \"/dashboard\"\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    Auth : state.Auth\n});\n\nexport default connect(mapStateToProps,{})(LoginWrapper);","import React,{ ReactNode } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\n\nfunction PrivateRoute({ children,Auth, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.isLoggedIn ? (\n                    children\n                ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/login\",\n                        state: { from: location }\n                    }}\n                />\n                )\n            }\n        />\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    Auth : state.Auth\n});\n\nexport default connect(mapStateToProps,{})(PrivateRoute);","const envoirnment = process.env.NODE_ENV;\nconst apis = {\n\n    BASE_LOCAL_URL : envoirnment === \"development\" ? \"http://localhost:7000\" : \"\",\n    BASE_SERVER_URL : envoirnment === \"development\"? \"http://localhost:4500\": \"https://bandhansolutions.herokuapp.com\",\n    \n    LOGIN_WITH_EMAIL_AND_PASSWORD : \"/apis/v1/login-with-email-password\",\n    GET_USER_DETAILS:\"/apis/v1/userdetails\",\n\n\n    UPLOAD_USER_AVATAR:\"/apis/v1/upload-avatar\",\n    USER_CREATE:\"/apis/v1/user/create\",\n    LIST_USERS:\"/apis/v1/user/list\",\n\n\n    CATEGORY_CREATE : \"/apis/v1/category/create\",\n    LIST_CATEGORY : \"/apis/v1/category/list\",\n\n\n    CREATE_PRODUCT : \"/apis/v1/product/create\",\n    UPLOAD_PRODUCT_IMAGE : \"/apis/v1/upload-product-image\",\n    LIST_PRODUCTS_FOR_ADMIN : \"/apis/v1/product/listforadmin\",\n    PRODUCT_DETAILS_FOR_ADMIN : \"/apis/v1/product/detailsofadmin\",\n\n    LIST_PRODUCT_FOR_SELLER : \"/apis/v1/product/listforseller\",\n    PRODUCT_DETAILS_FOR_SELLER : \"/apis/v1/product/detailsforseller\",\n    UPDATE_PRODUCT_STOCK_SELLER : '/apis/v1/product/stock/updatebyseller'\n    \n};\n\nexport default apis;","import axios from 'axios';\nimport apis from \"./apis\";\n\nconst http = axios.create({\n    baseURL: apis.BASE_SERVER_URL\n});\n\n\nexport default http;","export const loading = (data) => {\n    return {\n        type: 'LOADING',\n        payload : data\n    };\n};","import {message} from \"antd\";\n\nconst Errorhandler = (error,cb)=>{\n    try{\n        console.log(error.response)\n        if(error.response.status === 401){\n            cb();\n        }\n        else if(error.response.status === 422){\n            message.error(\"Server Error!\")\n        }\n        else{\n            message.error(error.response.data.message || \"server error\");\n        }\n    }\n    catch(e){\n        console.log(e)\n        message.error(\"Server Error!\")\n    }\n}\n\nexport default Errorhandler;","import http from \"../services/httpCall\";\n\nexport const login = (token,userdetails) => {\n    http.defaults.headers.common['Authorization']='Bearer '+ token;\n    return {\n        type: 'LOGIN',\n        token : token,\n        userdetails:userdetails\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem(\"Token\");\n    return {\n        type: 'LOGOUT'\n    };\n};\n  \nexport const setUserDetails = (user)=>{\n    return {\n        type : 'SET_USER_DETAILS',\n        payload : user\n    }\n}","import React from 'react';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { loading } from \"../../actions/loadingAction\";\nimport { connect } from \"react-redux\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport { Typography, Form, Input, Button, message } from 'antd';\nimport { MailOutlined , LockOutlined } from '@ant-design/icons';\nimport { login, setUserDetails, logout } from \"../../actions/authAction\"\nimport \"./login.less\";\n\n\n\nfunction Login(props) {\n\n    let onFinish = (values)=>{\n        console.log(`getting ${values} from the form`);\n        props.loading(true);\n        http.post(apis.LOGIN_WITH_EMAIL_AND_PASSWORD,values).then((result)=>{\n            console.log(result.data);\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\n                localStorage.setItem(\"Token\", result.data.token);\n                props.login(result.data.token,result.data.data);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);   \n            Errorhandler(err,props.logout)\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n    return (\n        <div className=\"login-page-container\">\n            <div className=\"login-section-wrapper\">\n                <Typography.Title level={1}>BANDHAN</Typography.Title>\n                <p className=\"brand-sub-name\">ADMIN PANEL</p>\n                <Form\n                    name=\"login-form\"\n                    className=\"login-form\"\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        hasFeedback={true}\n                        rules={[\n                            { \n                                required: true, \n                                message: 'Please input your E-mail!' \n                            },\n                            {\n                                type: 'email',\n                                message: 'The input is not valid E-mail!',\n                            }\n                        ]}\n                    >\n                        <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"email id\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        hasFeedback={true}\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input.Password\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </Form.Item>\n                    <Form.Item>\n                        <a className=\"login-form-forgot\" href=\"\">\n                            Forgot password\n                        </a>\n                    </Form.Item>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth,\n});\n  \nexport default connect(mapStateToProps, { \n    loading,\n    login,\n    setUserDetails,\n    logout\n})(Login);","import React from 'react';\nimport \"./loader.less\";\nimport { Typography } from \"antd\";\n\nexport default function EntryLoader() {\n    return (\n        <div className=\"entry-loader-container\">\n            <img src={require(\"../../static/loader.gif\")} className=\"entry-loader-brand-logo\" alt=\"entry-loader\" />\n            <Typography.Title level={4}>Loading...</Typography.Title>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Layout, Row, Col, Badge, Typography, Tooltip, Popover } from 'antd';\nimport {\n    UserOutlined,\n    BellOutlined,\n    SearchOutlined,\n    LogoutOutlined\n} from '@ant-design/icons';\nimport {Link} from \"react-router-dom\";\nimport { logout } from \"../../actions/authAction\"; \nimport {connect} from \"react-redux\";\n\n\nfunction Header(props) {\n    return (\n        <Layout.Header className=\"dashboard-header-wrapper\" >\n            <Row justify=\"space-between\">\n                <Col>\n                    <Row gutter={20} align=\"middle\">\n                        <Col>\n                            <Link to=\"/dashboard\">\n                                LOGO\n                            </Link>\n                        </Col>\n                        <Col className=\"header-brand-name-wrapper\">\n                            <Typography.Title className=\"header-brand-name\" level={3}>BANDHAN</Typography.Title>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row gutter={30}>\n                        <Col>\n                            <Badge dot={true}>\n                                <BellOutlined  className=\"header-option-icons\" />\n                            </Badge>\n                        </Col>\n                        <Col>\n                            <Popover placement=\"bottomRight\" trigger=\"click\">\n                                <UserOutlined className=\"header-option-icons\" />\n                            </Popover>\n                        </Col>\n                        <Col>\n                            <Tooltip title=\"logout\">\n                                <LogoutOutlined className=\"header-option-icons\" onClick={props.logout}/>\n                            </Tooltip>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Layout.Header>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Theme : state.Theme\n});\n\nexport default connect(mapStateToProps, { \n    logout\n})(Header);\n\n","import React from \"react\";\nimport {Menu} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined,\n    ShoppingCartOutlined,\n    BranchesOutlined\n} from '@ant-design/icons';\n\nexport const AdminSideBar = (props)=>(\n    <Menu  theme=\"dark\" mode=\"inline\">  \n        <Menu.SubMenu key=\"admin1\" title={<span><UserOutlined /><span>USER</span></span>}>\n            <Menu.Item  key=\"11\">\n                <Link to=\"/dashboard/user/create\">\n                    <PlusCircleOutlined />\n                    <span>CREATE USER</span>\n                </Link>\n            </Menu.Item>\n            <Menu.Item  key=\"12\">\n                <Link to=\"/dashboard/user/list\">\n                    <UnorderedListOutlined />\n                    <span>USER LIST</span>\n                </Link>\n            </Menu.Item>\n        </Menu.SubMenu>     \n        <Menu.SubMenu key=\"admin2\" title={<span><BranchesOutlined /><span>CATEGORY</span></span>}>\n            <Menu.Item  key=\"21\">\n                <Link to=\"/dashboard/category/create\">\n                    <PlusCircleOutlined />\n                    <span>CREATE CATEGORY</span>\n                </Link>\n            </Menu.Item>\n            <Menu.Item  key=\"22\">\n                <Link to=\"/dashboard/category/list\">\n                    <UnorderedListOutlined />\n                    <span>CATEGORY LIST</span>\n                </Link>\n            </Menu.Item>\n        </Menu.SubMenu>         \n        <Menu.SubMenu key=\"admin3\" title={<span><ShoppingCartOutlined /><span>PRODUCT</span></span>}>\n            <Menu.Item  key=\"31\">\n                <Link to=\"/dashboard/product/create\">\n                    <PlusCircleOutlined />\n                    <span>CREATE PRODUCT</span>\n                </Link>\n            </Menu.Item>\n            <Menu.Item  key=\"32\">\n                <Link to=\"/dashboard/product/list\">\n                    <UnorderedListOutlined />\n                    <span>PRODUCT LIST</span>\n                </Link>\n            </Menu.Item>\n        </Menu.SubMenu>\n    </Menu>\n)\n\nexport const SellerSideBar = (props)=>(\n    <Menu  theme=\"dark\" mode=\"inline\">                \n        <Menu.Item  key=\"32\">\n            <Link to=\"/dashboard/product/list\">\n                <UnorderedListOutlined />\n                <span>PRODUCT LIST</span>\n            </Link>\n        </Menu.Item>\n    </Menu>\n)\n\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AdminSideBar,SellerSideBar} from \"../../services/decideSideBar\";\nconst { Sider } = Layout;\n\nfunction SideBar(props) {\n    return (\n        <Sider key={props.Auth.userdetails} trigger={null} collapsible collapsed={props.sideBarCollapsed} className=\"dasboard-sidebar-wrapper\">\n            {\n                props.Auth.userdetails.userType==='admin'?\n                    <AdminSideBar />\n                :null   \n            }\n            {\n                props.Auth.userdetails.userType==='seller'?\n                    <SellerSideBar />\n                :null   \n            }\n        </Sider>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n\n})(SideBar);\n","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag} from \"antd\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title:'Email Id',\n        dataIndex:'email',\n        key:'email'\n    },\n    {\n        title:'Phone Number',\n        dataIndex:'phoneNumber',\n        key:'phoneNumber'\n    },\n    {\n        title : 'Registration Timestamp',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./User.less\";\nimport column from \"./userColumn\";\n\nfunction UserList(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [userData,setUserData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(1);\n    const [userType,setUserType] = useState(\"customer\");\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n    const onUserTypeChange = (value)=>{\n        setCurrentpage(1);\n        setUserType(value);\n    }\n\n    const fetchUserData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize,\n            userType : userType\n        }\n        http.post(apis.LIST_USERS,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setUserData(result.data.data);\n                setTotalData(result.data.total)\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchUserData();\n    },[currentPage,userType])\n\n    return (\n        <div className=\"user-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Users\"\n                subTitle=\"List all Users\"\n                extra={[<Link to=\"/dashboard/user/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create User</Button></Link>]}                \n            />\n            <div className=\"user-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1000 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={userData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    title={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Select\n                                style={{width:'200px'}}\n                                    value={userType}\n                                    onChange={onUserTypeChange}\n                                >\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\n                                </Select>\n                            </Col>\n                        </Row>\n                    )}\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(UserList);","import { message } from 'antd';\n\nexport const beforeUpload = (file,extension,size,cb)=>{\n    console.log(file.size/1024/1024,file.type)\n    const isJpgOrPng = extension.includes(file.type);\n    const isLt2M = (file.size / 1024 / 1024) < size;\n    if (!isJpgOrPng) {\n        message.error('Invalid file type!');\n    }\n    else{\n        if (!isLt2M) {\n            message.error('Too large file!');\n        }\n        else{\n            cb();\n        }\n    }\n}","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    UnorderedListOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./User.less\";\nconst { Option } = Select;\n\nfunction UserCreate(props) {\n    const [form] = Form.useForm(); \n    const [avatar,setAvatar] = useState();\n    const [isAvatarUploading,setIsAvatarUploading] = useState(false);\n    const [userType,setUserType] = useState();\n\n    const onFinish = (data)=>{\n        if(!avatar){\n            message.error(\"please upload an avatar.\")\n        }\n        else{\n            //console.log(avatar,data,apis.USER_CREATE);\n            const {email,name,phoneNumber,userType,password,deliverTo} = data;\n            props.loading(true);\n            http.post(apis.USER_CREATE,{\n                email,\n                name,\n                phoneNumber,\n                userType,\n                password,\n                avatar,\n                deliverTo\n            }).then(result=>{\n                console.log(result.data);\n                if(result.data.status){\n                    message.info(\"User created sucessfully\");\n                    form.resetFields();\n                    setAvatar();\n                    setUserType();\n                }\n                else{\n                    message.error(result.data.message)\n                }\n            }).catch(err=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{    \n                props.loading(false);\n            })\n        }\n    }\n\n    const beforeUploadFunction = (file)=>{\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\n            setIsAvatarUploading(true);\n            const formData = new FormData();\n            formData.append('avatar',file);\n            http.post(apis.UPLOAD_USER_AVATAR,formData,{\n                headers : {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then((result)=>{\n                if(result.data.status){\n                    setAvatar(result.data.file);\n                }\n                else{\n                    message.error(result.data.message);\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                setIsAvatarUploading(false);\n            })\n            \n        })\n        return false;\n    }\n\n\n    return (\n        <div className=\"user-create-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Create Users\"\n                subTitle=\"Add new User\"\n                extra={[<Link to=\"/dashboard/user/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Users</Button></Link>]}                \n            />\n            <div className=\"user-create-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the user's name!` }]}\n                            >\n                                <Input placeholder=\"Name\"  />\n                            </Form.Item>  \n                            <Form.Item \n                                label=\"Email Id\" \n                                name=\"email\"\n                                rules={[{ required: true, message: 'Please enter the email id!' },{type:'email',message:\"Enter a valid email id\"}]}\n                            >\n                                <Input placeholder=\"Email Id\" />\n                            </Form.Item>                         \n                        </Col>\n                        <Col span=\"12\">\n                            <ImgCrop grid={true} shape=\"round\">\n                                <Upload\n                                    name=\"avatar\"\n                                    listType=\"picture-card\"\n                                    className=\"avatar-uploader\"\n                                    showUploadList={false}\n                                    beforeUpload={beforeUploadFunction}\n\n                                >\n                                    {\n                                        avatar?<img src={`${apis.BASE_SERVER_URL}${avatar}`} className=\"uploaded-avatar\"/>\n                                        :\n                                        <div>\n                                            {isAvatarUploading ? <LoadingOutlined /> : <PlusOutlined />}\n                                            <div className=\"ant-upload-text\">Upload</div>\n                                        </div>\n                                    }\n                                </Upload>\n                            </ImgCrop>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Phone Number\" \n                                name=\"phoneNumber\"\n                                rules={[{ required: true, message: 'Please enter the phone number!' },{len:10,message:\"Enter a valid phone number!\"}]}\n                            >\n                                <Input type=\"number\" placeholder=\"Phone Number\" style={{width:'100%'}}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"User type\" \n                                name=\"userType\"\n                                rules={[{ required: true, message: `Please select one option!` }]}\n                            >\n                                <Select\n                                    onChange={setUserType}\n                                    placeholder=\"Select a user type\"\n                                >\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} align=\"bottom\">\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Password\" \n                                name=\"password\"\n                                rules={[{ required: true, message: 'Please enter the password!' },{min:6,message:\"Password must be atleast 6 character long!\"}]}\n                            >\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Confirm Password\" \n                                name=\"ConfirmPassword\"\n                                dependencies={['password']}\n                                rules={[\n                                    { required: true, message: 'Please enter the password again!' },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                            if (!value || getFieldValue('password') === value) {\n                                                return Promise.resolve();\n                                            }\n                                            return Promise.reject('The two passwords that you entered do not match!');\n                                        },\n                                    })\n                                ]}\n                            >\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    {\n                        userType===\"seller\"?\n                            <Row justify=\"center\" gutter={16}>\n                                <Col span={24}>\n                                    <Form.Item \n                                        label=\"Delivery Pin Codes\" \n                                        name=\"deliverTo\"\n                                    >\n                                        <Select mode=\"tags\" style={{ width: '100%', minHeight:'50px' }} tokenSeparators={[',']}>\n\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            :\n                            null\n                    }\n                    \n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    Create\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(UserCreate);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    UnorderedListOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nconst { Option } = Select;\n\nfunction CategoryCreate(props) {\n    const [form] = Form.useForm(); \n    \n    const onFinish = (data)=>{\n        console.log(data);\n        let { name } =data;\n        props.loading(true);\n        http.post(apis.CATEGORY_CREATE,{name}).then(result=>{\n            console.log(result.data);\n            if(result.data.status){\n                message.info(\"Category created sucessfully\");\n                form.resetFields();\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch(err=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{    \n            props.loading(false);\n        })\n    }\n\n    return (\n        <div className=\"category-create-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Create Category\"\n                subTitle=\"Add new Category\"\n                extra={[<Link to=\"/dashboard/category/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Categories</Button></Link>]}                \n            />\n            <div className=\"category-create-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Category Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the category name!` }]}\n                            >\n                                <Input placeholder=\"Category Name\"  />\n                            </Form.Item>                          \n                        </Col>\n                    </Row>\n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    Create\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(CategoryCreate);","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag} from \"antd\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title : 'Category Created',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport column from \"./categoryColumn\";\n\nfunction CategoryList(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [categoryData,setCategoryData] = useState([]);\n    const [totalData,setTotalData] = useState(0);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [pageSize,setPageSize] = useState(2);\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n    const fetchCategoryData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setCategoryData(result.data.data);\n                setTotalData(result.data.total)\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchCategoryData();\n    },[currentPage])\n\n    return (\n        <div className=\"category-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Categories\"\n                subTitle=\"List all Categories\"\n                extra={[<Link to=\"/dashboard/category/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Category</Button></Link>]}                \n            />\n            <div className=\"category-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1000 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={categoryData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(CategoryList);","import React from \"react\";\nimport 'draft-js/dist/Draft.css'; \nimport \"./TextEditor.css\";\nimport {Editor, EditorState, RichUtils, getDefaultKeyBinding} from 'draft-js';\n\nclass RichEditorExample extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focus = () => this.refs.editor.focus();\n        this.onChange = (editorState) => this.props.onChange(editorState);\n\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\n        this.toggleBlockType = this._toggleBlockType.bind(this);\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\n    }\n\n    _handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState);\n            return true;\n        }\n        return false;\n    }\n\n    _mapKeyToEditorCommand(e) {\n        if (e.keyCode === 9 /* TAB */) {\n            const newEditorState = RichUtils.onTab(\n                e,\n                this.props.editorState,\n                4, /* maxDepth */\n            );\n            if (newEditorState !== this.props.editorState) {\n                this.onChange(newEditorState);\n            }\n            return;\n        }\n        return getDefaultKeyBinding(e);\n    }\n\n    _toggleBlockType(blockType) {\n        this.onChange(\n            RichUtils.toggleBlockType(\n            this.props.editorState,\n            blockType\n            )\n        );\n    }\n\n    _toggleInlineStyle(inlineStyle) {\n        this.onChange(\n            RichUtils.toggleInlineStyle(\n                this.props.editorState,\n                inlineStyle\n            )\n        );\n    }\n\n    render() {\n        const {editorState} = this.props;\n\n        // If the user changes block type before entering any text, we can\n        // either style the placeholder or hide it. Let's just hide it now.\n        let className = 'RichEditor-editor';\n        var contentState = editorState.getCurrentContent();\n        if (!contentState.hasText()) {\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n            className += ' RichEditor-hidePlaceholder';\n            }\n        }\n\n        return (\n            <div className=\"RichEditor-root\">\n                <BlockStyleControls\n                    editorState={editorState}\n                    onToggle={this.toggleBlockType}\n                />\n                <InlineStyleControls\n                    editorState={editorState}\n                    onToggle={this.toggleInlineStyle}\n                />\n                <div className={className} onClick={this.focus}>\n                    <Editor\n                        blockStyleFn={getBlockStyle}\n                        customStyleMap={styleMap}\n                        editorState={editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        keyBindingFn={this.mapKeyToEditorCommand}\n                        onChange={this.onChange}\n                        placeholder=\"Product Description\"\n                        ref=\"editor\"\n                        spellCheck={true}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n    CODE: {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 16,\n        padding: 2,\n    },\n};\n\nfunction getBlockStyle(block) {\n    switch (block.getType()) {\n        case 'blockquote': return 'RichEditor-blockquote';\n        default: return null;\n    }\n}\n\nclass StyleButton extends React.Component {\n    constructor() {\n        super();\n        this.onToggle = (e) => {\n            e.preventDefault();\n            this.props.onToggle(this.props.style);\n        };\n    }\n\n    render() {\n        let className = 'RichEditor-styleButton';\n        if (this.props.active) {\n            className += ' RichEditor-activeButton';\n        }\n\n        return (\n            <span className={className} onMouseDown={this.onToggle}>\n            {this.props.label}\n            </span>\n        );\n    }\n}\n\nconst BLOCK_TYPES = [\n    {label: 'H1', style: 'header-one'},\n    {label: 'H2', style: 'header-two'},\n    {label: 'H3', style: 'header-three'},\n    {label: 'H4', style: 'header-four'},\n    {label: 'H5', style: 'header-five'},\n    {label: 'H6', style: 'header-six'},\n    {label: 'Blockquote', style: 'blockquote'},\n    {label: 'UL', style: 'unordered-list-item'},\n    {label: 'OL', style: 'ordered-list-item'},\n    {label: 'Code Block', style: 'code-block'},\n];\n\nconst BlockStyleControls = (props) => {\n    const {editorState} = props;\n    const selection = editorState.getSelection();\n    const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n    return (\n        <div className=\"RichEditor-controls\">\n            {BLOCK_TYPES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={type.style === blockType}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\nvar INLINE_STYLES = [\n    {label: 'Bold', style: 'BOLD'},\n    {label: 'Italic', style: 'ITALIC'},\n    {label: 'Underline', style: 'UNDERLINE'},\n    {label: 'Monospace', style: 'CODE'},\n];\n\nconst InlineStyleControls = (props) => {\n    const currentStyle = props.editorState.getCurrentInlineStyle();\n    return (\n        <div className=\"RichEditor-controls\">\n            {INLINE_STYLES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={currentStyle.has(type.style)}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\n\n\nexport default RichEditorExample;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    PlusOutlined,\n    UnorderedListOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport RichRextEditor from \"../../services/TextEditor\";\nimport {EditorState,convertToRaw,ContentState} from 'draft-js';\nimport \"./Product.less\";\nconst { Option } = Select;\n\nfunction ProductCreate(props) {\n    const [form] = Form.useForm(); \n    const [images,setImages] = useState([{link:null,loading:false,hasremove:false}]);\n    const [allCategories,setAllCategories] = useState([]);\n    const [productDescription, setProductDescription] = useState(() => EditorState.createEmpty())\n\n    const fetchAllCategory = ()=>{\n        props.loading(true);\n        let body = {\n            pageNumber : 1,\n            pageSize : 1000\n        }\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setAllCategories(result.data.data);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n    const beforeUploadFunction = (file,index)=>{\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\n            let img1 = [...images];\n            img1[index][\"loading\"]=true;\n            setImages(img1);\n            const formData = new FormData();\n            formData.append('image',file);\n            http.post(apis.UPLOAD_PRODUCT_IMAGE,formData,{\n                headers : {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then((result)=>{\n                if(result.data.status){\n                    let img2 = [...images];\n                    img2[index][\"link\"]=result.data.file;\n                    setImages(img2);\n                }\n                else{\n                    message.error(result.data.message);\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                let img3 = [...images];\n                img3[index][\"loading\"]=false;\n                setImages(img3);\n            })\n            \n        })\n        return false;\n    }\n\n    useEffect(()=>{\n        fetchAllCategory();\n    },[])\n\n    const onFinish = (data)=>{\n        if(isAllImagePresent()){\n            let raw = convertToRaw(productDescription.getCurrentContent());\n            const {name,category,regularPrice,salePrice,weight} = data;\n            let body = {\n                name,\n                category,\n                regularPrice,\n                salePrice,\n                weight,\n                images : images.map(ele=>ele.link),\n                description : JSON.stringify(raw)\n            }\n            console.log(body);\n            props.loading(true);\n            http.post(apis.CREATE_PRODUCT,body).then((result)=>{\n                if(result.data.status){\n                    message.success(result.data.message);\n                    form.resetFields();\n                    setImages([{link:null,loading:false,hasremove:false}]);\n                    const editorState = EditorState.push(productDescription, ContentState.createFromText(''));\n                    setProductDescription(editorState);\n                }\n                else{\n                    message.error(result.data.message)\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                props.loading(false);\n            })\n        }\n        else{\n            message.error('Please upload all images or remove them')   \n        }\n    }\n\n\n    const addImage = ()=>{\n        let img = [...images];\n        let l = img.length;\n        if(img[l-1].link){\n            img.push({link:null,loading:false,hasremove:true});\n            let newImg = img.map(ele=>{\n                return {\n                    ...ele,\n                    hasremove : true\n                }\n            })\n            setImages(newImg);        \n        }\n        \n    }\n\n    const removeImage = (ind)=>{\n        let img = [...images];\n        let l = img.length;\n        if(l>1){\n            img.splice(ind, 1);\n        }\n        if(l==2){\n            img[0][\"hasremove\"]=false;\n        }\n        setImages(img);\n    }\n\n    const isAllImagePresent = ()=>{\n        var flag = true;\n        images.forEach(ele=>{\n            if(!ele.link){\n                flag = false;\n            }\n        })\n        return flag\n    }\n\n\n\n    return (\n        <div className=\"product-create-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Create Product\"\n                subTitle=\"Add new Product\"\n                extra={[<Link to=\"/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Products</Button></Link>]}                \n            />\n            <div className=\"product-create-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form product-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Product Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the product name` }]}\n                            >\n                                <Input placeholder=\"Product Name\"  />\n                            </Form.Item>                         \n                        </Col>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Categories\"\n                                name=\"category\"\n\n                                rules={[{ required: true, message: `Please select the categories` }]}\n                            >\n                                <Select\n                                    showSearch\n                                    placeholder=\"Select one or more category\"\n                                    mode=\"multiple\"\n                                    filterOption={(input, option) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    {\n                                        allCategories.map((ele,i)=>(\n                                            <Select.Option key={i} value={ele._id}>{ele.name}</Select.Option>\n                                        ))\n                                    }\n                                    \n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} style={{marginBottom:'40px'}}>\n                        <Col span=\"24\">\n                            <RichRextEditor editorState={productDescription} onChange={setProductDescription} />\n                        </Col>\n                    </Row>\n                    <Row gutter={16} style={{marginBottom:'20px'}}>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Regular Price (in rupees)\" \n                                name=\"regularPrice\"\n                                rules={[{ required: true, message: `Please enter the regular Price` }]}\n                            >\n                                <Input placeholder=\"Regular Price\" type=\"number\"  />\n                            </Form.Item> \n                        </Col>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Sale Price (in rupees)\" \n                                name=\"salePrice\"\n                            >\n                                <Input placeholder=\"Sale Price\" type=\"number\"  />\n                            </Form.Item> \n                        </Col>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Weight (in KG)\" \n                                name=\"weight\"\n                            >\n                                <Input placeholder=\"Weight\" type=\"number\"  />\n                            </Form.Item> \n                        </Col>\n                    </Row>\n                    <p style={{marginBottom:'10px'}}>Product Images</p>\n\n                    <Row gutter={16}>\n                        {images.map((ele,i)=>(\n                            <Col span=\"8\" key={i}>\n                                <ImgCrop \n                                    grid={true} \n                                    shape=\"rect\"\n                                    aspect={0.75}\n                                >\n                                    <Upload\n                                        name={`image${i}`}\n                                        listType=\"picture-card\"\n                                        className=\"image-uploader\"\n                                        showUploadList={false}\n                                        beforeUpload={(fl)=>beforeUploadFunction(fl,i)}\n\n                                    >\n                                        {\n                                            ele.link?<img src={`${apis.BASE_SERVER_URL}${ele.link}`} className=\"uploaded-image\"/>\n                                            :\n                                            <div>\n                                                {ele.loading ? <LoadingOutlined /> : <PlusOutlined />}\n                                                <div className=\"ant-upload-text\">Upload</div>\n                                            </div>\n                                        }\n                                    </Upload>\n                                </ImgCrop>\n                                {ele.hasremove?<Button type=\"default\" onClick={()=>removeImage(i)}>Remove Image</Button>:null}\n                            </Col>\n                        ))}\n                        \n                    </Row>\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\n                        <Col>\n                            <Button type=\"default\" onClick={addImage}>Add Image</Button>\n                        </Col>\n                    </Row>\n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    Create\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductCreate);","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag,Button} from \"antd\";\nimport apis from \"../../services/apis\";\nimport {Link} from \"react-router-dom\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title:'Image',\n        dataIndex:'images',\n        key:'images',\n        render : (img)=>{\n            if(img && Array.isArray(img) && img.length>0){\n                return(\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\n                )\n            }\n            else{\n                return null\n            }\n        }\n    },\n    {\n        title:'Categories',\n        dataIndex:'category',\n        key:'category',\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\n    },\n    {\n        title:'Regular Price',\n        dataIndex:'regularPrice',\n        key:'regularPrice'\n    },\n    {\n        title:'Sale Price',\n        dataIndex:'salePrice',\n        key:'salePrice'\n    },\n    {\n        title : 'Created On',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    },\n    {\n        title : \"Operations\",\n        render : (data)=>(\n            <Link to={`/dashboard/product/details/${data._id}`}>\n                <Button type=\"default\">Details</Button>            \n            </Link>\n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport column from \"./productcolumnAdmin\";\nimport {Link} from \"react-router-dom\";\n\nfunction ProductListAdmin(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [productData,setProductData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(5);\n\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n\n    const fetchProductData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(apis.LIST_PRODUCTS_FOR_ADMIN,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductData(result.data.data);\n                setTotalData(result.data.total);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductData();\n    },[currentPage])\n\n    \n\n    return (\n        <div className=\"product-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Products\"\n                subTitle=\"List all products\"\n                extra={[<Link to=\"/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \n            />\n            <div className=\"product-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1200 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={productData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductListAdmin);","import React from 'react';\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\nimport apis from \"../../services/apis\";\nimport moment from \"moment\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nconst { Title } = Typography;\n\n\nexport default function UpdateProductStockSeller(props) {\n    return (\n        <Row gutter={16}>\n            <Col span=\"8\">\n                <Carousel autoplay>\n                    {props.productDetails && props.productDetails.images.map((ele,i)=>(\n                        <img src={`${apis.BASE_SERVER_URL}${ele}`} key={i} className=\"product-image\" />\n                    ))}\n                    \n                </Carousel>\n            </Col>\n            <Col span=\"16\">\n                <div className=\"product-detains-inner\">\n                    <Row justify=\"space-between\">\n                        <Col>\n                            <Title level={2}>{props.productDetails && props.productDetails.name}</Title>\n                            {props.productDetails && <p className=\"regularPrice\">Regular Price : {props.productDetails.regularPrice}</p>}\n                            {props.productDetails && props.productDetails.salePrice && <p className=\"salePrice\">Sale Price : {props.productDetails.salePrice}</p>}\n                        </Col>\n                        <Col>\n                            <Title level={4}>{props.productDetails && moment(props.productDetails.createdAt).format(\"DD-MM-YYYY\")}</Title>\n                        </Col>\n                    </Row>\n                    \n                    {props.productDetails && props.productDetails.category.map((ele,i)=>(<Tag key={i} color={\"magenta\"}>{ele.name}</Tag>))}\n                    <div style={{marginBottom:'30px'}} />\n                    <Editor editorState={props.productDescription} readOnly={true} />\n                </div>\n            </Col>\n        </Row>\n    )\n}\n","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport moment from \"moment\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport {Link,useParams} from \"react-router-dom\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\nconst { Title } = Typography;\n\nfunction ProductDetailsAdmin(props) {\n    const {id} = useParams();\n    const [productDetails,setProductDetails] = useState();\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\n\n\n    const fetchProductDetails = ()=>{\n        props.loading(true);\n        http.get(`${apis.PRODUCT_DETAILS_FOR_ADMIN}/${id}`).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductDetails(result.data.data);\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\n                const editorState = EditorState.createWithContent(contentState);\n                setProductDescription(editorState)\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductDetails();\n    },[])\n\n    return (\n        <div className=\"product-details-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Product Details\"\n                subTitle={productDetails?productDetails.name:\"\"}\n                extra={[<Link to=\"/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \n            />\n            <div className=\"product-details-inner padding-after-page-header\" >\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\n            </div>\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductDetailsAdmin);","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag,Button} from \"antd\";\nimport apis from \"../../services/apis\";\nimport {Link} from \"react-router-dom\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title:'Image',\n        dataIndex:'images',\n        key:'images',\n        render : (img)=>{\n            if(img && Array.isArray(img) && img.length>0){\n                return(\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\n                )\n            }\n            else{\n                return null\n            }\n        }\n    },\n    {\n        title:'Categories',\n        dataIndex:'category',\n        key:'category',\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\n    },\n    {\n        title:'Stock',\n        dataIndex:'stock',\n        key:'stock'\n    },\n    {\n        title:'Regular Price',\n        dataIndex:'regularPrice',\n        key:'regularPrice'\n    },\n    {\n        title:'Sale Price',\n        dataIndex:'salePrice',\n        key:'salePrice'\n    },\n    {\n        title : 'Stock Updated',\n        dataIndex : 'stockUpdated',\n        key:'stockUpdated',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    },\n    {\n        title : \"Operations\",\n        render : (data)=>(\n            <Link to={`/dashboard/product/details/${data.productId}`}>\n                <Button type=\"default\">Details</Button>            \n            </Link>\n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport column from \"./productcolumnSeller\";\nimport {Link} from \"react-router-dom\";\n\nfunction ProductListSeller(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [productData,setProductData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(5);\n\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n\n    const fetchProductData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(apis.LIST_PRODUCT_FOR_SELLER,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductData(result.data.data);\n                setTotalData(result.data.total);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductData();\n    },[currentPage])\n\n    \n\n    return (\n        <div className=\"product-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Products\"\n                subTitle=\"List all products\"\n                extra={[<Link to=\"/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \n            />\n            <div className=\"product-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1200 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={productData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductListSeller);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Card,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\n\nfunction UpdateProductStock(props) {\n    const [form] = Form.useForm(); \n    const [isDisabled,setIsDisabled] = useState(true)\n\n\n    const onFinish = (data)=>{\n        if(isDisabled){\n            setIsDisabled(false);\n        }\n        else{\n            let {stock} = data;\n            try{\n                let n = parseInt(stock);\n                if(n>=0){\n                    props.loading(true);\n                    http.post(apis.UPDATE_PRODUCT_STOCK_SELLER,{\n                        id : props.productDetails._id,\n                        stock\n                    }).then((result)=>{\n                        console.log(result.data)\n                        if(result.data.status){\n                            message.success(result.data.message)\n                            setIsDisabled(true);\n                        }\n                        else{\n                            message.error(result.data.message)\n                        }\n                    }).catch((err)=>{\n                        console.log(err);\n                        Errorhandler(err,props.logout);\n                    }).finally(()=>{\n                        props.loading(false);\n                    })\n                }\n                else{\n                    message.error(\"Please enter a valid stock number\")\n                }\n            }\n            catch(err){\n                message.error(\"Please enter a valid stock number\")\n            }\n        }\n    }\n\n\n    useEffect(()=>{\n        form.setFieldsValue({\n            stock:props.productDetails?.stock\n        })\n    },[props.productDetails])\n\n\n\n\n\n\n\n    return (\n        <Card\n            title=\"Stock management\"\n            style={{marginTop:'50px'}}\n        >\n        \n            <Form\n                layout=\"inline\"\n                form={form}\n                onFinish={onFinish}\n                scrollToFirstError={true}\n                className=\"basic-form\"\n                initialValues={{\n                    stock:props.productDetails?.stock\n                }}\n            >\n                <Form.Item \n                    name=\"stock\"\n                    rules={[{ required: true, message: `Please enter the stock` }]}\n                >\n                    <Input disabled={isDisabled} placeholder=\"Stock\" type=\"number\"  />\n                </Form.Item> \n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">EDIT</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n        \n        \n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(UpdateProductStock);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport moment from \"moment\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport {Link,useParams} from \"react-router-dom\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\nimport UpdateProductStock from \"./UpdateProductStock\";\nconst { Title } = Typography;\n\nfunction ProductDetailsSeller(props) {\n    const {id} = useParams();\n    const [productDetails,setProductDetails] = useState();\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\n\n\n    const fetchProductDetails = ()=>{\n        props.loading(true);\n        http.get(`${apis.PRODUCT_DETAILS_FOR_SELLER}/${id}`).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductDetails(result.data.data);\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\n                const editorState = EditorState.createWithContent(contentState);\n                setProductDescription(editorState)\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductDetails();\n    },[])\n\n    return (\n        <div className=\"product-details-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Product Details\"\n                subTitle={productDetails?productDetails.name:\"\"}\n                extra={[<Link to=\"/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \n            />\n            <div className=\"product-details-inner padding-after-page-header\" >\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\n                <UpdateProductStock productDetails={productDetails} />\n            </div>\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductDetailsSeller);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Layout,Row,Col } from 'antd';\nimport { useLocation, Switch, Route } from \"react-router-dom\";\nimport \"./Dashboard.less\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideBar\";   \nimport UserList from \"../Users/UserList\"; \nimport UserCreate from \"../Users/UserCreate\";\nimport CategoryCreate from \"../Category/CategoryCreate\";\nimport CategoryList from \"../Category/CategoryList\";\nimport ProductCreate from \"../Product/ProductCreate\";\nimport ProductListAdmin from \"../Product/ProductListAdmin\";\nimport ProductDetailsAdmin from \"../Product/ProductDetailsAdmin\";\n\nimport ProductListSeller from \"../Product/ProductListSeller\";\nimport ProductDetailsSeller from \"../Product/ProductDetailsSeller\";\n\n\nfunction Dashboard(props) {\n    const [sideBarCollapsed,setSideBarCollapsed] = useState(false);\n\n    let toggleSideBar = ()=>{\n        setSideBarCollapsed(!sideBarCollapsed);\n    }\n\n    return (\n        <Layout className=\"dashboard-container\">\n            <Header toggleSideBar={toggleSideBar}/>\n            <Row className=\"dashboard-content-container\">\n                <Col>\n                    <SideBar sideBarCollapsed={sideBarCollapsed}/>\n                </Col>\n                <Col className={\"dashboard-content-col\"+(sideBarCollapsed?\" dashboadr-sidebar-collapsed\":\" dashboard-sidebar-normal\")}>\n                    <Layout.Content  className=\"dasboard-content-wrapper\">\n                        {\n                            props.Auth.userdetails.userType && props.Auth.userdetails.userType==='admin'?\n                            <div className=\"dashboard-content-inner\">\n                                <Switch>\n                                    <Route exact={true} path=\"/dashboard/user/list\">\n                                        <UserList />\n                                    </Route>\n                                    <Route exact={true} path=\"/dashboard/user/create\">\n                                        <UserCreate />\n                                    </Route>\n                                    <Route exact={true} path=\"/dashboard/category/create\">\n                                        <CategoryCreate />\n                                    </Route>\n                                    <Route exact={true} path=\"/dashboard/category/list\">\n                                        <CategoryList />\n                                    </Route> \n                                    <Route exact={true} path=\"/dashboard/product/create\">\n                                        <ProductCreate />\n                                    </Route>\n                                    <Route exact={true} path=\"/dashboard/product/list\">\n                                        <ProductListAdmin />\n                                    </Route>\n                                    <Route exact={true} path=\"/dashboard/product/details/:id\">\n                                        <ProductDetailsAdmin />\n                                    </Route>\n                                </Switch>\n                            </div>\n                            :\n                            <div className=\"dashboard-content-inner\">\n                                <Switch>\n                                    <Route path=\"/dashboard/product/list\">\n                                        <ProductListSeller />\n                                    </Route>\n                                    <Route exact={true} path=\"/dashboard/product/details/:id\">\n                                        <ProductDetailsSeller />\n                                    </Route>\n                                </Switch>\n                            </div>\n                        }\n                           \n                        <Layout.Footer className=\"dashboard-footer-wrapper\">BANDHAN SOLUTIONS</Layout.Footer>    \n                    </Layout.Content>\n                </Col>\n            </Row>\n        </Layout>\n    )\n    \n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n\n})(Dashboard);\n\n\n\n\n","import React,{ useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { logout, setUserDetails } from \"../../actions/authAction\"; \nimport EntryLoader from \"../Loader/EntryLoader\";\nimport Dashboard from \"./Dashboard\";\nimport http from \"../../services/httpCall\";\nimport apis from \"../../services/apis\";\nimport Errorhandler from \"../../services/errorHandler\";\n\nfunction DashboardWrapper(props) {\n\n    let fetchUserDetails = ()=>{\n        http.get(apis.GET_USER_DETAILS).then((result)=>{\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\n                props.setUserDetails(result.data.data);\n            }\n            else{\n                props.logout();\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout)\n        })\n    }\n\n    //fetching user details on component load\n    useEffect(()=>{\n        if(!props.Auth.userdetails){\n            console.log(props.Auth.userdetails)\n            fetchUserDetails();\n        }        \n    },[])\n\n    return (\n        <div>\n            {props.Auth.userdetails?\n                <Dashboard />\n            :\n                <EntryLoader />\n            }\n            \n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth,\n});\n  \nexport default connect(mapStateToProps, { setUserDetails, logout })(DashboardWrapper);\n\n","import React from \"react\";\nimport Loader from \"./components/Loader/Loader\";\nimport {connect} from 'react-redux';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport LoginWrapper from \"./components/Root/LoginWrapper\";\nimport PrivateRoute from \"./components/Root/PrivateWrapper\";\nimport Login from \"./components/Login/Login\";\nimport DashboardWrapper from \"./components/Wrapper/DashboardWrapper\";\nimport { login } from \"./actions/authAction\";\n\n\n\nlet App = (props)=>{\n    //auth check if token exist\n    let Token  = localStorage.getItem(\"Token\");\n    console.log(Token);\n    if(Token && Token!==\"null\" && Token!==\"undefined\"){\n      props.login(Token);\n    }\n\n    return(\n        <React.Fragment>\n            <Loader />\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Redirect to={{pathname: \"/dashboard\"}}/>\n                    </Route>\n                    <LoginWrapper exact={true} path=\"/login\">\n                        <Login />\n                    </LoginWrapper>\n                    <PrivateRoute path=\"/dashboard\">\n                        <DashboardWrapper />\n                    </PrivateRoute>\n                    <Route>\n                        <Redirect to=\"/\" />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps= (state) => ({\n    \n})\nexport default connect(mapStateToProps, { \n    login\n})(App);","const initialState = {\n    loading_active : 0\n}\n\nexport default (state = initialState, action )=>{\n    switch(action.type){\n        case 'LOADING':\n            let lc = state.loading_active;\n            if(action.payload){\n                lc++;\n            }\n            else{\n                lc = lc===0?0:lc-1;\n            }\n            return {\n                ...state,\n                loading_active : lc              \n            };\n        default:\n            return state;\n    }\n}","const initialState = {\n    isLoggedIn : false,\n    token : null,\n    userdetails : null          \n}\n\nexport default (state = initialState, action )=>{\n    switch(action.type){\n        case 'LOGIN':\n            return {\n                ...state,\n                isLoggedIn : true,\n                token : action.token,\n                userdetails : action.userdetails\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                isLoggedIn : false,\n                token : null,\n                userdetails : null\n            }\n        case 'SET_USER_DETAILS':\n            return{\n                ...state,\n                userdetails : action.payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'; \nimport Loader from \"./loaderReducer\";\nimport Auth from \"./authReducer\";\n\nexport default combineReducers({\n    Loader,\n    Auth\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from \"redux-logger\";\nimport rootReducer from './reducers/rootReducer';\n\n\nconst initialState={};\nconst middleware=[thunk,logger];\n\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    applyMiddleware(...middleware)\n);\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}