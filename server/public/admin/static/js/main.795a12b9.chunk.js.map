{"version":3,"sources":["static/brand-logo.png","static/loader.gif","components/Loader/Loader.js","components/Root/LoginWrapper.js","components/Root/PrivateWrapper.js","services/apis.js","services/httpCall.js","actions/loadingAction.js","services/errorHandler.js","actions/authAction.js","components/Login/Login.js","components/Loader/EntryLoader.js","components/Wrapper/Header.js","services/decideSideBar.js","components/Wrapper/SideBar.js","components/Users/userColumn.js","components/Users/UserList.js","services/beforeUpload.js","components/Users/UserCreate.js","components/Category/CategoryCreate.js","components/Category/categoryColumn.js","components/Category/CategoryList.js","services/TextEditor.js","components/Product/ProductCreate.js","components/Product/ProductEdit.js","components/Product/productcolumnAdmin.js","components/Product/ProductListAdmin.js","components/Product/ProductDetailsCommon.js","components/Product/stockColumnAdmin.js","components/Product/ProductStockAdmin.js","components/Product/ProductDetailsAdmin.js","components/Profile/MyProfile.js","components/Product/productcolumnSeller.js","components/Product/ProductListSeller.js","components/Product/UpdateProductStock.js","components/Product/ProductDetailsSeller.js","components/Order/OrderListColumn.js","components/Order/OrderListSeller.js","components/Order/OrderListAdmin.js","components/Order/SingleOrder.js","components/Order/OrderDetails.js","components/Poster/Poster.js","components/Wrapper/Dashboard.js","components/Wrapper/DashboardWrapper.js","App.js","reducers/loaderReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","connect","state","loader","Loader","props","className","loading_active","id","Auth","children","rest","render","location","isLoggedIn","to","pathname","from","apis","BASE_LOCAL_URL","BASE_SERVER_URL","LOGIN_WITH_EMAIL_AND_PASSWORD","GET_USER_DETAILS","GET_PROFILE_DETAILS","UPDATE_PROFILE_DETAILS","UPLOAD_USER_AVATAR","USER_CREATE","LIST_USERS","CATEGORY_CREATE","LIST_CATEGORY","CREATE_PRODUCT","EDIT_PRODUCT","UPLOAD_PRODUCT_IMAGE","LIST_PRODUCTS_FOR_ADMIN","PRODUCT_DETAILS_FOR_ADMIN","STOCK_LIST_FOR_ADMIN","LIST_PRODUCT_FOR_SELLER","PRODUCT_DETAILS_FOR_SELLER","UPDATE_PRODUCT_STOCK_SELLER","GET_ORDERS_LIST","ORDER_DETAILS","UPDATE_ORDER_STATUS","UPLOAD_POSTER","LIST_POSTER","DELETE_POSTER","http","axios","create","baseURL","loading","data","type","payload","Errorhandler","error","cb","console","log","response","status","message","e","login","token","userdetails","defaults","headers","common","logout","localStorage","removeItem","setUserDetails","user","Title","level","src","brandLogo","style","width","marginBottom","name","onFinish","values","post","then","result","userType","setItem","catch","err","finally","Item","hasFeedback","rules","required","prefix","MailOutlined","placeholder","Password","LockOutlined","htmlType","EntryLoader","require","alt","Theme","Header","justify","gutter","align","height","dot","BellOutlined","placement","trigger","UserOutlined","title","LogoutOutlined","onClick","AdminSideBar","theme","mode","SubMenu","key","PlusCircleOutlined","UnorderedListOutlined","BranchesOutlined","ShoppingCartOutlined","PictureOutlined","SellerSideBar","_id","Sider","Layout","collapsible","collapsed","sideBarCollapsed","columns","dataIndex","color","moment","format","row","useState","isTableLoading","setIstableLoading","userData","setUserData","currentPage","setCurrentpage","totalData","setTotalData","pageSize","setUserType","pageChanger","page","onUserTypeChange","value","useEffect","body","pageNumber","total","fetchUserData","subTitle","extra","icon","scroll","x","bordered","pagination","dataSource","column","rowKey","onChange","Option","footer","current","beforeUpload","file","extension","size","isJpgOrPng","includes","isLt2M","Select","Form","useForm","form","avatar","setAvatar","isAvatarUploading","setIsAvatarUploading","layout","email","phoneNumber","password","deliverTo","info","resetFields","scrollToFirstError","span","label","grid","shape","listType","showUploadList","formData","FormData","append","LoadingOutlined","PlusOutlined","len","min","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","minHeight","tokenSeparators","categoryData","setCategoryData","fetchCategoryData","RichEditorExample","focus","refs","editor","editorState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","propertyKey","link","hasremove","images","setImages","properties","setProperties","allCategories","setAllCategories","EditorState","createEmpty","productDescription","setProductDescription","fetchAllCategory","isAllImagePresent","flag","forEach","ele","accepted","i","raw","convertToRaw","category","regularPrice","salePrice","productVideo","description","JSON","stringify","success","push","ContentState","createFromText","showSearch","filterOption","input","option","toLowerCase","indexOf","val","index","p","setPropertyType","eleee","ii","changePropertyValue","target","splice","removeProperty","aspect","fl","img1","img2","img3","ind","img","l","length","removeImage","newImg","useParams","get","setFieldsValue","imgs","c","d","convertFromRaw","parse","createWithContent","Array","isArray","productData","setProductData","fetchProductData","Typography","ProductDetailsCommon","autoplay","productDetails","createdAt","readOnly","ProductStockAdmin","productStock","setProductStock","fetchProducStock","productId","stock","seller","setProductDetails","profile","setProfile","fetchProfileData","isDisabled","setIsDisabled","marginTop","parseInt","initialValues","disabled","city","pincode","orderData","setOrderData","fetchOrderData","allSellers","setAllSellers","selectedSeller","setSelectedSeller","sellerId","onSelect","TextArea","Input","SubOrder","options","setOptions","selectedOption","setSelectedOption","setDescription","reCalculateOptions","opts","lastStep","product","count","unitPrice","totalPrice","date","remark","rows","orderId","subOrderId","fetchOrderDetails","orderDetails","setOrderDetails","mySubOrder","setMySubOrder","items","ords","userId","address","lineone","locality","posters","setPosters","fetchPosters","a","responses","deleteMe","hoverable","cover","setSideBarCollapsed","toggleSideBar","Content","exact","path","Footer","Token","getItem","Fragment","initialState","combineReducers","action","lc","middleware","thunk","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.795a12b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brand-logo.26748af0.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.e6dcd181.gif\";","import React from 'react';\nimport \"./loader.less\";\nimport {connect} from 'react-redux';\n\n\nfunction Loader(props) {\n    return (\n        <div className={props.loader.loading_active>0?\"loader-wrapper vsbl\":\"loader-wrapper nt-vsbl\"}>  \n           <div id=\"loader_bar\"><b></b><i></i></div>   \n        </div>\n    )\n}\n\nconst mapStateToProps= (state) => ({\n    loader : state.Loader\n})\n\nexport default connect(mapStateToProps, { })(Loader);","import React,{ ReactNode } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\n\nfunction LoginWrapper({ children,Auth, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !Auth.isLoggedIn ? \n                (\n                    children\n                ) \n                : \n                (\n                    <Redirect\n                        to={{\n                            pathname: \"/admin/dashboard\"\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    Auth : state.Auth\n});\n\nexport default connect(mapStateToProps,{})(LoginWrapper);","import React,{ ReactNode } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\n\nfunction PrivateRoute({ children,Auth, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.isLoggedIn ? (\n                    children\n                ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/admin/login\",\n                        state: { from: location }\n                    }}\n                />\n                )\n            }\n        />\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    Auth : state.Auth\n});\n\nexport default connect(mapStateToProps,{})(PrivateRoute);","const envoirnment = process.env.NODE_ENV;\nconst apis = {\n\n    BASE_LOCAL_URL : envoirnment === \"development\" ? \"http://localhost:7000\" : \"\",\n    BASE_SERVER_URL : envoirnment === \"development\"? \"http://localhost:4500\": \"https://bandhansolutions.herokuapp.com\",\n\n    LOGIN_WITH_EMAIL_AND_PASSWORD : \"/apis/v1/login-with-email-password\",\n    GET_USER_DETAILS:\"/apis/v1/userdetails\",\n    GET_PROFILE_DETAILS:\"/apis/v1/profiledetails\",\n    UPDATE_PROFILE_DETAILS:\"/apis/v1/update-profile\",\n\n\n    UPLOAD_USER_AVATAR:\"/apis/v1/upload-avatar\",\n    USER_CREATE:\"/apis/v1/user/create\",\n    LIST_USERS:\"/apis/v1/user/list\",\n\n\n    CATEGORY_CREATE : \"/apis/v1/category/create\",\n    LIST_CATEGORY : \"/apis/v1/category/list\",\n\n\n    CREATE_PRODUCT : \"/apis/v1/product/create\",\n    EDIT_PRODUCT : \"/apis/v1/product/edit\",\n    UPLOAD_PRODUCT_IMAGE : \"/apis/v1/upload-product-image\",\n    LIST_PRODUCTS_FOR_ADMIN : \"/apis/v1/product/listforadmin\",\n    PRODUCT_DETAILS_FOR_ADMIN : \"/apis/v1/product/detailsofadmin\",\n    STOCK_LIST_FOR_ADMIN:\"/apis/v1/product/stock-list-foradmin\",\n\n    LIST_PRODUCT_FOR_SELLER : \"/apis/v1/product/listforseller\",\n    PRODUCT_DETAILS_FOR_SELLER : \"/apis/v1/product/detailsforseller\",\n    UPDATE_PRODUCT_STOCK_SELLER : '/apis/v1/product/stock/updatebyseller',\n\n\n\n\n    GET_ORDERS_LIST:\"/apis/v1/seller/get-my-orders\",\n    ORDER_DETAILS:\"/apis/v1/order/details\",\n    UPDATE_ORDER_STATUS:\"/apis/v1/order/update-status-details\",\n\n\n\n\n    UPLOAD_POSTER : \"/apis/v1/upload-poster\",\n    LIST_POSTER : \"/apis/v1/list-poster\",\n    DELETE_POSTER:\"/apis/v1/delete-poster\"\n\n\n};\n\nexport default apis;","import axios from 'axios';\nimport apis from \"./apis\";\n\nconst http = axios.create({\n    baseURL: apis.BASE_SERVER_URL\n});\n\n\nexport default http;","export const loading = (data) => {\n    return {\n        type: 'LOADING',\n        payload : data\n    };\n};","import {message} from \"antd\";\n\nconst Errorhandler = (error,cb)=>{\n    try{\n        console.log(error.response)\n        if(error.response.status === 401){\n            cb();\n        }\n        else if(error.response.status === 422){\n            message.error(\"Server Error!\")\n        }\n        else{\n            message.error(error.response.data.message || \"server error\");\n        }\n    }\n    catch(e){\n        console.log(e)\n        message.error(\"Server Error!\")\n    }\n}\n\nexport default Errorhandler;","import http from \"../services/httpCall\";\n\nexport const login = (token,userdetails) => {\n    http.defaults.headers.common['Authorization']='Bearer '+ token;\n    return {\n        type: 'LOGIN',\n        token : token,\n        userdetails:userdetails\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem(\"Token\");\n    return {\n        type: 'LOGOUT'\n    };\n};\n  \nexport const setUserDetails = (user)=>{\n    return {\n        type : 'SET_USER_DETAILS',\n        payload : user\n    }\n}","import React from 'react';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { loading } from \"../../actions/loadingAction\";\nimport { connect } from \"react-redux\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport { Typography, Form, Input, Button, message } from 'antd';\nimport { MailOutlined , LockOutlined } from '@ant-design/icons';\nimport { login, setUserDetails, logout } from \"../../actions/authAction\"\nimport \"./login.less\";\nimport brandLogo from \"../../static/brand-logo.png\"\n\n\n\nfunction Login(props) {\n\n    let onFinish = (values)=>{\n        console.log(`getting ${values} from the form`);\n        props.loading(true);\n        http.post(apis.LOGIN_WITH_EMAIL_AND_PASSWORD,values).then((result)=>{\n            console.log(result.data);\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\n                localStorage.setItem(\"Token\", result.data.token);\n                props.login(result.data.token,result.data.data);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);   \n            Errorhandler(err,props.logout)\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n    return (\n        <div className=\"login-page-container\">\n            <div className=\"login-section-wrapper\">\n                <Typography.Title level={1}>BANDHAN</Typography.Title>\n                \n                <img src={brandLogo} style={{width:'100px',marginBottom:'20px'}} />\n                <p className=\"brand-sub-name\">ADMIN PANEL</p>\n                <Form\n                    name=\"login-form\"\n                    className=\"login-form\"\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        hasFeedback={true}\n                        rules={[\n                            { \n                                required: true, \n                                message: 'Please input your E-mail!' \n                            },\n                            {\n                                type: 'email',\n                                message: 'The input is not valid E-mail!',\n                            }\n                        ]}\n                    >\n                        <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"email id\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        hasFeedback={true}\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\n                    >\n                        <Input.Password\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </Form.Item>\n                    {/* <Form.Item>\n                        <a className=\"login-form-forgot\" href=\"\">\n                            Forgot password\n                        </a>\n                    </Form.Item> */}\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth,\n});\n  \nexport default connect(mapStateToProps, { \n    loading,\n    login,\n    setUserDetails,\n    logout\n})(Login);","import React from 'react';\nimport \"./loader.less\";\nimport { Typography } from \"antd\";\n\nexport default function EntryLoader() {\n    return (\n        <div className=\"entry-loader-container\">\n            <img src={require(\"../../static/loader.gif\")} className=\"entry-loader-brand-logo\" alt=\"entry-loader\" />\n            <Typography.Title level={4}>Loading...</Typography.Title>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Layout, Row, Col, Badge, Typography, Tooltip, Popover } from 'antd';\nimport {\n    UserOutlined,\n    BellOutlined,\n    SearchOutlined,\n    LogoutOutlined\n} from '@ant-design/icons';\nimport {Link} from \"react-router-dom\";\nimport { logout } from \"../../actions/authAction\"; \nimport {connect} from \"react-redux\";\nimport brandLogo from \"../../static/brand-logo.png\"\n\n\nfunction Header(props) {\n    return (\n        <Layout.Header className=\"dashboard-header-wrapper\" >\n            <Row justify=\"space-between\">\n                <Col>\n                    <Row gutter={20} align=\"middle\">\n                        <Col>\n                            <Link to=\"/admin/dashboard\">\n                                <img src={brandLogo} style={{height:'50px'}}/>\n                            </Link>\n                        </Col>\n                        <Col className=\"header-brand-name-wrapper\">\n                            <Typography.Title className=\"header-brand-name\" level={3}>BANDHAN</Typography.Title>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row gutter={30}>\n                        <Col>\n                            <Badge dot={true}>\n                                <BellOutlined  className=\"header-option-icons\" />\n                            </Badge>\n                        </Col>\n                        <Col>\n                            <Popover placement=\"bottomRight\" trigger=\"click\">\n                                <UserOutlined className=\"header-option-icons\" />\n                            </Popover>\n                        </Col>\n                        <Col>\n                            <Tooltip title=\"logout\">\n                                <LogoutOutlined className=\"header-option-icons\" onClick={props.logout}/>\n                            </Tooltip>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Layout.Header>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Theme : state.Theme\n});\n\nexport default connect(mapStateToProps, { \n    logout\n})(Header);\n\n","import React from \"react\";\nimport {Menu} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined,\n    ShoppingCartOutlined,\n    BranchesOutlined,\n    PictureOutlined\n} from '@ant-design/icons';\n\n\n\nexport const AdminSideBar = (props)=>(\n    <Menu  theme=\"dark\" mode=\"inline\">\n        <Menu.SubMenu key=\"admin1\" title={<span><UserOutlined /><span>USER</span></span>}>\n            <Menu.Item  key=\"11\">\n                <Link to=\"/admin/dashboard/user/create\">\n                    <PlusCircleOutlined />\n                    <span>CREATE USER</span>\n                </Link>\n            </Menu.Item>\n            <Menu.Item  key=\"12\">\n                <Link to=\"/admin/dashboard/user/list\">\n                    <UnorderedListOutlined />\n                    <span>USER LIST</span>\n                </Link>\n            </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.SubMenu key=\"admin2\" title={<span><BranchesOutlined /><span>CATEGORY</span></span>}>\n            <Menu.Item  key=\"21\">\n                <Link to=\"/admin/dashboard/category/create\">\n                    <PlusCircleOutlined />\n                    <span>CREATE CATEGORY</span>\n                </Link>\n            </Menu.Item>\n            <Menu.Item  key=\"22\">\n                <Link to=\"/admin/dashboard/category/list\">\n                    <UnorderedListOutlined />\n                    <span>CATEGORY LIST</span>\n                </Link>\n            </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.SubMenu key=\"admin3\" title={<span><ShoppingCartOutlined /><span>PRODUCT</span></span>}>\n            <Menu.Item  key=\"31\">\n                <Link to=\"/admin/dashboard/product/create\">\n                    <PlusCircleOutlined />\n                    <span>CREATE PRODUCT</span>\n                </Link>\n            </Menu.Item>\n            <Menu.Item  key=\"32\">\n                <Link to=\"/admin/dashboard/product/list\">\n                    <UnorderedListOutlined />\n                    <span>PRODUCT LIST</span>\n                </Link>\n            </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.Item  key=\"admin-44\">\n            <Link to={ `/admin/dashboard/orders`}>\n                <ShoppingCartOutlined />\n                <span>ORDERS</span>\n            </Link>\n        </Menu.Item>\n        <Menu.Item  key=\"admin-54\">\n            <Link to={ `/admin/dashboard/posters`}>\n                <PictureOutlined />\n                <span>POSTERS</span>\n            </Link>\n        </Menu.Item>\n    </Menu>\n)\n\nexport const SellerSideBar = (props)=>(\n    <Menu  theme=\"dark\" mode=\"inline\">\n        <Menu.Item  key=\"32\">\n            <Link to=\"/admin/dashboard/product/list\">\n                <UnorderedListOutlined />\n                <span>PRODUCT LIST</span>\n            </Link>\n        </Menu.Item>\n        <Menu.Item  key=\"33\">\n            <Link to={ `/admin/dashboard/orders`}>\n                <ShoppingCartOutlined />\n                <span>ORDERS</span>\n            </Link>\n        </Menu.Item>\n        <Menu.Item  key=\"34\">\n            <Link to={ `/admin/dashboard/profile/${props.user?props.user._id:\"\"}`}>\n                <UserOutlined />\n                <span>PROFILE</span>\n            </Link>\n        </Menu.Item>\n\n    </Menu>\n)\n\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AdminSideBar,SellerSideBar} from \"../../services/decideSideBar\";\nconst { Sider } = Layout;\n\nfunction SideBar(props) {\n    return (\n        <Sider key={props.Auth.userdetails} trigger={null} collapsible collapsed={props.sideBarCollapsed} className=\"dasboard-sidebar-wrapper\">\n            {\n                props.Auth.userdetails.userType==='admin'?\n                    <AdminSideBar user={props.user} />\n                :null   \n            }\n            {\n                props.Auth.userdetails.userType==='seller'?\n                    <SellerSideBar user={props.user} />\n                :null   \n            }\n        </Sider>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n\n})(SideBar);\n","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag, Button} from \"antd\";\nimport { Link } from \"react-router-dom\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title:'Email Id',\n        dataIndex:'email',\n        key:'email'\n    },\n    {\n        title:'Phone Number',\n        dataIndex:'phoneNumber',\n        key:'phoneNumber'\n    },\n    {\n        title : 'Registration Timestamp',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    },\n    {\n        title : 'CONTROLS',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data,row)=>(\n            <>\n                <Link to={`/admin/dashboard/profile/${row._id}`}>Edit</Link>\n            </>\n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./User.less\";\nimport column from \"./userColumn\";\n\nfunction UserList(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [userData,setUserData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(10);\n    const [userType,setUserType] = useState(\"customer\");\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n    const onUserTypeChange = (value)=>{\n        setCurrentpage(1);\n        setUserType(value);\n    }\n\n    const fetchUserData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize,\n            userType : userType\n        }\n        http.post(apis.LIST_USERS,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setUserData(result.data.data);\n                setTotalData(result.data.total)\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchUserData();\n    },[currentPage,userType])\n\n    return (\n        <div className=\"user-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Users\"\n                subTitle=\"List all Users\"\n                extra={[<Link to=\"/admin/dashboard/user/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create User</Button></Link>]}                \n            />\n            <div className=\"user-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1000 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={userData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    title={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Select\n                                style={{width:'200px'}}\n                                    value={userType}\n                                    onChange={onUserTypeChange}\n                                >\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\n                                </Select>\n                            </Col>\n                        </Row>\n                    )}\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(UserList);","import { message } from 'antd';\n\nexport const beforeUpload = (file,extension,size,cb)=>{\n    console.log(file.size/1024/1024,file.type)\n    const isJpgOrPng = extension.includes(file.type);\n    const isLt2M = (file.size / 1024 / 1024) < size;\n    if (!isJpgOrPng) {\n        message.error('Invalid file type!');\n    }\n    else{\n        if (!isLt2M) {\n            message.error('Too large file!');\n        }\n        else{\n            cb();\n        }\n    }\n}","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    UnorderedListOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./User.less\";\nconst { Option } = Select;\n\nfunction UserCreate(props) {\n    const [form] = Form.useForm(); \n    const [avatar,setAvatar] = useState();\n    const [isAvatarUploading,setIsAvatarUploading] = useState(false);\n    const [userType,setUserType] = useState();\n\n    const onFinish = (data)=>{\n        if(!avatar){\n            message.error(\"please upload an avatar.\")\n        }\n        else{\n            //console.log(avatar,data,apis.USER_CREATE);\n            const {email,name,phoneNumber,userType,password,deliverTo} = data;\n            props.loading(true);\n            http.post(apis.USER_CREATE,{\n                email,\n                name,\n                phoneNumber,\n                userType,\n                password,\n                avatar,\n                deliverTo\n            }).then(result=>{\n                console.log(result.data);\n                if(result.data.status){\n                    message.info(\"User created sucessfully\");\n                    form.resetFields();\n                    setAvatar();\n                    setUserType();\n                }\n                else{\n                    message.error(result.data.message)\n                }\n            }).catch(err=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{    \n                props.loading(false);\n            })\n        }\n    }\n\n    const beforeUploadFunction = (file)=>{\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\n            setIsAvatarUploading(true);\n            const formData = new FormData();\n            formData.append('avatar',file);\n            http.post(apis.UPLOAD_USER_AVATAR,formData,{\n                headers : {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then((result)=>{\n                if(result.data.status){\n                    setAvatar(result.data.file);\n                }\n                else{\n                    message.error(result.data.message);\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                setIsAvatarUploading(false);\n            })\n            \n        })\n        return false;\n    }\n\n\n    return (\n        <div className=\"user-create-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Create Users\"\n                subTitle=\"Add new User\"\n                extra={[<Link to=\"/admin/dashboard/user/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Users</Button></Link>]}                \n            />\n            <div className=\"user-create-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the user's name!` }]}\n                            >\n                                <Input placeholder=\"Name\"  />\n                            </Form.Item>  \n                            <Form.Item \n                                label=\"Email Id\" \n                                name=\"email\"\n                                rules={[{ required: true, message: 'Please enter the email id!' },{type:'email',message:\"Enter a valid email id\"}]}\n                            >\n                                <Input placeholder=\"Email Id\" />\n                            </Form.Item>                         \n                        </Col>\n                        <Col span=\"12\">\n                            <ImgCrop grid={true} shape=\"round\">\n                                <Upload\n                                    name=\"avatar\"\n                                    listType=\"picture-card\"\n                                    className=\"avatar-uploader\"\n                                    showUploadList={false}\n                                    beforeUpload={beforeUploadFunction}\n\n                                >\n                                    {\n                                        avatar?<img src={`${apis.BASE_SERVER_URL}${avatar}`} className=\"uploaded-avatar\"/>\n                                        :\n                                        <div>\n                                            {isAvatarUploading ? <LoadingOutlined /> : <PlusOutlined />}\n                                            <div className=\"ant-upload-text\">Upload</div>\n                                        </div>\n                                    }\n                                </Upload>\n                            </ImgCrop>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Phone Number\" \n                                name=\"phoneNumber\"\n                                rules={[{ required: true, message: 'Please enter the phone number!' },{len:10,message:\"Enter a valid phone number!\"}]}\n                            >\n                                <Input type=\"number\" placeholder=\"Phone Number\" style={{width:'100%'}}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"User type\" \n                                name=\"userType\"\n                                rules={[{ required: true, message: `Please select one option!` }]}\n                            >\n                                <Select\n                                    onChange={setUserType}\n                                    placeholder=\"Select a user type\"\n                                >\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} align=\"bottom\">\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Password\" \n                                name=\"password\"\n                                rules={[{ required: true, message: 'Please enter the password!' },{min:6,message:\"Password must be atleast 6 character long!\"}]}\n                            >\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\n                            </Form.Item>\n                        </Col>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Confirm Password\" \n                                name=\"ConfirmPassword\"\n                                dependencies={['password']}\n                                rules={[\n                                    { required: true, message: 'Please enter the password again!' },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                            if (!value || getFieldValue('password') === value) {\n                                                return Promise.resolve();\n                                            }\n                                            return Promise.reject('The two passwords that you entered do not match!');\n                                        },\n                                    })\n                                ]}\n                            >\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    {\n                        userType===\"seller\"?\n                            <Row justify=\"center\" gutter={16}>\n                                <Col span={24}>\n                                    <Form.Item \n                                        label=\"Delivery Pin Codes\" \n                                        name=\"deliverTo\"\n                                    >\n                                        <Select mode=\"tags\" style={{ width: '100%', minHeight:'50px' }} tokenSeparators={[',']}>\n\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            :\n                            null\n                    }\n                    \n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    Create\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(UserCreate);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    UnorderedListOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nconst { Option } = Select;\n\nfunction CategoryCreate(props) {\n    const [form] = Form.useForm(); \n    \n    const onFinish = (data)=>{\n        console.log(data);\n        let { name } =data;\n        props.loading(true);\n        http.post(apis.CATEGORY_CREATE,{name}).then(result=>{\n            console.log(result.data);\n            if(result.data.status){\n                message.info(\"Category created sucessfully\");\n                form.resetFields();\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch(err=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{    \n            props.loading(false);\n        })\n    }\n\n    return (\n        <div className=\"category-create-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Create Category\"\n                subTitle=\"Add new Category\"\n                extra={[<Link to=\"/admin/dashboard/category/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Categories</Button></Link>]}                \n            />\n            <div className=\"category-create-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Category Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the category name!` }]}\n                            >\n                                <Input placeholder=\"Category Name\"  />\n                            </Form.Item>                          \n                        </Col>\n                    </Row>\n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    Create\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(CategoryCreate);","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag} from \"antd\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title : 'Category Created',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport column from \"./categoryColumn\";\n\nfunction CategoryList(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [categoryData,setCategoryData] = useState([]);\n    const [totalData,setTotalData] = useState(0);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [pageSize,setPageSize] = useState(2);\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n    const fetchCategoryData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setCategoryData(result.data.data);\n                setTotalData(result.data.total)\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchCategoryData();\n    },[currentPage])\n\n    return (\n        <div className=\"category-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Categories\"\n                subTitle=\"List all Categories\"\n                extra={[<Link to=\"/admin/dashboard/category/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Category</Button></Link>]}                \n            />\n            <div className=\"category-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1000 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={categoryData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(CategoryList);","import React from \"react\";\nimport 'draft-js/dist/Draft.css'; \nimport \"./TextEditor.css\";\nimport {Editor, EditorState, RichUtils, getDefaultKeyBinding} from 'draft-js';\n\nclass RichEditorExample extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focus = () => this.refs.editor.focus();\n        this.onChange = (editorState) => this.props.onChange(editorState);\n\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\n        this.toggleBlockType = this._toggleBlockType.bind(this);\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\n    }\n\n    _handleKeyCommand(command, editorState) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.onChange(newState);\n            return true;\n        }\n        return false;\n    }\n\n    _mapKeyToEditorCommand(e) {\n        if (e.keyCode === 9 /* TAB */) {\n            const newEditorState = RichUtils.onTab(\n                e,\n                this.props.editorState,\n                4, /* maxDepth */\n            );\n            if (newEditorState !== this.props.editorState) {\n                this.onChange(newEditorState);\n            }\n            return;\n        }\n        return getDefaultKeyBinding(e);\n    }\n\n    _toggleBlockType(blockType) {\n        this.onChange(\n            RichUtils.toggleBlockType(\n            this.props.editorState,\n            blockType\n            )\n        );\n    }\n\n    _toggleInlineStyle(inlineStyle) {\n        this.onChange(\n            RichUtils.toggleInlineStyle(\n                this.props.editorState,\n                inlineStyle\n            )\n        );\n    }\n\n    render() {\n        const {editorState} = this.props;\n\n        // If the user changes block type before entering any text, we can\n        // either style the placeholder or hide it. Let's just hide it now.\n        let className = 'RichEditor-editor';\n        var contentState = editorState.getCurrentContent();\n        if (!contentState.hasText()) {\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n            className += ' RichEditor-hidePlaceholder';\n            }\n        }\n\n        return (\n            <div className=\"RichEditor-root\">\n                <BlockStyleControls\n                    editorState={editorState}\n                    onToggle={this.toggleBlockType}\n                />\n                <InlineStyleControls\n                    editorState={editorState}\n                    onToggle={this.toggleInlineStyle}\n                />\n                <div className={className} onClick={this.focus}>\n                    <Editor\n                        blockStyleFn={getBlockStyle}\n                        customStyleMap={styleMap}\n                        editorState={editorState}\n                        handleKeyCommand={this.handleKeyCommand}\n                        keyBindingFn={this.mapKeyToEditorCommand}\n                        onChange={this.onChange}\n                        placeholder=\"Product Description\"\n                        ref=\"editor\"\n                        spellCheck={true}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n    CODE: {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 16,\n        padding: 2,\n    },\n};\n\nfunction getBlockStyle(block) {\n    switch (block.getType()) {\n        case 'blockquote': return 'RichEditor-blockquote';\n        default: return null;\n    }\n}\n\nclass StyleButton extends React.Component {\n    constructor() {\n        super();\n        this.onToggle = (e) => {\n            e.preventDefault();\n            this.props.onToggle(this.props.style);\n        };\n    }\n\n    render() {\n        let className = 'RichEditor-styleButton';\n        if (this.props.active) {\n            className += ' RichEditor-activeButton';\n        }\n\n        return (\n            <span className={className} onMouseDown={this.onToggle}>\n            {this.props.label}\n            </span>\n        );\n    }\n}\n\nconst BLOCK_TYPES = [\n    {label: 'H1', style: 'header-one'},\n    {label: 'H2', style: 'header-two'},\n    {label: 'H3', style: 'header-three'},\n    {label: 'H4', style: 'header-four'},\n    {label: 'H5', style: 'header-five'},\n    {label: 'H6', style: 'header-six'},\n    {label: 'Blockquote', style: 'blockquote'},\n    {label: 'UL', style: 'unordered-list-item'},\n    {label: 'OL', style: 'ordered-list-item'},\n    {label: 'Code Block', style: 'code-block'},\n];\n\nconst BlockStyleControls = (props) => {\n    const {editorState} = props;\n    const selection = editorState.getSelection();\n    const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n    return (\n        <div className=\"RichEditor-controls\">\n            {BLOCK_TYPES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={type.style === blockType}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\nvar INLINE_STYLES = [\n    {label: 'Bold', style: 'BOLD'},\n    {label: 'Italic', style: 'ITALIC'},\n    {label: 'Underline', style: 'UNDERLINE'},\n    {label: 'Monospace', style: 'CODE'},\n];\n\nconst InlineStyleControls = (props) => {\n    const currentStyle = props.editorState.getCurrentInlineStyle();\n    return (\n        <div className=\"RichEditor-controls\">\n            {INLINE_STYLES.map((type) =>\n                <StyleButton\n                    key={type.label}\n                    active={currentStyle.has(type.style)}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            )}\n        </div>\n    );\n};\n\n\n\nexport default RichEditorExample;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    MinusCircleOutlined,\n    PlusOutlined,\n    UnorderedListOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport RichRextEditor from \"../../services/TextEditor\";\nimport {EditorState,convertToRaw,ContentState} from 'draft-js';\nimport \"./Product.less\";\nconst { Option } = Select;\nconst propertyKey = [\"KG\",\"GRAM\",\"Pack\",\"Piece\",\"LTR\",\"ML\"]\n\nfunction ProductCreate(props) {\n    const [form] = Form.useForm(); \n    const [images,setImages] = useState([{link:null,loading:false,hasremove:false}]);\n    const [properties,setProperties] = useState([])\n    const [allCategories,setAllCategories] = useState([]);\n    const [productDescription, setProductDescription] = useState(() => EditorState.createEmpty())\n\n    const fetchAllCategory = ()=>{\n        props.loading(true);\n        let body = {\n            pageNumber : 1,\n            pageSize : 1000\n        }\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setAllCategories(result.data.data);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n    const beforeUploadFunction = (file,index)=>{\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\n            let img1 = [...images];\n            img1[index][\"loading\"]=true;\n            setImages(img1);\n            const formData = new FormData();\n            formData.append('image',file);\n            http.post(apis.UPLOAD_PRODUCT_IMAGE,formData,{\n                headers : {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then((result)=>{\n                if(result.data.status){\n                    let img2 = [...images];\n                    img2[index][\"link\"]=result.data.file;\n                    setImages(img2);\n                }\n                else{\n                    message.error(result.data.message);\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                let img3 = [...images];\n                img3[index][\"loading\"]=false;\n                setImages(img3);\n            })\n            \n        })\n        return false;\n    }\n\n    useEffect(()=>{\n        fetchAllCategory();\n    },[])\n\n    const onFinish = (data)=>{\n        let accepted=true;\n        properties.forEach((ele,i)=>{\n            if(ele && ele.type && ele.value){\n                \n            }\n            else{\n                accepted = false;\n            }\n        })\n        if(isAllImagePresent()){\n            if(accepted){\n                let raw = convertToRaw(productDescription.getCurrentContent());\n                const {name,category,regularPrice,salePrice,productVideo} = data;\n                let body = {\n                    name,\n                    category,\n                    regularPrice,\n                    salePrice,\n                    images : images.map(ele=>ele.link),\n                    description : JSON.stringify(raw),\n                    properties,\n                    productVideo\n                }\n                console.log(body);\n                props.loading(true);\n                http.post(apis.CREATE_PRODUCT,body).then((result)=>{\n                    if(result.data.status){\n                        message.success(result.data.message);\n                        form.resetFields();\n                        setImages([{link:null,loading:false,hasremove:false}]);\n                        const editorState = EditorState.push(productDescription, ContentState.createFromText(''));\n                        setProductDescription(editorState);\n                    }\n                    else{\n                        message.error(result.data.message)\n                    }\n                }).catch((err)=>{\n                    console.log(err);\n                    Errorhandler(err,props.logout);\n                }).finally(()=>{\n                    props.loading(false);\n                })\n            }\n            else{\n                message.error('Please clear the unwanted properties')   \n            }\n            \n        }\n        else{\n            message.error('Please upload all images or remove them')   \n        }\n    }\n\n\n    const addImage = ()=>{\n        let img = [...images];\n        let l = img.length;\n        if(img[l-1].link){\n            img.push({link:null,loading:false,hasremove:true});\n            let newImg = img.map(ele=>{\n                return {\n                    ...ele,\n                    hasremove : true\n                }\n            })\n            setImages(newImg);        \n        }\n        \n    }\n\n    const removeImage = (ind)=>{\n        let img = [...images];\n        let l = img.length;\n        if(l>1){\n            img.splice(ind, 1);\n        }\n        if(l==2){\n            img[0][\"hasremove\"]=false;\n        }\n        setImages(img);\n    }\n\n    const isAllImagePresent = ()=>{\n        var flag = true;\n        images.forEach(ele=>{\n            if(!ele.link){\n                flag = false;\n            }\n        })\n        return flag\n    }\n\n\n    const addProperty = ()=>{\n        let p = [...properties]\n        p.push({type:\"\",value:\"\"})\n        setProperties(p)\n    }\n\n\n    const setPropertyType = (index,value)=>{\n        let p = [...properties]\n        p[index].type=value;\n        setProperties(p)\n    }\n    const changePropertyValue = (index,value)=>{\n        let p = [...properties]\n        p[index].value=value;\n        setProperties(p)\n    }\n\n    const removeProperty = (index)=>{\n        let p = [...properties]\n        p.splice(index, 1);\n        setProperties(p)\n    }\n\n\n    return (\n        <div className=\"product-create-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Create Product\"\n                subTitle=\"Add new Product\"\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Products</Button></Link>]}                \n            />\n            <div className=\"product-create-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form product-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Product Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the product name` }]}\n                            >\n                                <Input placeholder=\"Product Name\"  />\n                            </Form.Item>                         \n                        </Col>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Categories\"\n                                name=\"category\"\n\n                                rules={[{ required: true, message: `Please select the categories` }]}\n                            >\n                                <Select\n                                    showSearch\n                                    placeholder=\"Select one or more category\"\n                                    mode=\"multiple\"\n                                    filterOption={(input, option) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    {\n                                        allCategories.map((ele,i)=>(\n                                            <Select.Option key={i} value={ele._id}>{ele.name}</Select.Option>\n                                        ))\n                                    }\n                                    \n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} style={{marginBottom:'40px'}}>\n                        <Col span=\"24\">\n                            <RichRextEditor editorState={productDescription} onChange={setProductDescription} />\n                        </Col>\n                    </Row>\n                    <Row gutter={16} style={{marginBottom:'20px'}}>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Regular Price (in rupees)\" \n                                name=\"regularPrice\"\n                                rules={[{ required: true, message: `Please enter the regular Price` }]}\n                            >\n                                <Input placeholder=\"Regular Price\" type=\"number\"  />\n                            </Form.Item> \n                        </Col>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Sale Price (in rupees)\" \n                                name=\"salePrice\"\n                            >\n                                <Input placeholder=\"Sale Price\" type=\"number\"  />\n                            </Form.Item> \n                        </Col>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Product Video( video Id only)\" \n                                name=\"productVideo\"\n                            >\n                                <Input placeholder=\"Product video( video Id only)\"  />\n                            </Form.Item>                         \n                        </Col>\n                    </Row>\n                    <p style={{marginBottom:'10px'}}>Product Properties</p>\n                    \n                        {properties.map((ele,i)=>(\n                            <Row gutter={16} key={i} style={{marginBottom:'5px'}}>\n                                <Col span=\"8\" >\n                                    <Select\n                                        showSearch\n                                        placeholder=\"Select a property\"\n                                        style={{width:\"100%\"}}\n                                        value={ele.type}\n                                        filterOption={(input, option) =>\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                        onChange={(val)=>setPropertyType(i,val)}\n                                    >\n                                        <Select.Option key={11111} value={\"\"}>please select a key</Select.Option>\n                                        {\n                                            \n                                            propertyKey.map((eleee,ii)=>(\n                                                <Select.Option key={ii} value={eleee}>{eleee}</Select.Option>\n                                            ))\n                                        }\n                                        \n                                    </Select>\n                                </Col>\n                                <Col span=\"8\" >\n                                    <Input type=\"text\" onChange={(val)=>changePropertyValue(i,val.target.value)} placeholder=\"please enter the value\" value={ele.value} />\n                                </Col>\n                                <Col span=\"8\" >\n                                    <Button onClick={()=>removeProperty(i)}>\n                                        remove\n                                    </Button>\n                                </Col>\n                            </Row>\n                            \n                        ))}\n                    \n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\n                        <Col>\n                            <Button type=\"default\" onClick={addProperty}>Add Propert</Button>\n                        </Col>\n                    </Row>\n\n\n                    <p style={{marginBottom:'10px'}}>Product Images</p>\n\n                    <Row gutter={16}>\n                        {images.map((ele,i)=>(\n                            <Col span=\"8\" key={i}>\n                                <ImgCrop \n                                    grid={true} \n                                    shape=\"rect\"\n                                    aspect={0.75}\n                                >\n                                    <Upload\n                                        name={`image${i}`}\n                                        listType=\"picture-card\"\n                                        className=\"image-uploader\"\n                                        showUploadList={false}\n                                        beforeUpload={(fl)=>beforeUploadFunction(fl,i)}\n\n                                    >\n                                        {\n                                            ele.link?<img src={`${apis.BASE_SERVER_URL}${ele.link}`} className=\"uploaded-image\"/>\n                                            :\n                                            <div>\n                                                {ele.loading ? <LoadingOutlined /> : <PlusOutlined />}\n                                                <div className=\"ant-upload-text\">Upload</div>\n                                            </div>\n                                        }\n                                    </Upload>\n                                </ImgCrop>\n                                {ele.hasremove?<Button type=\"default\" onClick={()=>removeImage(i)}>Remove Image</Button>:null}\n                            </Col>\n                        ))}\n                        \n                    </Row>\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\n                        <Col>\n                            <Button type=\"default\" onClick={addImage}>Add Image</Button>\n                        </Col>\n                    </Row>\n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    Create\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductCreate);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    MinusCircleOutlined,\n    PlusOutlined,\n    UnorderedListOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport RichRextEditor from \"../../services/TextEditor\";\nimport {EditorState,convertToRaw,ContentState,convertFromRaw} from 'draft-js';\nimport \"./Product.less\";\nconst { Option } = Select;\nconst propertyKey = [\"KG\",\"GRAM\",\"Pack\",\"Piece\",\"LTR\",\"ML\"]\n\nfunction ProductEdit(props) {\n    const {id} = useParams();\n    const [form] = Form.useForm(); \n    const [images,setImages] = useState([{link:null,loading:false,hasremove:false}]);\n    const [properties,setProperties] = useState([])\n    const [allCategories,setAllCategories] = useState([]);\n    const [productDescription, setProductDescription] = useState(() => EditorState.createEmpty())\n\n    const fetchAllCategory = ()=>{\n        props.loading(true);\n        let body = {\n            pageNumber : 1,\n            pageSize : 1000\n        }\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setAllCategories(result.data.data);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n    const fetchProductDetails = ()=>{\n        props.loading(true);\n        http.get(`${apis.PRODUCT_DETAILS_FOR_ADMIN}/${id}`).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                console.log(result.data.data)\n                form.setFieldsValue({\n                    name : result.data.data.name,\n                    category : result.data.data.category.map(e=>e._id),\n                    regularPrice:result.data.data.regularPrice,\n                    salePrice:result.data.data.salePrice,\n                    productVideo:result.data.data.productVideo\n                })\n                let imgs = result.data.data.images.map((img,c)=>{\n                    let d = {\n                        link:img,loading:false,hasremove:false\n                    }\n                    if(c!=0){\n                        d[\"hasremove\"]=true\n                    }\n                    return d\n                })\n                setImages(imgs)\n                setProperties(result.data.data.properties)\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\n                const editorState = EditorState.createWithContent(contentState);\n                setProductDescription(editorState)\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n    const beforeUploadFunction = (file,index)=>{\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\n            let img1 = [...images];\n            img1[index][\"loading\"]=true;\n            setImages(img1);\n            const formData = new FormData();\n            formData.append('image',file);\n            http.post(apis.UPLOAD_PRODUCT_IMAGE,formData,{\n                headers : {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then((result)=>{\n                if(result.data.status){\n                    let img2 = [...images];\n                    img2[index][\"link\"]=result.data.file;\n                    setImages(img2);\n                }\n                else{\n                    message.error(result.data.message);\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                let img3 = [...images];\n                img3[index][\"loading\"]=false;\n                setImages(img3);\n            })\n            \n        })\n        return false;\n    }\n\n    useEffect(()=>{\n        fetchAllCategory();\n    },[])\n\n    useEffect(()=>{\n        if(allCategories.length>0){\n            fetchProductDetails()\n        }\n    },[allCategories])\n\n    const onFinish = (data)=>{\n        let accepted=true;\n        properties.forEach((ele,i)=>{\n            if(ele && ele.type && ele.value){\n                \n            }\n            else{\n                accepted = false;\n            }\n        })\n        if(isAllImagePresent()){\n            if(accepted){\n                let raw = convertToRaw(productDescription.getCurrentContent());\n                const {name,category,regularPrice,salePrice,productVideo} = data;\n                let body = {\n                    name,\n                    category,\n                    regularPrice,\n                    salePrice,\n                    images : images.map(ele=>ele.link),\n                    description : JSON.stringify(raw),\n                    properties,\n                    productVideo\n                }\n                console.log(body);\n                props.loading(true);\n                http.post(`${apis.EDIT_PRODUCT}/${id}`,body).then((result)=>{\n                    if(result.data.status){\n                        message.success(result.data.message);\n                    }\n                    else{\n                        message.error(result.data.message)\n                    }\n                }).catch((err)=>{\n                    console.log(err);\n                    Errorhandler(err,props.logout);\n                }).finally(()=>{\n                    props.loading(false);\n                })\n            }\n            else{\n                message.error('Please clear the unwanted properties')   \n            }\n            \n        }\n        else{\n            message.error('Please upload all images or remove them')   \n        }\n    }\n\n\n    const addImage = ()=>{\n        let img = [...images];\n        let l = img.length;\n        if(img[l-1].link){\n            img.push({link:null,loading:false,hasremove:true});\n            let newImg = img.map(ele=>{\n                return {\n                    ...ele,\n                    hasremove : true\n                }\n            })\n            setImages(newImg);        \n        }\n        \n    }\n\n    const removeImage = (ind)=>{\n        let img = [...images];\n        let l = img.length;\n        if(l>1){\n            img.splice(ind, 1);\n        }\n        if(l==2){\n            img[0][\"hasremove\"]=false;\n        }\n        setImages(img);\n    }\n\n    const isAllImagePresent = ()=>{\n        var flag = true;\n        images.forEach(ele=>{\n            if(!ele.link){\n                flag = false;\n            }\n        })\n        return flag\n    }\n\n\n    const addProperty = ()=>{\n        let p = [...properties]\n        p.push({type:\"\",value:\"\"})\n        setProperties(p)\n    }\n\n\n    const setPropertyType = (index,value)=>{\n        let p = [...properties]\n        p[index].type=value;\n        setProperties(p)\n    }\n    const changePropertyValue = (index,value)=>{\n        let p = [...properties]\n        p[index].value=value;\n        setProperties(p)\n    }\n\n    const removeProperty = (index)=>{\n        let p = [...properties]\n        p.splice(index, 1);\n        setProperties(p)\n    }\n\n\n    return (\n        <div className=\"product-create-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Edit Product\"\n                subTitle=\"Update Product\"\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Products</Button></Link>]}                \n            />\n            <div className=\"product-create-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form product-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Product Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the product name` }]}\n                            >\n                                <Input placeholder=\"Product Name\"  />\n                            </Form.Item>                         \n                        </Col>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Categories\"\n                                name=\"category\"\n\n                                rules={[{ required: true, message: `Please select the categories` }]}\n                            >\n                                <Select\n                                    showSearch\n                                    placeholder=\"Select one or more category\"\n                                    mode=\"multiple\"\n                                    filterOption={(input, option) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    {\n                                        allCategories.map((ele,i)=>(\n                                            <Select.Option key={i} value={ele._id}>{ele.name}</Select.Option>\n                                        ))\n                                    }\n                                    \n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} style={{marginBottom:'40px'}}>\n                        <Col span=\"24\">\n                            <RichRextEditor editorState={productDescription} onChange={setProductDescription} />\n                        </Col>\n                    </Row>\n                    <Row gutter={16} style={{marginBottom:'20px'}}>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Regular Price (in rupees)\" \n                                name=\"regularPrice\"\n                                rules={[{ required: true, message: `Please enter the regular Price` }]}\n                            >\n                                <Input placeholder=\"Regular Price\" type=\"number\"  />\n                            </Form.Item> \n                        </Col>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Sale Price (in rupees)\" \n                                name=\"salePrice\"\n                            >\n                                <Input placeholder=\"Sale Price\" type=\"number\"  />\n                            </Form.Item> \n                        </Col>\n                        <Col span=\"8\">\n                            <Form.Item \n                                label=\"Product Video( video Id only)\" \n                                name=\"productVideo\"\n                            >\n                                <Input placeholder=\"Product video( video Id only)\"  />\n                            </Form.Item>                         \n                        </Col>\n                    </Row>\n                    <p style={{marginBottom:'10px'}}>Product Properties</p>\n                    \n                        {properties.map((ele,i)=>(\n                            <Row gutter={16} key={i} style={{marginBottom:'5px'}}>\n                                <Col span=\"8\" >\n                                    <Select\n                                        showSearch\n                                        placeholder=\"Select a property\"\n                                        style={{width:\"100%\"}}\n                                        value={ele.type}\n                                        filterOption={(input, option) =>\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                        onChange={(val)=>setPropertyType(i,val)}\n                                    >\n                                        <Select.Option key={11111} value={\"\"}>please select a key</Select.Option>\n                                        {\n                                            \n                                            propertyKey.map((eleee,ii)=>(\n                                                <Select.Option key={ii} value={eleee}>{eleee}</Select.Option>\n                                            ))\n                                        }\n                                        \n                                    </Select>\n                                </Col>\n                                <Col span=\"8\" >\n                                    <Input type=\"text\" onChange={(val)=>changePropertyValue(i,val.target.value)} placeholder=\"please enter the value\" value={ele.value} />\n                                </Col>\n                                <Col span=\"8\" >\n                                    <Button onClick={()=>removeProperty(i)}>\n                                        remove\n                                    </Button>\n                                </Col>\n                            </Row>\n                            \n                        ))}\n                    \n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\n                        <Col>\n                            <Button type=\"default\" onClick={addProperty}>Add Propert</Button>\n                        </Col>\n                    </Row>\n\n\n                    <p style={{marginBottom:'10px'}}>Product Images</p>\n\n                    <Row gutter={16}>\n                        {images.map((ele,i)=>(\n                            <Col span=\"8\" key={i}>\n                                <ImgCrop \n                                    grid={true} \n                                    shape=\"rect\"\n                                    aspect={0.75}\n                                >\n                                    <Upload\n                                        name={`image${i}`}\n                                        listType=\"picture-card\"\n                                        className=\"image-uploader\"\n                                        showUploadList={false}\n                                        beforeUpload={(fl)=>beforeUploadFunction(fl,i)}\n\n                                    >\n                                        {\n                                            ele.link?<img src={`${apis.BASE_SERVER_URL}${ele.link}`} className=\"uploaded-image\"/>\n                                            :\n                                            <div>\n                                                {ele.loading ? <LoadingOutlined /> : <PlusOutlined />}\n                                                <div className=\"ant-upload-text\">Upload</div>\n                                            </div>\n                                        }\n                                    </Upload>\n                                </ImgCrop>\n                                {ele.hasremove?<Button type=\"default\" onClick={()=>removeImage(i)}>Remove Image</Button>:null}\n                            </Col>\n                        ))}\n                        \n                    </Row>\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\n                        <Col>\n                            <Button type=\"default\" onClick={addImage}>Add Image</Button>\n                        </Col>\n                    </Row>\n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    UPDATE\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductEdit);","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag,Button} from \"antd\";\nimport apis from \"../../services/apis\";\nimport {Link} from \"react-router-dom\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title:'Image',\n        dataIndex:'images',\n        key:'images',\n        render : (img)=>{\n            if(img && Array.isArray(img) && img.length>0){\n                return(\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\n                )\n            }\n            else{\n                return null\n            }\n        }\n    },\n    {\n        title:'Categories',\n        dataIndex:'category',\n        key:'category',\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\n    },\n    {\n        title:'Regular Price',\n        dataIndex:'regularPrice',\n        key:'regularPrice'\n    },\n    {\n        title:'Sale Price',\n        dataIndex:'salePrice',\n        key:'salePrice'\n    },\n    {\n        title : 'Created On',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    },\n    {\n        title : \"Operations\",\n        render : (data)=>(\n            <>\n                <Link to={`/admin/dashboard/product/details/${data._id}`}>\n                    <Button type=\"default\">Details</Button>            \n                </Link>\n                <Link to={`/admin/dashboard/product/edit/${data._id}`}>\n                    <Button type=\"default\">Edit</Button>            \n                </Link>\n            </>\n            \n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport column from \"./productcolumnAdmin\";\nimport {Link} from \"react-router-dom\";\n\nfunction ProductListAdmin(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [productData,setProductData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(5);\n\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n\n    const fetchProductData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(apis.LIST_PRODUCTS_FOR_ADMIN,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductData(result.data.data);\n                setTotalData(result.data.total);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductData();\n    },[currentPage])\n\n    \n\n    return (\n        <div className=\"product-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Products\"\n                subTitle=\"List all products\"\n                extra={[<Link to=\"/admin/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \n            />\n            <div className=\"product-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1200 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={productData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductListAdmin);","import React from 'react';\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\nimport apis from \"../../services/apis\";\nimport moment from \"moment\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nconst { Title } = Typography;\n\n\nexport default function ProductDetailsCommon(props) {\n    return (\n        <Row gutter={16}>\n            <Col span=\"8\">\n                <Carousel autoplay>\n                    {props.productDetails && props.productDetails.images.map((ele,i)=>(\n                        <img src={`${apis.BASE_SERVER_URL}${ele}`} key={i} className=\"product-image\" />\n                    ))}\n                    \n                </Carousel>\n            </Col>\n            <Col span=\"16\">\n                <div className=\"product-detains-inner\">\n                    <Row justify=\"space-between\">\n                        <Col>\n                            <Title level={2}>{props.productDetails && props.productDetails.name}</Title>\n                            {props.productDetails && <p className=\"regularPrice\">Regular Price : {props.productDetails.regularPrice}</p>}\n                            {props.productDetails && props.productDetails.salePrice && <p className=\"salePrice\">Sale Price : {props.productDetails.salePrice}</p>}\n                            {props.productDetails && props.productDetails.properties && props.productDetails.properties.map((ele,i)=>(\n                                <p className=\"properties-single\" key={i}>{ele.type} : {ele.value} </p>\n                            ))}\n                        </Col>\n                        <Col>\n                            <Title level={4}>{props.productDetails && moment(props.productDetails.createdAt).format(\"DD-MM-YYYY\")}</Title>\n                        </Col>\n                    </Row>\n                    \n                    {props.productDetails && props.productDetails.category.map((ele,i)=>(<Tag key={i} color={\"magenta\"}>{ele.name}</Tag>))}\n                    <div style={{marginBottom:'30px'}} />\n                    <Editor editorState={props.productDescription} readOnly={true} />\n                </div>\n            </Col>\n        </Row>\n    )\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag,Button} from \"antd\";\nimport apis from \"../../services/apis\";\nimport {Link} from \"react-router-dom\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n    },\n    {\n        title: 'Phone Number',\n        dataIndex: 'phoneNumber',\n        key: 'phoneNumber'\n    },\n    {\n        title: 'Stock',\n        dataIndex: 'stock',\n        key: 'stock'\n    },\n    {\n        title : 'Pin Codes',\n        dataIndex : 'deliverTo',\n        key:'deliverTo',\n        render : (data)=>{\n            let arr=data.map((ele,i)=>\n                <Tag key={i}>\n                    {ele}\n                </Tag>\n            )\n            return arr\n        }\n    },\n    \n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { Table,Pagination,Row,Col,Typography,message } from 'antd';\nimport {loading} from \"../../actions/loadingAction\";\nimport moment from \"moment\";\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport column from \"./stockColumnAdmin\";\nconst { Title } = Typography;\n\n\nexport default function ProductStockAdmin(props) {\n    const [productStock,setProductStock] = useState([]);\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(10);\n\n\n    useEffect(()=>{\n        fetchProducStock();\n    },[currentPage])\n\n\n\n    const fetchProducStock = ()=>{  \n        setIstableLoading(true);\n        let body = {\n            productId:props._id,\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(`${apis.STOCK_LIST_FOR_ADMIN}`,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setTotalData(result.data.total);\n                let stock = result.data.data.map(ele=>{\n                    return{\n                        ...ele,\n                        ...ele.seller,\n                        seller:null\n                    }\n                })\n                console.log(stock)\n                setProductStock(stock)\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false);\n        })\n    }\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n\n\n\n\n    return (\n        <div>\n            <Table \n                scroll={{ x: 1000 }} \n                bordered={true} \n                pagination={false} \n                loading={isTableLoading} \n                dataSource={productStock} \n                columns={column} \n                rowKey=\"_id\"\n                footer={() =>(\n                    <Row gutter={16} justify=\"end\">\n                        <Col>\n                            <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                        </Col>\n                    </Row>\n                )}\n            />\n        </div>\n    )\n}\n","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport moment from \"moment\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport {Link,useParams} from \"react-router-dom\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\nimport ProductStockAdmin from \"./ProductStockAdmin\"\nconst { Title } = Typography;\n\nfunction ProductDetailsAdmin(props) {\n    const {id} = useParams();\n    const [productDetails,setProductDetails] = useState();\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\n\n\n    const fetchProductDetails = ()=>{\n        props.loading(true);\n        http.get(`${apis.PRODUCT_DETAILS_FOR_ADMIN}/${id}`).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductDetails(result.data.data);\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\n                const editorState = EditorState.createWithContent(contentState);\n                setProductDescription(editorState)\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductDetails();\n    },[])\n\n    return (\n        <div className=\"product-details-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Product Details\"\n                subTitle={productDetails?productDetails.name:\"\"}\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \n            />\n            <div className=\"product-details-inner padding-after-page-header\" >\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\n            </div>\n            <div className=\"product-stok-table-wrapper\">\n                <h2>Seller Stock</h2>\n                <ProductStockAdmin _id={id}/>\n            </div>\n            \n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductDetailsAdmin);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport { Link,useParams } from \"react-router-dom\";\nimport {\n    LoadingOutlined,\n    PlusCircleOutlined,\n    UnorderedListOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./MyProfile.less\";\nconst { Option } = Select;\n\nfunction MyProfile(props) {\n    const {id} = useParams();\n    const [form] = Form.useForm(); \n    const [avatar,setAvatar] = useState();\n    const [isAvatarUploading,setIsAvatarUploading] = useState(false);\n    const [userType,setUserType] = useState();\n    const [profile,setProfile] = useState()\n\n    useEffect(()=>{\n        fetchProfileData()\n    },[])\n\n    const fetchProfileData = ()=>{\n        props.loading(true);\n        http.get(`${apis.GET_PROFILE_DETAILS}?_id=${id}`).then((result)=>{\n            console.log(result.data);\n            if(result.data.status){\n                let user = result.data.data;\n                setAvatar(user.avatar);\n                form.setFieldsValue({ \n                    name:user.name,\n                    email:user.email,\n                    phoneNumber:user.phoneNumber   \n                });\n                setProfile(user)\n                if(user.userType==='seller'){\n                    form.setFieldsValue({ \n                        deliverTo:user.deliverTo  \n                    });\n                }\n                setUserType(user.userType);\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            message.error(\"server errror\")\n        }).finally(()=>{    \n            props.loading(false);\n        })\n    }\n\n\n    const onFinish = (data)=>{\n        //console.log(avatar,data,apis.USER_CREATE);\n        const {email,name,phoneNumber,deliverTo} = data;\n        props.loading(true);\n        http.post(apis.UPDATE_PROFILE_DETAILS,{\n            _id:profile._id,\n            email,\n            name,\n            phoneNumber,\n            avatar,\n            deliverTo\n        }).then(result=>{\n            console.log(result.data);\n            if(result.data.status){\n                message.info(\"User updated sucessfully\");\n                fetchProfileData();\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch(err=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{    \n            props.loading(false);\n        })\n    }\n\n    const beforeUploadFunction = (file)=>{\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\n            setIsAvatarUploading(true);\n            const formData = new FormData();\n            formData.append('avatar',file);\n            http.post(apis.UPLOAD_USER_AVATAR,formData,{\n                headers : {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then((result)=>{\n                if(result.data.status){\n                    setAvatar(result.data.file);\n                    \n                }\n                else{\n                    message.error(result.data.message);\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                setIsAvatarUploading(false);\n            })\n            \n        })\n        return false;\n    }\n\n\n    return (\n        <div className=\"my-profile-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"PROFILE\"\n                subTitle=\"Edit profile\"\n                extra={[]}                \n            />\n            <div className=\"my-profile-from padding-after-page-header\" >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onFinish}\n                    scrollToFirstError={true}\n                    className=\"basic-form\"\n                >\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Name\" \n                                name=\"name\"\n                                rules={[{ required: true, message: `Please enter the user's name!` }]}\n                            >\n                                <Input placeholder=\"Name\"  />\n                            </Form.Item>  \n                            <Form.Item \n                                label=\"Email Id\" \n                                name=\"email\"\n                                rules={[{ required: true, message: 'Please enter the email id!' },{type:'email',message:\"Enter a valid email id\"}]}\n                            >\n                                <Input placeholder=\"Email Id\" />\n                            </Form.Item>                         \n                        </Col>\n                        <Col span=\"12\">\n                            <ImgCrop grid={true} shape=\"round\">\n                                <Upload\n                                    name=\"avatar\"\n                                    listType=\"picture-card\"\n                                    className=\"avatar-uploader\"\n                                    showUploadList={false}\n                                    beforeUpload={beforeUploadFunction}\n\n                                >\n                                    {\n                                        avatar?<img src={`${apis.BASE_SERVER_URL}${avatar}`} className=\"uploaded-avatar\"/>\n                                        :\n                                        <div>\n                                            {isAvatarUploading ? <LoadingOutlined /> : <PlusOutlined />}\n                                            <div className=\"ant-upload-text\">Upload</div>\n                                        </div>\n                                    }\n                                </Upload>\n                            </ImgCrop>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span=\"12\">\n                            <Form.Item \n                                label=\"Phone Number\" \n                                name=\"phoneNumber\"\n                                rules={[{ required: true, message: 'Please enter the phone number!' },{len:10,message:\"Enter a valid phone number!\"}]}\n                            >\n                                <Input type=\"number\" placeholder=\"Phone Number\" style={{width:'100%'}}/>\n                            </Form.Item>\n                        </Col>                        \n                    </Row>\n                    {\n                        userType===\"seller\"?\n                            <Row justify=\"center\" gutter={16}>\n                                <Col span={24}>\n                                    <Form.Item \n                                        label=\"Delivery Pin Codes\" \n                                        name=\"deliverTo\"\n                                    >\n                                        <Select mode=\"tags\" style={{ width: '100%', minHeight:'50px' }} tokenSeparators={[',']}>\n\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            :\n                            null\n                    }\n                    \n                    <Row justify=\"end\" gutter={16}>\n                        <Col>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" >\n                                    UPDATE\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(MyProfile);","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag,Button} from \"antd\";\nimport apis from \"../../services/apis\";\nimport {Link} from \"react-router-dom\";\n\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title:'Image',\n        dataIndex:'images',\n        key:'images',\n        render : (img)=>{\n            if(img && Array.isArray(img) && img.length>0){\n                return(\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\n                )\n            }\n            else{\n                return null\n            }\n        }\n    },\n    {\n        title:'Categories',\n        dataIndex:'category',\n        key:'category',\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\n    },\n    {\n        title:'Stock',\n        dataIndex:'stock',\n        key:'stock'\n    },\n    {\n        title:'Regular Price',\n        dataIndex:'regularPrice',\n        key:'regularPrice'\n    },\n    {\n        title:'Sale Price',\n        dataIndex:'salePrice',\n        key:'salePrice'\n    },\n    {\n        title : 'Stock Updated',\n        dataIndex : 'stockUpdated',\n        key:'stockUpdated',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\n            </Tag>\n        )\n    },\n    {\n        title : \"Operations\",\n        render : (data)=>(\n            <Link to={`/admin/dashboard/product/details/${data.productId}`}>\n                <Button type=\"default\">Details</Button>            \n            </Link>\n        )\n    }\n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport column from \"./productcolumnSeller\";\nimport {Link} from \"react-router-dom\";\n\nfunction ProductListSeller(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [productData,setProductData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(5);\n\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n\n    const fetchProductData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(apis.LIST_PRODUCT_FOR_SELLER,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductData(result.data.data);\n                setTotalData(result.data.total);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductData();\n    },[currentPage])\n\n    \n\n    return (\n        <div className=\"product-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Products\"\n                subTitle=\"List all products\"\n                extra={[<Link to=\"/admin/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \n            />\n            <div className=\"product-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1200 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={productData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductListSeller);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Card,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\n\nfunction UpdateProductStock(props) {\n    const [form] = Form.useForm(); \n    const [isDisabled,setIsDisabled] = useState(true)\n\n\n    const onFinish = (data)=>{\n        if(isDisabled){\n            setIsDisabled(false);\n        }\n        else{\n            let {stock} = data;\n            try{\n                let n = parseInt(stock);\n                if(n>=0){\n                    props.loading(true);\n                    http.post(apis.UPDATE_PRODUCT_STOCK_SELLER,{\n                        id : props.productDetails._id,\n                        stock\n                    }).then((result)=>{\n                        console.log(result.data)\n                        if(result.data.status){\n                            message.success(result.data.message)\n                            setIsDisabled(true);\n                        }\n                        else{\n                            message.error(result.data.message)\n                        }\n                    }).catch((err)=>{\n                        console.log(err);\n                        Errorhandler(err,props.logout);\n                    }).finally(()=>{\n                        props.loading(false);\n                    })\n                }\n                else{\n                    message.error(\"Please enter a valid stock number\")\n                }\n            }\n            catch(err){\n                message.error(\"Please enter a valid stock number\")\n            }\n        }\n    }\n\n\n    useEffect(()=>{\n        form.setFieldsValue({\n            stock:props.productDetails?.stock\n        })\n    },[props.productDetails])\n\n\n\n\n\n\n\n    return (\n        <Card\n            title=\"Stock management\"\n            style={{marginTop:'50px'}}\n        >\n        \n            <Form\n                layout=\"inline\"\n                form={form}\n                onFinish={onFinish}\n                scrollToFirstError={true}\n                className=\"basic-form\"\n                initialValues={{\n                    stock:props.productDetails?.stock\n                }}\n            >\n                <Form.Item \n                    name=\"stock\"\n                    rules={[{ required: true, message: `Please enter the stock` }]}\n                >\n                    <Input disabled={isDisabled} placeholder=\"Stock\" type=\"number\"  />\n                </Form.Item> \n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">EDIT</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n        \n        \n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(UpdateProductStock);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport moment from \"moment\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Product.less\";\nimport {Link,useParams} from \"react-router-dom\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\nimport UpdateProductStock from \"./UpdateProductStock\";\nconst { Title } = Typography;\n\nfunction ProductDetailsSeller(props) {\n    const {id} = useParams();\n    const [productDetails,setProductDetails] = useState();\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\n\n\n    const fetchProductDetails = ()=>{\n        props.loading(true);\n        http.get(`${apis.PRODUCT_DETAILS_FOR_SELLER}/${id}`).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setProductDetails(result.data.data);\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\n                const editorState = EditorState.createWithContent(contentState);\n                setProductDescription(editorState)\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchProductDetails();\n    },[])\n\n    return (\n        <div className=\"product-details-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Product Details\"\n                subTitle={productDetails?productDetails.name:\"\"}\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \n            />\n            <div className=\"product-details-inner padding-after-page-header\" >\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\n                <UpdateProductStock productDetails={productDetails} />\n            </div>\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(ProductDetailsSeller);","import moment from \"moment\";\nimport React from \"react\";\nimport {Tag,Button} from \"antd\";\nimport apis from \"../../services/apis\";\nimport {Link} from \"react-router-dom\";\n\n\nconst columns = [\n    {\n        title: 'Id',\n        dataIndex: '_id',\n        key: '_id'\n    },\n    {\n        title:\"Customer\",\n        dataIndex: 'user_details',\n        key: 'user_details',\n        render : (data)=>data.name\n    },\n    {\n        title:\"Address\",\n        dataIndex: 'address',\n        key: 'address',\n        render : (data)=>(\n            <>\n                <span>{data.city},</span>\n                <span>{data.pincode}</span>\n            </>\n        )\n    },\n    {\n        title: 'Placed On',\n        dataIndex : 'createdAt',\n        key:'createdAt',\n        render : (data)=>(\n            <Tag color={'geekblue'}>\n                {moment(data).format(\"DD-MM-YYYY hh:mm:ss\")}\n            </Tag>\n        )\n    },\n    {\n        title : \"Operations\",\n        render : (data)=>(\n            <Link to={`/admin/dashboard/order/details/${data._id}`}>\n                <Button type=\"default\">Details</Button>            \n            </Link>\n        )\n    }    \n]\n\nexport default  columns;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Order.less\";\nimport column from \"./OrderListColumn\";\nimport {Link} from \"react-router-dom\";\n\nfunction OrderListSeller(props) {\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [orderData,setOrderData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(5);\n\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n\n    const fetchOrderData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize\n        }\n        http.post(apis.GET_ORDERS_LIST,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setOrderData(result.data.data);\n                setTotalData(result.data.total);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchOrderData();\n    },[currentPage])\n\n    \n\n    return (\n        <div className=\"product-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Orders\"\n                subTitle=\"List all orders\"\n            />\n            <div className=\"product-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1200 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={orderData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(OrderListSeller);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Pagination,Row,Col,Table,Select,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Order.less\";\nimport column from \"./OrderListColumn\";\nimport {Link} from \"react-router-dom\";\nconst { Option } = Select;\n\nfunction OrderListAdmin(props) {\n    const [allSellers,setAllSellers]=useState([]);\n    const [selectedSeller,setSelectedSeller] = useState()\n    const [isTableLoading,setIstableLoading] = useState(false);\n    const [orderData,setOrderData] = useState([]);\n    const [currentPage,setCurrentpage] = useState(1);\n    const [totalData,setTotalData] = useState(0);\n    const [pageSize,setPageSize] = useState(5);\n\n\n    const pageChanger=(page)=>{\n        setCurrentpage(page);\n    }\n\n\n    const fetchUserData = ()=>{\n        props.loading(true)\n        let body = {\n            pageNumber : 1,\n            pageSize:1000000,\n            userType : 'seller'\n        }\n        http.post(apis.LIST_USERS,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setAllSellers(result.data.data);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false)\n        })\n    }\n\n\n    const fetchOrderData = ()=>{\n        setIstableLoading(true);\n        let body = {\n            pageNumber : currentPage,\n            pageSize:pageSize,\n            sellerId:selectedSeller\n        }\n        console.log(body)\n        http.post(apis.GET_ORDERS_LIST,body).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setOrderData(result.data.data);\n                setTotalData(result.data.total);\n            }\n            else{\n                message.error(result.data.message);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            setIstableLoading(false)\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchUserData()\n    },[])\n\n    useEffect(()=>{\n        if(selectedSeller){\n            fetchOrderData();\n        }\n    },[currentPage,selectedSeller])\n\n    const onSelect = (d)=>{\n        console.log(d);\n        setSelectedSeller(d)\n    }\n\n    return (\n        <div className=\"product-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Orders\"\n                subTitle=\"List all orders\"\n                extra={[\n                    <Select key=\"1\" placeholder=\"select an option\" value={selectedSeller}  style={{ width: 200 }} onSelect={onSelect}>\n                        <Option>Select a seller</Option>\n                        {allSellers.map((ele,i)=><Option key={i} value={ele._id}>{ele.name}</Option>)}\n                    </Select>\n                ]}\n            />\n            <div className=\"product-list padding-after-page-header\" >\n                <Table \n                    scroll={{ x: 1200 }} \n                    bordered={true} \n                    pagination={false} \n                    loading={isTableLoading} \n                    dataSource={orderData} \n                    columns={column} \n                    rowKey=\"_id\"\n                    footer={() =>(\n                        <Row gutter={16} justify=\"end\">\n                            <Col>\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\n                            </Col>\n                        </Row>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(OrderListAdmin);","import React, {useState,useEffect} from \"react\";\nimport apis from \"../../services/apis\"\nimport { Timeline ,Descriptions, Select, Card, Button, message, Input   } from 'antd';\nimport moment from \"moment\";\nimport http from \"../../services/httpCall\";\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nfunction SubOrder(props) {\n    const [options,setOptions]=useState([]);\n    const [selectedOption,setSelectedOption]=useState();\n    const [description,setDescription]=useState()\n\n    useEffect(()=>{\n        reCalculateOptions()\n    },[props.data])\n\n    const reCalculateOptions = ()=>{\n        let opts=[];\n        const lastStep =props.data.status[props.data.status.length - 1].name;\n        if(lastStep==='placed'){\n            opts = ['shipped','delivered']\n        }\n        else if(lastStep==='shipped'){\n            opts = ['delivered']\n        }\n        setOptions(opts)\n    }\n\n\n    const onSelect = (d)=>{\n        console.log(d);\n        setSelectedOption(d)\n    }\n\n    const onDescriptionChange=(d)=>{\n        setDescription(d.target.value)\n    }\n\n    const updateStatus = ()=>{\n        if(selectedOption){\n            props.loading(true)\n            http.post(apis.UPDATE_ORDER_STATUS,{\n                orderId : props.orderId,\n                subOrderId : props.data._id,\n                status : selectedOption,\n                description : description\n            }).then((result)=>{\n                if(result.data.status){\n                    message.success(result.data.message)\n                }\n                else{\n                    message.error(result.data.message)\n                }\n            }).catch((err)=>{\n                console.log(err);\n                message.error(\"server error\")\n            }).finally(()=>{\n                props.loading(false);\n                props.fetchOrderDetails();\n                setSelectedOption();\n                setDescription()\n            })\n        }\n        else{\n            message.error(\"please select a status\")\n        }\n    }\n\n\n    return(\n        <div>\n            <Descriptions title=\"Item Info\"  bordered>\n                <Descriptions.Item label=\"Image\">\n                    <img className=\"item-image\" src={`${apis.BASE_SERVER_URL}${props.data.product.images[0]}`} />\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Name\">{props.data.product.name}</Descriptions.Item>\n                <Descriptions.Item label=\"Ordered Quantity\">{props.data.count}</Descriptions.Item>\n                <Descriptions.Item label=\"Unit Price\">{props.data.unitPrice}</Descriptions.Item>\n                <Descriptions.Item label=\"Total Price\">{props.data.totalPrice}</Descriptions.Item>\n                <Descriptions.Item label=\"Seller Name\">{props.data.seller.name}</Descriptions.Item>\n            </Descriptions>\n            <div className=\"status-tracker\">\n                <Timeline mode=\"left\">\n                    {\n                        props.data.status.map((ele,i)=>(\n                            <Timeline.Item label={`${ele.name} - ${moment(ele.date).format(\"DD-MM-YYYY hh:mm:ss\")}`} key={i}>{ele.remark}</Timeline.Item>\n                        ))\n                    }\n                </Timeline>\n                <Card className=\"status-control\">\n                    Update Status<br />\n                    <Select placeholder=\"select an option\" value={selectedOption}  style={{ width: 200 }} onSelect={onSelect}>\n                        <Option>Select an option</Option>\n                        {options.map((ele,i)=><Option key={i} value={ele}>{ele}</Option>)}\n                    </Select>\n                    <TextArea value={description} rows={4} onChange={onDescriptionChange}/>\n                    <Button onClick={updateStatus}>UPDATE</Button>\n                </Card>\n            </div>\n        </div>\n    )\n}\n\n\nexport default SubOrder;","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,Descriptions,Row,Col,Button,Tag,Typography,message } from 'antd';\nimport { logout } from \"../../actions/authAction\"; \nimport {loading} from \"../../actions/loadingAction\";\nimport moment from \"moment\";\nimport {\n    UserOutlined,\n    UnorderedListOutlined,\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport {Link,useParams} from \"react-router-dom\";\nimport SubOrder from \"./SingleOrder\"\nconst { Title } = Typography;\n\nfunction OrderDetails(props) {\n    const {id} = useParams();\n    const [orderDetails,setOrderDetails] = useState();\n    const [mySubOrder,setMySubOrder]=useState([])\n\n    const fetchOrderDetails = ()=>{\n        props.loading(true);\n        http.get(`${apis.ORDER_DETAILS}/${id}`).then((result)=>{\n            console.log(result.data)\n            if(result.data.status){\n                setOrderDetails(result.data.data);\n                if(props.Auth.userdetails.userType==='admin'){\n                    setMySubOrder(result.data.data.items)\n                }\n                else{\n                    let ords =[];\n                    result.data.data.items.forEach(ele=>{\n                        if(ele.seller._id==result.data.userId){\n                            ords.push(ele)\n                        }\n                    })\n                    setMySubOrder(ords)\n                    console.log(\"sub orders\",ords)\n                }\n            }\n            else{\n                message.error(result.data.message)\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }).finally(()=>{\n            props.loading(false);\n        })\n    }\n\n\n    useEffect(()=>{\n        fetchOrderDetails();\n    },[])\n\n    return (\n        <div className=\"order-details-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"Order Details\"\n                subTitle={id}\n                extra={[<Link to=\"/admin/dashboard/orders\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Orders</Button></Link>]}                \n            />\n            <div className=\"order-details-inner padding-after-page-header\" >\n                {orderDetails?\n                    <>\n                        <div className=\"details-info\">\n                            <Descriptions title=\"Customer Info\"  bordered>\n                                <Descriptions.Item label=\"Name\">{orderDetails.user.name}</Descriptions.Item>\n                                <Descriptions.Item label=\"Email Id\">{orderDetails.user.email}</Descriptions.Item>\n                                <Descriptions.Item label=\"Phone Number\">{orderDetails.user.phoneNumber}</Descriptions.Item>\n                                <Descriptions.Item label=\"Address\">\n                                    <div>\n                                        <div>{orderDetails.address.lineone}</div>\n                                        <div>{orderDetails.address.locality}</div>\n                                        <span>{orderDetails.address.city},</span>\n                                        <span>{orderDetails.address.state},</span>\n                                        <span>{orderDetails.address.pincode}</span>\n                                    </div>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"Ordered On\">{moment(orderDetails.createdAt).format(\"DD-MM-YYYY hh:mm:ss\")}</Descriptions.Item>\n                            </Descriptions>\n                        </div>\n                        <div className=\"item-details-wrapper\">\n                            {\n                                mySubOrder.map((ele,i)=><SubOrder loading={props.loading} orderId={id} fetchOrderDetails={fetchOrderDetails} key={i} data={ele} />)\n                            }\n                        </div>\n                    </>\n                    \n                    :\n                    null\n                }\n                \n            </div>\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, { \n    logout,\n    loading\n})(OrderDetails);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PageHeader,message,Row,Col,Button, Card,Input, Upload, Select } from 'antd';\nimport { logout } from \"../../actions/authAction\";\nimport {loading} from \"../../actions/loadingAction\";\nimport {\n    PictureOutlined\n} from '@ant-design/icons';\nimport ImgCrop from 'antd-img-crop';\nimport apis from \"../../services/apis\";\nimport http from \"../../services/httpCall\";\nimport { beforeUpload } from \"../../services/beforeUpload\";\nimport Errorhandler from \"../../services/errorHandler\";\nimport \"./Poster.less\"\n\n\nfunction Poster(props) {\n    const [posters,setPosters] = useState([])\n\n\n    const fetchPosters = async()=>{\n        try{\n            props.loading(true);\n            let responses = await http.get(apis.LIST_POSTER);\n            console.log(responses.data)\n            if(responses.data.status){\n                setPosters(responses.data.data)\n            }\n            else{\n                message.error(responses.data.message);\n            }\n        }\n        catch(err){\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }\n        finally{\n            props.loading(false)\n        }\n    }\n\n\n    const beforeUploadFunction = (file)=>{\n        props.loading(true)\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\n            const formData = new FormData();\n            formData.append('poster',file);\n            http.post(apis.UPLOAD_POSTER,formData,{\n                headers : {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then((result)=>{\n                if(result.data.status){\n                    setPosters(result.data.data);\n                    message.success(result.data.message);\n                }\n                else{\n                    message.error(result.data.message);\n                }\n            }).catch((err)=>{\n                console.log(err);\n                Errorhandler(err,props.logout);\n            }).finally(()=>{\n                props.loading(false)\n            })\n\n        })\n        return false;\n    }\n\n\n    const deleteMe = async(file)=>{\n        try{\n            props.loading(true);\n            let responses = await http.post(apis.DELETE_POSTER,{file});\n            console.log(responses.data)\n            if(responses.data.status){\n                setPosters(responses.data.data)\n            }\n            else{\n                message.error(responses.data.message);\n            }\n        }\n        catch(err){\n            console.log(err);\n            Errorhandler(err,props.logout);\n        }\n        finally{\n            props.loading(false)\n        }\n    }\n\n\n    useEffect(()=>{\n        fetchPosters()\n    },[])\n\n    return (\n        <div className=\"poster-list-wrapper full-width-height\">\n            <PageHeader\n                className=\"site-page-header-responsive\"\n                title=\"All Posters\"\n                subTitle=\"List all posters\"\n                extra={[\n                    <ImgCrop\n                        grid={true}\n                        shape=\"rect\"\n                        aspect={2.5}\n                        key=\"1\"\n                    >\n                        <Upload\n                            name='file'\n                            className=\"poster-uploader\"\n                            showUploadList={false}\n                            beforeUpload={beforeUploadFunction}\n\n                        >\n                            <Button  type=\"primary\"  icon={<PictureOutlined />}>Upload Poster</Button>\n                        </Upload>\n                    </ImgCrop>\n                ]}\n            />\n            <div className=\"poster-list-inner padding-after-page-header\" >\n                {posters.length>0?\n                    <div>\n                        <Row gutter={20}>\n                            {posters.map((ele,i)=>\n                                <Col key={i} span={8} style={{marginBottom:'20px'}}>\n                                    <Card\n                                        hoverable\n                                        style={{ width: '100%' }}\n                                        cover={<img  src={ `${apis.BASE_SERVER_URL}${ele}`} />}\n\n\n                                    >\n                                        <Button onClick={()=>deleteMe(ele)} type=\"default\" style={{width:'100%'}}>Delete</Button>\n                                    </Card>\n                                </Col>\n                            )}\n                        </Row>\n\n                    </div>\n                    :\n                    <div className=\"no-poster\">\n                        <h4>No posters are uploaded</h4>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, {\n    logout,\n    loading\n})(Poster);","import React,{ useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Layout,Row,Col } from 'antd';\nimport { useLocation, Switch, Route } from \"react-router-dom\";\nimport \"./Dashboard.less\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideBar\";\nimport UserList from \"../Users/UserList\";\nimport UserCreate from \"../Users/UserCreate\";\nimport CategoryCreate from \"../Category/CategoryCreate\";\nimport CategoryList from \"../Category/CategoryList\";\nimport ProductCreate from \"../Product/ProductCreate\";\nimport ProductEdit from \"../Product/ProductEdit\"\nimport ProductListAdmin from \"../Product/ProductListAdmin\";\nimport ProductDetailsAdmin from \"../Product/ProductDetailsAdmin\";\nimport MyProfile from \"../Profile/MyProfile\"\n\nimport ProductListSeller from \"../Product/ProductListSeller\";\nimport ProductDetailsSeller from \"../Product/ProductDetailsSeller\";\nimport OrderListSeller from \"../Order/OrderListSeller\";\nimport OrderListAdmin from \"../Order/OrderListAdmin\"\nimport OrderDetails from \"../Order/OrderDetails\"\nimport Poster from \"../Poster/Poster\"\n\n\nfunction Dashboard(props) {\n    const [sideBarCollapsed,setSideBarCollapsed] = useState(false);\n\n    let toggleSideBar = ()=>{\n        setSideBarCollapsed(!sideBarCollapsed);\n    }\n\n    return (\n        <Layout className=\"dashboard-container\">\n            <Header toggleSideBar={toggleSideBar}/>\n            <Row className=\"dashboard-content-container\">\n                <Col>\n                    <SideBar key={props.Auth.userdetails} sideBarCollapsed={sideBarCollapsed} user={props.Auth.userdetails}/>\n                </Col>\n                <Col className={\"dashboard-content-col\"+(sideBarCollapsed?\" dashboadr-sidebar-collapsed\":\" dashboard-sidebar-normal\")}>\n                    <Layout.Content  className=\"dasboard-content-wrapper\">\n                        {\n                            props.Auth.userdetails.userType && props.Auth.userdetails.userType==='admin'?\n                            <div className=\"dashboard-content-inner\">\n                                <Switch>\n                                    <Route exact={true} path=\"/admin/dashboard/posters\">\n                                        <Poster />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/user/list\">\n                                        <UserList />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/user/create\">\n                                        <UserCreate />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/category/create\">\n                                        <CategoryCreate />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/category/list\">\n                                        <CategoryList />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/product/create\">\n                                        <ProductCreate />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/product/edit/:id\">\n                                        <ProductEdit />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/product/list\">\n                                        <ProductListAdmin />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/product/details/:id\">\n                                        <ProductDetailsAdmin />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/orders\">\n                                        <OrderListAdmin />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/order/details/:id\">\n                                        <OrderDetails />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/profile/:id\">\n                                        <MyProfile />\n                                    </Route>\n                                </Switch>\n                            </div>\n                            :\n                            <div className=\"dashboard-content-inner\">\n                                <Switch>\n                                    <Route path=\"/admin/dashboard/product/list\">\n                                        <ProductListSeller />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/product/details/:id\">\n                                        <ProductDetailsSeller />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/orders\">\n                                        <OrderListSeller />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/order/details/:id\">\n                                        <OrderDetails />\n                                    </Route>\n                                    <Route exact={true} path=\"/admin/dashboard/profile/:id\">\n                                        <MyProfile />\n                                    </Route>\n                                </Switch>\n                            </div>\n                        }\n\n                        <Layout.Footer className=\"dashboard-footer-wrapper\">BANDHAN SOLUTIONS</Layout.Footer>\n                    </Layout.Content>\n                </Col>\n            </Row>\n        </Layout>\n    )\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth\n});\nexport default connect(mapStateToProps, {\n\n})(Dashboard);\n\n\n\n\n","import React,{ useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { logout, setUserDetails } from \"../../actions/authAction\"; \nimport EntryLoader from \"../Loader/EntryLoader\";\nimport Dashboard from \"./Dashboard\";\nimport http from \"../../services/httpCall\";\nimport apis from \"../../services/apis\";\nimport Errorhandler from \"../../services/errorHandler\";\n\nfunction DashboardWrapper(props) {\n\n    let fetchUserDetails = ()=>{\n        http.get(apis.GET_USER_DETAILS).then((result)=>{\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\n                props.setUserDetails(result.data.data);\n            }\n            else{\n                props.logout();\n            }\n        }).catch((err)=>{\n            console.log(err);\n            Errorhandler(err,props.logout)\n        })\n    }\n\n    //fetching user details on component load\n    useEffect(()=>{\n        if(!props.Auth.userdetails){\n            console.log(props.Auth.userdetails)\n            fetchUserDetails();\n        }        \n    },[])\n\n    return (\n        <div>\n            {props.Auth.userdetails?\n                <Dashboard />\n            :\n                <EntryLoader />\n            }\n            \n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    Auth: state.Auth,\n});\n  \nexport default connect(mapStateToProps, { setUserDetails, logout })(DashboardWrapper);\n\n","import React from \"react\";\nimport Loader from \"./components/Loader/Loader\";\nimport {connect} from 'react-redux';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport LoginWrapper from \"./components/Root/LoginWrapper\";\nimport PrivateRoute from \"./components/Root/PrivateWrapper\";\nimport Login from \"./components/Login/Login\";\nimport DashboardWrapper from \"./components/Wrapper/DashboardWrapper\";\nimport { login } from \"./actions/authAction\";\n\n\n\nlet App = (props)=>{\n    //auth check if token exist\n    let Token  = localStorage.getItem(\"Token\");\n    console.log(Token);\n    if(Token && Token!==\"null\" && Token!==\"undefined\"){\n      props.login(Token);\n    }\n\n    return(\n        <React.Fragment>\n            <Loader />\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/admin\">\n                        <Redirect to={{pathname: \"/admin/dashboard\"}}/>\n                    </Route>\n                    <LoginWrapper exact={true} path=\"/admin/login\">\n                        <Login />\n                    </LoginWrapper>\n                    <PrivateRoute path=\"/admin/dashboard\">\n                        <DashboardWrapper />\n                    </PrivateRoute>\n                    <Route>\n                        <Redirect to=\"/admin\" />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps= (state) => ({\n    \n})\nexport default connect(mapStateToProps, { \n    login\n})(App);","const initialState = {\n    loading_active : 0\n}\n\nexport default (state = initialState, action )=>{\n    switch(action.type){\n        case 'LOADING':\n            let lc = state.loading_active;\n            if(action.payload){\n                lc++;\n            }\n            else{\n                lc = lc===0?0:lc-1;\n            }\n            return {\n                ...state,\n                loading_active : lc              \n            };\n        default:\n            return state;\n    }\n}","const initialState = {\n    isLoggedIn : false,\n    token : null,\n    userdetails : null          \n}\n\nexport default (state = initialState, action )=>{\n    switch(action.type){\n        case 'LOGIN':\n            return {\n                ...state,\n                isLoggedIn : true,\n                token : action.token,\n                userdetails : action.userdetails\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                isLoggedIn : false,\n                token : null,\n                userdetails : null\n            }\n        case 'SET_USER_DETAILS':\n            return{\n                ...state,\n                userdetails : action.payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'; \nimport Loader from \"./loaderReducer\";\nimport Auth from \"./authReducer\";\n\nexport default combineReducers({\n    Loader,\n    Auth\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from \"redux-logger\";\nimport rootReducer from './reducers/rootReducer';\n\n\nconst initialState={};\nconst middleware=[thunk,logger];\n\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    applyMiddleware(...middleware)\n);\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}