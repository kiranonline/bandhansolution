{"version":3,"sources":["static/loader.gif","components/Loader/Loader.js","components/Root/LoginWrapper.js","components/Root/PrivateWrapper.js","services/apis.js","services/httpCall.js","actions/loadingAction.js","services/errorHandler.js","actions/authAction.js","components/Login/Login.js","components/Loader/EntryLoader.js","components/Wrapper/Header.js","services/decideSideBar.js","components/Wrapper/SideBar.js","components/Users/userColumn.js","components/Users/UserList.js","services/beforeUpload.js","components/Users/UserCreate.js","components/Category/CategoryCreate.js","components/Category/categoryColumn.js","components/Category/CategoryList.js","services/TextEditor.js","components/Product/ProductCreate.js","components/Product/productcolumnAdmin.js","components/Product/ProductListAdmin.js","components/Product/ProductDetailsCommon.js","components/Product/stockColumnAdmin.js","components/Product/ProductStockAdmin.js","components/Product/ProductDetailsAdmin.js","components/Profile/MyProfile.js","components/Product/productcolumnSeller.js","components/Product/ProductListSeller.js","components/Product/UpdateProductStock.js","components/Product/ProductDetailsSeller.js","components/Order/OrderListColumn.js","components/Order/OrderList.js","components/Order/SingleOrder.js","components/Order/OrderDetails.js","components/Wrapper/Dashboard.js","components/Wrapper/DashboardWrapper.js","App.js","reducers/loaderReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","connect","state","loader","Loader","props","className","loading_active","id","Auth","children","rest","render","location","isLoggedIn","to","pathname","from","apis","BASE_LOCAL_URL","BASE_SERVER_URL","LOGIN_WITH_EMAIL_AND_PASSWORD","GET_USER_DETAILS","GET_PROFILE_DETAILS","UPDATE_PROFILE_DETAILS","UPLOAD_USER_AVATAR","USER_CREATE","LIST_USERS","CATEGORY_CREATE","LIST_CATEGORY","CREATE_PRODUCT","UPLOAD_PRODUCT_IMAGE","LIST_PRODUCTS_FOR_ADMIN","PRODUCT_DETAILS_FOR_ADMIN","STOCK_LIST_FOR_ADMIN","LIST_PRODUCT_FOR_SELLER","PRODUCT_DETAILS_FOR_SELLER","UPDATE_PRODUCT_STOCK_SELLER","GET_ORDERS_LIST","ORDER_DETAILS","UPDATE_ORDER_STATUS","http","axios","create","baseURL","loading","data","type","payload","Errorhandler","error","cb","console","log","response","status","message","e","login","token","userdetails","defaults","headers","common","logout","localStorage","removeItem","setUserDetails","user","Title","level","name","onFinish","values","post","then","result","userType","setItem","catch","err","finally","Item","hasFeedback","rules","required","prefix","MailOutlined","placeholder","Password","LockOutlined","htmlType","href","EntryLoader","src","require","alt","Theme","Header","justify","gutter","align","dot","BellOutlined","placement","trigger","UserOutlined","title","LogoutOutlined","onClick","AdminSideBar","theme","mode","SubMenu","key","PlusCircleOutlined","UnorderedListOutlined","BranchesOutlined","ShoppingCartOutlined","SellerSideBar","_id","Sider","Layout","collapsible","collapsed","sideBarCollapsed","columns","dataIndex","color","moment","format","row","useState","isTableLoading","setIstableLoading","userData","setUserData","currentPage","setCurrentpage","totalData","setTotalData","pageSize","setUserType","pageChanger","page","onUserTypeChange","value","useEffect","body","pageNumber","total","fetchUserData","subTitle","extra","icon","scroll","x","bordered","pagination","dataSource","column","rowKey","style","width","onChange","Option","footer","current","beforeUpload","file","extension","size","isJpgOrPng","includes","isLt2M","Select","Form","useForm","form","avatar","setAvatar","isAvatarUploading","setIsAvatarUploading","layout","email","phoneNumber","password","deliverTo","info","resetFields","scrollToFirstError","span","label","grid","shape","listType","showUploadList","formData","FormData","append","LoadingOutlined","PlusOutlined","len","min","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","minHeight","tokenSeparators","categoryData","setCategoryData","fetchCategoryData","RichEditorExample","focus","refs","editor","editorState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","link","hasremove","images","setImages","allCategories","setAllCategories","EditorState","createEmpty","productDescription","setProductDescription","fetchAllCategory","isAllImagePresent","flag","forEach","ele","raw","convertToRaw","category","regularPrice","salePrice","weight","description","JSON","stringify","success","push","ContentState","createFromText","showSearch","filterOption","input","option","toLowerCase","indexOf","i","marginBottom","aspect","fl","index","img1","img2","img3","ind","img","l","length","splice","removeImage","newImg","Array","isArray","productData","setProductData","fetchProductData","Typography","UpdateProductStockSeller","autoplay","productDetails","createdAt","readOnly","ProductStockAdmin","productStock","setProductStock","fetchProducStock","productId","stock","seller","useParams","setProductDetails","get","convertFromRaw","parse","createWithContent","profile","setProfile","fetchProfileData","setFieldsValue","isDisabled","setIsDisabled","marginTop","parseInt","initialValues","disabled","city","pincode","orderData","setOrderData","fetchOrderData","TextArea","Input","SubOrder","options","setOptions","selectedOption","setSelectedOption","setDescription","reCalculateOptions","opts","lastStep","product","count","unitPrice","totalPrice","date","remark","onSelect","d","rows","target","orderId","subOrderId","fetchOrderDetails","orderDetails","setOrderDetails","mySubOrder","setMySubOrder","ords","items","userId","address","lineone","locality","setSideBarCollapsed","toggleSideBar","Content","exact","path","OrderList","Footer","Token","getItem","Fragment","initialState","combineReducers","action","lc","middleware","thunk","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.497b8717.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.e6dcd181.gif\";","import React from 'react';\r\nimport \"./loader.less\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className={props.loader.loading_active>0?\"loader-wrapper vsbl\":\"loader-wrapper nt-vsbl\"}>  \r\n           <div id=\"loader_bar\"><b></b><i></i></div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps= (state) => ({\r\n    loader : state.Loader\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Loader);","import React,{ ReactNode } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction LoginWrapper({ children,Auth, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                !Auth.isLoggedIn ? \r\n                (\r\n                    children\r\n                ) \r\n                : \r\n                (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/admin/dashboard\"\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth : state.Auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{})(LoginWrapper);","import React,{ ReactNode } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction PrivateRoute({ children,Auth, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                Auth.isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/admin/login\",\r\n                        state: { from: location }\r\n                    }}\r\n                />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth : state.Auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{})(PrivateRoute);","const envoirnment = process.env.NODE_ENV;\r\nconst apis = {\r\n\r\n    BASE_LOCAL_URL : envoirnment === \"development\" ? \"http://localhost:7000\" : \"\",\r\n    BASE_SERVER_URL : envoirnment === \"development\"? \"http://localhost:4500\": \"\",\r\n    \r\n    LOGIN_WITH_EMAIL_AND_PASSWORD : \"/apis/v1/login-with-email-password\",\r\n    GET_USER_DETAILS:\"/apis/v1/userdetails\",\r\n    GET_PROFILE_DETAILS:\"/apis/v1/profiledetails\",\r\n    UPDATE_PROFILE_DETAILS:\"/apis/v1/update-profile\",\r\n\r\n\r\n    UPLOAD_USER_AVATAR:\"/apis/v1/upload-avatar\",\r\n    USER_CREATE:\"/apis/v1/user/create\",\r\n    LIST_USERS:\"/apis/v1/user/list\",\r\n\r\n\r\n    CATEGORY_CREATE : \"/apis/v1/category/create\",\r\n    LIST_CATEGORY : \"/apis/v1/category/list\",\r\n\r\n\r\n    CREATE_PRODUCT : \"/apis/v1/product/create\",\r\n    UPLOAD_PRODUCT_IMAGE : \"/apis/v1/upload-product-image\",\r\n    LIST_PRODUCTS_FOR_ADMIN : \"/apis/v1/product/listforadmin\",\r\n    PRODUCT_DETAILS_FOR_ADMIN : \"/apis/v1/product/detailsofadmin\",\r\n    STOCK_LIST_FOR_ADMIN:\"/apis/v1/product/stock-list-foradmin\",\r\n\r\n    LIST_PRODUCT_FOR_SELLER : \"/apis/v1/product/listforseller\",\r\n    PRODUCT_DETAILS_FOR_SELLER : \"/apis/v1/product/detailsforseller\",\r\n    UPDATE_PRODUCT_STOCK_SELLER : '/apis/v1/product/stock/updatebyseller',\r\n\r\n\r\n\r\n\r\n    GET_ORDERS_LIST:\"/apis/v1/seller/get-my-orders\",\r\n    ORDER_DETAILS:\"/apis/v1/order/details\",\r\n    UPDATE_ORDER_STATUS:\"/apis/v1/order/update-status-details\"\r\n    \r\n};\r\n\r\nexport default apis;","import axios from 'axios';\r\nimport apis from \"./apis\";\r\n\r\nconst http = axios.create({\r\n    baseURL: apis.BASE_SERVER_URL\r\n});\r\n\r\n\r\nexport default http;","export const loading = (data) => {\r\n    return {\r\n        type: 'LOADING',\r\n        payload : data\r\n    };\r\n};","import {message} from \"antd\";\r\n\r\nconst Errorhandler = (error,cb)=>{\r\n    try{\r\n        console.log(error.response)\r\n        if(error.response.status === 401){\r\n            cb();\r\n        }\r\n        else if(error.response.status === 422){\r\n            message.error(\"Server Error!\")\r\n        }\r\n        else{\r\n            message.error(error.response.data.message || \"server error\");\r\n        }\r\n    }\r\n    catch(e){\r\n        console.log(e)\r\n        message.error(\"Server Error!\")\r\n    }\r\n}\r\n\r\nexport default Errorhandler;","import http from \"../services/httpCall\";\r\n\r\nexport const login = (token,userdetails) => {\r\n    http.defaults.headers.common['Authorization']='Bearer '+ token;\r\n    return {\r\n        type: 'LOGIN',\r\n        token : token,\r\n        userdetails:userdetails\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"Token\");\r\n    return {\r\n        type: 'LOGOUT'\r\n    };\r\n};\r\n  \r\nexport const setUserDetails = (user)=>{\r\n    return {\r\n        type : 'SET_USER_DETAILS',\r\n        payload : user\r\n    }\r\n}","import React from 'react';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { loading } from \"../../actions/loadingAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport { Typography, Form, Input, Button, message } from 'antd';\r\nimport { MailOutlined , LockOutlined } from '@ant-design/icons';\r\nimport { login, setUserDetails, logout } from \"../../actions/authAction\"\r\nimport \"./login.less\";\r\n\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    let onFinish = (values)=>{\r\n        console.log(`getting ${values} from the form`);\r\n        props.loading(true);\r\n        http.post(apis.LOGIN_WITH_EMAIL_AND_PASSWORD,values).then((result)=>{\r\n            console.log(result.data);\r\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\r\n                localStorage.setItem(\"Token\", result.data.token);\r\n                props.login(result.data.token,result.data.data);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);   \r\n            Errorhandler(err,props.logout)\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <div className=\"login-section-wrapper\">\r\n                <Typography.Title level={1}>BANDHAN</Typography.Title>\r\n                <p className=\"brand-sub-name\">ADMIN PANEL</p>\r\n                <Form\r\n                    name=\"login-form\"\r\n                    className=\"login-form\"\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        hasFeedback={true}\r\n                        rules={[\r\n                            { \r\n                                required: true, \r\n                                message: 'Please input your E-mail!' \r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"email id\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        hasFeedback={true}\r\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                    >\r\n                        <Input.Password\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Log in\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                            Forgot password\r\n                        </a>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth,\r\n});\r\n  \r\nexport default connect(mapStateToProps, { \r\n    loading,\r\n    login,\r\n    setUserDetails,\r\n    logout\r\n})(Login);","import React from 'react';\r\nimport \"./loader.less\";\r\nimport { Typography } from \"antd\";\r\n\r\nexport default function EntryLoader() {\r\n    return (\r\n        <div className=\"entry-loader-container\">\r\n            <img src={require(\"../../static/loader.gif\")} className=\"entry-loader-brand-logo\" alt=\"entry-loader\" />\r\n            <Typography.Title level={4}>Loading...</Typography.Title>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Layout, Row, Col, Badge, Typography, Tooltip, Popover } from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    BellOutlined,\r\n    SearchOutlined,\r\n    LogoutOutlined\r\n} from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <Layout.Header className=\"dashboard-header-wrapper\" >\r\n            <Row justify=\"space-between\">\r\n                <Col>\r\n                    <Row gutter={20} align=\"middle\">\r\n                        <Col>\r\n                            <Link to=\"/admin/dashboard\">\r\n                                LOGO\r\n                            </Link>\r\n                        </Col>\r\n                        <Col className=\"header-brand-name-wrapper\">\r\n                            <Typography.Title className=\"header-brand-name\" level={3}>BANDHAN</Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Row gutter={30}>\r\n                        <Col>\r\n                            <Badge dot={true}>\r\n                                <BellOutlined  className=\"header-option-icons\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Popover placement=\"bottomRight\" trigger=\"click\">\r\n                                <UserOutlined className=\"header-option-icons\" />\r\n                            </Popover>\r\n                        </Col>\r\n                        <Col>\r\n                            <Tooltip title=\"logout\">\r\n                                <LogoutOutlined className=\"header-option-icons\" onClick={props.logout}/>\r\n                            </Tooltip>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Layout.Header>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Theme : state.Theme\r\n});\r\n\r\nexport default connect(mapStateToProps, { \r\n    logout\r\n})(Header);\r\n\r\n","import React from \"react\";\r\nimport {Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined,\r\n    ShoppingCartOutlined,\r\n    BranchesOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport const AdminSideBar = (props)=>(\r\n    <Menu  theme=\"dark\" mode=\"inline\">  \r\n        <Menu.SubMenu key=\"admin1\" title={<span><UserOutlined /><span>USER</span></span>}>\r\n            <Menu.Item  key=\"11\">\r\n                <Link to=\"/admin/dashboard/user/create\">\r\n                    <PlusCircleOutlined />\r\n                    <span>CREATE USER</span>\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Item  key=\"12\">\r\n                <Link to=\"/admin/dashboard/user/list\">\r\n                    <UnorderedListOutlined />\r\n                    <span>USER LIST</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu.SubMenu>     \r\n        <Menu.SubMenu key=\"admin2\" title={<span><BranchesOutlined /><span>CATEGORY</span></span>}>\r\n            <Menu.Item  key=\"21\">\r\n                <Link to=\"/admin/dashboard/category/create\">\r\n                    <PlusCircleOutlined />\r\n                    <span>CREATE CATEGORY</span>\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Item  key=\"22\">\r\n                <Link to=\"/admin/dashboard/category/list\">\r\n                    <UnorderedListOutlined />\r\n                    <span>CATEGORY LIST</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu.SubMenu>         \r\n        <Menu.SubMenu key=\"admin3\" title={<span><ShoppingCartOutlined /><span>PRODUCT</span></span>}>\r\n            <Menu.Item  key=\"31\">\r\n                <Link to=\"/admin/dashboard/product/create\">\r\n                    <PlusCircleOutlined />\r\n                    <span>CREATE PRODUCT</span>\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Item  key=\"32\">\r\n                <Link to=\"/admin/dashboard/product/list\">\r\n                    <UnorderedListOutlined />\r\n                    <span>PRODUCT LIST</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu.SubMenu>\r\n    </Menu>\r\n)\r\n\r\nexport const SellerSideBar = (props)=>(\r\n    <Menu  theme=\"dark\" mode=\"inline\">                \r\n        <Menu.Item  key=\"32\">\r\n            <Link to=\"/admin/dashboard/product/list\">\r\n                <UnorderedListOutlined />\r\n                <span>PRODUCT LIST</span>\r\n            </Link>\r\n        </Menu.Item>\r\n        <Menu.Item  key=\"33\">\r\n            <Link to={ `/admin/dashboard/orders`}>\r\n                <ShoppingCartOutlined />\r\n                <span>ORDERS</span>\r\n            </Link>\r\n        </Menu.Item>\r\n        <Menu.Item  key=\"34\">\r\n            <Link to={ `/admin/dashboard/profile/${props.user?props.user._id:\"\"}`}>\r\n                <UserOutlined />\r\n                <span>PROFILE</span>\r\n            </Link>\r\n        </Menu.Item>\r\n        \r\n    </Menu>\r\n)\r\n\r\n","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AdminSideBar,SellerSideBar} from \"../../services/decideSideBar\";\r\nconst { Sider } = Layout;\r\n\r\nfunction SideBar(props) {\r\n    return (\r\n        <Sider key={props.Auth.userdetails} trigger={null} collapsible collapsed={props.sideBarCollapsed} className=\"dasboard-sidebar-wrapper\">\r\n            {\r\n                props.Auth.userdetails.userType==='admin'?\r\n                    <AdminSideBar user={props.user} />\r\n                :null   \r\n            }\r\n            {\r\n                props.Auth.userdetails.userType==='seller'?\r\n                    <SellerSideBar user={props.user} />\r\n                :null   \r\n            }\r\n        </Sider>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n\r\n})(SideBar);\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag, Button} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title:'Email Id',\r\n        dataIndex:'email',\r\n        key:'email'\r\n    },\r\n    {\r\n        title:'Phone Number',\r\n        dataIndex:'phoneNumber',\r\n        key:'phoneNumber'\r\n    },\r\n    {\r\n        title : 'Registration Timestamp',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : 'CONTROLS',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data,row)=>(\r\n            <>\r\n                <Link to={`/admin/dashboard/profile/${row._id}`}>Edit</Link>\r\n            </>\r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./User.less\";\r\nimport column from \"./userColumn\";\r\n\r\nfunction UserList(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [userData,setUserData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(10);\r\n    const [userType,setUserType] = useState(\"customer\");\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n    const onUserTypeChange = (value)=>{\r\n        setCurrentpage(1);\r\n        setUserType(value);\r\n    }\r\n\r\n    const fetchUserData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize,\r\n            userType : userType\r\n        }\r\n        http.post(apis.LIST_USERS,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setUserData(result.data.data);\r\n                setTotalData(result.data.total)\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUserData();\r\n    },[currentPage,userType])\r\n\r\n    return (\r\n        <div className=\"user-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Users\"\r\n                subTitle=\"List all Users\"\r\n                extra={[<Link to=\"/admin/dashboard/user/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create User</Button></Link>]}                \r\n            />\r\n            <div className=\"user-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1000 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={userData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    title={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Select\r\n                                style={{width:'200px'}}\r\n                                    value={userType}\r\n                                    onChange={onUserTypeChange}\r\n                                >\r\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\r\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\r\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\r\n                                </Select>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(UserList);","import { message } from 'antd';\r\n\r\nexport const beforeUpload = (file,extension,size,cb)=>{\r\n    console.log(file.size/1024/1024,file.type)\r\n    const isJpgOrPng = extension.includes(file.type);\r\n    const isLt2M = (file.size / 1024 / 1024) < size;\r\n    if (!isJpgOrPng) {\r\n        message.error('Invalid file type!');\r\n    }\r\n    else{\r\n        if (!isLt2M) {\r\n            message.error('Too large file!');\r\n        }\r\n        else{\r\n            cb();\r\n        }\r\n    }\r\n}","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    UnorderedListOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./User.less\";\r\nconst { Option } = Select;\r\n\r\nfunction UserCreate(props) {\r\n    const [form] = Form.useForm(); \r\n    const [avatar,setAvatar] = useState();\r\n    const [isAvatarUploading,setIsAvatarUploading] = useState(false);\r\n    const [userType,setUserType] = useState();\r\n\r\n    const onFinish = (data)=>{\r\n        if(!avatar){\r\n            message.error(\"please upload an avatar.\")\r\n        }\r\n        else{\r\n            //console.log(avatar,data,apis.USER_CREATE);\r\n            const {email,name,phoneNumber,userType,password,deliverTo} = data;\r\n            props.loading(true);\r\n            http.post(apis.USER_CREATE,{\r\n                email,\r\n                name,\r\n                phoneNumber,\r\n                userType,\r\n                password,\r\n                avatar,\r\n                deliverTo\r\n            }).then(result=>{\r\n                console.log(result.data);\r\n                if(result.data.status){\r\n                    message.info(\"User created sucessfully\");\r\n                    form.resetFields();\r\n                    setAvatar();\r\n                    setUserType();\r\n                }\r\n                else{\r\n                    message.error(result.data.message)\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{    \r\n                props.loading(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    const beforeUploadFunction = (file)=>{\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            setIsAvatarUploading(true);\r\n            const formData = new FormData();\r\n            formData.append('avatar',file);\r\n            http.post(apis.UPLOAD_USER_AVATAR,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    setAvatar(result.data.file);\r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                setIsAvatarUploading(false);\r\n            })\r\n            \r\n        })\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"user-create-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Create Users\"\r\n                subTitle=\"Add new User\"\r\n                extra={[<Link to=\"/admin/dashboard/user/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Users</Button></Link>]}                \r\n            />\r\n            <div className=\"user-create-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the user's name!` }]}\r\n                            >\r\n                                <Input placeholder=\"Name\"  />\r\n                            </Form.Item>  \r\n                            <Form.Item \r\n                                label=\"Email Id\" \r\n                                name=\"email\"\r\n                                rules={[{ required: true, message: 'Please enter the email id!' },{type:'email',message:\"Enter a valid email id\"}]}\r\n                            >\r\n                                <Input placeholder=\"Email Id\" />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <ImgCrop grid={true} shape=\"round\">\r\n                                <Upload\r\n                                    name=\"avatar\"\r\n                                    listType=\"picture-card\"\r\n                                    className=\"avatar-uploader\"\r\n                                    showUploadList={false}\r\n                                    beforeUpload={beforeUploadFunction}\r\n\r\n                                >\r\n                                    {\r\n                                        avatar?<img src={`${apis.BASE_SERVER_URL}${avatar}`} className=\"uploaded-avatar\"/>\r\n                                        :\r\n                                        <div>\r\n                                            {isAvatarUploading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                            <div className=\"ant-upload-text\">Upload</div>\r\n                                        </div>\r\n                                    }\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Phone Number\" \r\n                                name=\"phoneNumber\"\r\n                                rules={[{ required: true, message: 'Please enter the phone number!' },{len:10,message:\"Enter a valid phone number!\"}]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"Phone Number\" style={{width:'100%'}}/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"User type\" \r\n                                name=\"userType\"\r\n                                rules={[{ required: true, message: `Please select one option!` }]}\r\n                            >\r\n                                <Select\r\n                                    onChange={setUserType}\r\n                                    placeholder=\"Select a user type\"\r\n                                >\r\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\r\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\r\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} align=\"bottom\">\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Password\" \r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: 'Please enter the password!' },{min:6,message:\"Password must be atleast 6 character long!\"}]}\r\n                            >\r\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Confirm Password\" \r\n                                name=\"ConfirmPassword\"\r\n                                dependencies={['password']}\r\n                                rules={[\r\n                                    { required: true, message: 'Please enter the password again!' },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(rule, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n                                            return Promise.reject('The two passwords that you entered do not match!');\r\n                                        },\r\n                                    })\r\n                                ]}\r\n                            >\r\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        userType===\"seller\"?\r\n                            <Row justify=\"center\" gutter={16}>\r\n                                <Col span={24}>\r\n                                    <Form.Item \r\n                                        label=\"Delivery Pin Codes\" \r\n                                        name=\"deliverTo\"\r\n                                    >\r\n                                        <Select mode=\"tags\" style={{ width: '100%', minHeight:'50px' }} tokenSeparators={[',']}>\r\n\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            null\r\n                    }\r\n                    \r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    Create\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(UserCreate);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    UnorderedListOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nconst { Option } = Select;\r\n\r\nfunction CategoryCreate(props) {\r\n    const [form] = Form.useForm(); \r\n    \r\n    const onFinish = (data)=>{\r\n        console.log(data);\r\n        let { name } =data;\r\n        props.loading(true);\r\n        http.post(apis.CATEGORY_CREATE,{name}).then(result=>{\r\n            console.log(result.data);\r\n            if(result.data.status){\r\n                message.info(\"Category created sucessfully\");\r\n                form.resetFields();\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{    \r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"category-create-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Create Category\"\r\n                subTitle=\"Add new Category\"\r\n                extra={[<Link to=\"/admin/dashboard/category/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Categories</Button></Link>]}                \r\n            />\r\n            <div className=\"category-create-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Category Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the category name!` }]}\r\n                            >\r\n                                <Input placeholder=\"Category Name\"  />\r\n                            </Form.Item>                          \r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    Create\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(CategoryCreate);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag} from \"antd\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title : 'Category Created',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport column from \"./categoryColumn\";\r\n\r\nfunction CategoryList(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [categoryData,setCategoryData] = useState([]);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [pageSize,setPageSize] = useState(2);\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n    const fetchCategoryData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setCategoryData(result.data.data);\r\n                setTotalData(result.data.total)\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchCategoryData();\r\n    },[currentPage])\r\n\r\n    return (\r\n        <div className=\"category-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Categories\"\r\n                subTitle=\"List all Categories\"\r\n                extra={[<Link to=\"/admin/dashboard/category/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Category</Button></Link>]}                \r\n            />\r\n            <div className=\"category-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1000 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={categoryData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(CategoryList);","import React from \"react\";\r\nimport 'draft-js/dist/Draft.css'; \r\nimport \"./TextEditor.css\";\r\nimport {Editor, EditorState, RichUtils, getDefaultKeyBinding} from 'draft-js';\r\n\r\nclass RichEditorExample extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.onChange = (editorState) => this.props.onChange(editorState);\r\n\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(\r\n                e,\r\n                this.props.editorState,\r\n                4, /* maxDepth */\r\n            );\r\n            if (newEditorState !== this.props.editorState) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(\r\n            RichUtils.toggleBlockType(\r\n            this.props.editorState,\r\n            blockType\r\n            )\r\n        );\r\n    }\r\n\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n                this.props.editorState,\r\n                inlineStyle\r\n            )\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {editorState} = this.props;\r\n\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = 'RichEditor-editor';\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n            className += ' RichEditor-hidePlaceholder';\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"RichEditor-root\">\r\n                <BlockStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleBlockType}\r\n                />\r\n                <InlineStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleInlineStyle}\r\n                />\r\n                <div className={className} onClick={this.focus}>\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={styleMap}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Product Description\"\r\n                        ref=\"editor\"\r\n                        spellCheck={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case 'blockquote': return 'RichEditor-blockquote';\r\n        default: return null;\r\n    }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let className = 'RichEditor-styleButton';\r\n        if (this.props.active) {\r\n            className += ' RichEditor-activeButton';\r\n        }\r\n\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n            {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n    {label: 'H1', style: 'header-one'},\r\n    {label: 'H2', style: 'header-two'},\r\n    {label: 'H3', style: 'header-three'},\r\n    {label: 'H4', style: 'header-four'},\r\n    {label: 'H5', style: 'header-five'},\r\n    {label: 'H6', style: 'header-six'},\r\n    {label: 'Blockquote', style: 'blockquote'},\r\n    {label: 'UL', style: 'unordered-list-item'},\r\n    {label: 'OL', style: 'ordered-list-item'},\r\n    {label: 'Code Block', style: 'code-block'},\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n    const {editorState} = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n    .getCurrentContent()\r\n    .getBlockForKey(selection.getStartKey())\r\n    .getType();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n    {label: 'Bold', style: 'BOLD'},\r\n    {label: 'Italic', style: 'ITALIC'},\r\n    {label: 'Underline', style: 'UNDERLINE'},\r\n    {label: 'Monospace', style: 'CODE'},\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default RichEditorExample;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    PlusOutlined,\r\n    UnorderedListOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport RichRextEditor from \"../../services/TextEditor\";\r\nimport {EditorState,convertToRaw,ContentState} from 'draft-js';\r\nimport \"./Product.less\";\r\nconst { Option } = Select;\r\n\r\nfunction ProductCreate(props) {\r\n    const [form] = Form.useForm(); \r\n    const [images,setImages] = useState([{link:null,loading:false,hasremove:false}]);\r\n    const [allCategories,setAllCategories] = useState([]);\r\n    const [productDescription, setProductDescription] = useState(() => EditorState.createEmpty())\r\n\r\n    const fetchAllCategory = ()=>{\r\n        props.loading(true);\r\n        let body = {\r\n            pageNumber : 1,\r\n            pageSize : 1000\r\n        }\r\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setAllCategories(result.data.data);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    const beforeUploadFunction = (file,index)=>{\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            let img1 = [...images];\r\n            img1[index][\"loading\"]=true;\r\n            setImages(img1);\r\n            const formData = new FormData();\r\n            formData.append('image',file);\r\n            http.post(apis.UPLOAD_PRODUCT_IMAGE,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    let img2 = [...images];\r\n                    img2[index][\"link\"]=result.data.file;\r\n                    setImages(img2);\r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                let img3 = [...images];\r\n                img3[index][\"loading\"]=false;\r\n                setImages(img3);\r\n            })\r\n            \r\n        })\r\n        return false;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchAllCategory();\r\n    },[])\r\n\r\n    const onFinish = (data)=>{\r\n        if(isAllImagePresent()){\r\n            let raw = convertToRaw(productDescription.getCurrentContent());\r\n            const {name,category,regularPrice,salePrice,weight} = data;\r\n            let body = {\r\n                name,\r\n                category,\r\n                regularPrice,\r\n                salePrice,\r\n                weight,\r\n                images : images.map(ele=>ele.link),\r\n                description : JSON.stringify(raw)\r\n            }\r\n            console.log(body);\r\n            props.loading(true);\r\n            http.post(apis.CREATE_PRODUCT,body).then((result)=>{\r\n                if(result.data.status){\r\n                    message.success(result.data.message);\r\n                    form.resetFields();\r\n                    setImages([{link:null,loading:false,hasremove:false}]);\r\n                    const editorState = EditorState.push(productDescription, ContentState.createFromText(''));\r\n                    setProductDescription(editorState);\r\n                }\r\n                else{\r\n                    message.error(result.data.message)\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                props.loading(false);\r\n            })\r\n        }\r\n        else{\r\n            message.error('Please upload all images or remove them')   \r\n        }\r\n    }\r\n\r\n\r\n    const addImage = ()=>{\r\n        let img = [...images];\r\n        let l = img.length;\r\n        if(img[l-1].link){\r\n            img.push({link:null,loading:false,hasremove:true});\r\n            let newImg = img.map(ele=>{\r\n                return {\r\n                    ...ele,\r\n                    hasremove : true\r\n                }\r\n            })\r\n            setImages(newImg);        \r\n        }\r\n        \r\n    }\r\n\r\n    const removeImage = (ind)=>{\r\n        let img = [...images];\r\n        let l = img.length;\r\n        if(l>1){\r\n            img.splice(ind, 1);\r\n        }\r\n        if(l==2){\r\n            img[0][\"hasremove\"]=false;\r\n        }\r\n        setImages(img);\r\n    }\r\n\r\n    const isAllImagePresent = ()=>{\r\n        var flag = true;\r\n        images.forEach(ele=>{\r\n            if(!ele.link){\r\n                flag = false;\r\n            }\r\n        })\r\n        return flag\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"product-create-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Create Product\"\r\n                subTitle=\"Add new Product\"\r\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Products</Button></Link>]}                \r\n            />\r\n            <div className=\"product-create-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form product-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Product Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the product name` }]}\r\n                            >\r\n                                <Input placeholder=\"Product Name\"  />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Categories\"\r\n                                name=\"category\"\r\n\r\n                                rules={[{ required: true, message: `Please select the categories` }]}\r\n                            >\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Select one or more category\"\r\n                                    mode=\"multiple\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        allCategories.map((ele,i)=>(\r\n                                            <Select.Option key={i} value={ele._id}>{ele.name}</Select.Option>\r\n                                        ))\r\n                                    }\r\n                                    \r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} style={{marginBottom:'40px'}}>\r\n                        <Col span=\"24\">\r\n                            <RichRextEditor editorState={productDescription} onChange={setProductDescription} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} style={{marginBottom:'20px'}}>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Regular Price (in rupees)\" \r\n                                name=\"regularPrice\"\r\n                                rules={[{ required: true, message: `Please enter the regular Price` }]}\r\n                            >\r\n                                <Input placeholder=\"Regular Price\" type=\"number\"  />\r\n                            </Form.Item> \r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Sale Price (in rupees)\" \r\n                                name=\"salePrice\"\r\n                            >\r\n                                <Input placeholder=\"Sale Price\" type=\"number\"  />\r\n                            </Form.Item> \r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Weight (in KG)\" \r\n                                name=\"weight\"\r\n                            >\r\n                                <Input placeholder=\"Weight\" type=\"number\"  />\r\n                            </Form.Item> \r\n                        </Col>\r\n                    </Row>\r\n                    <p style={{marginBottom:'10px'}}>Product Images</p>\r\n\r\n                    <Row gutter={16}>\r\n                        {images.map((ele,i)=>(\r\n                            <Col span=\"8\" key={i}>\r\n                                <ImgCrop \r\n                                    grid={true} \r\n                                    shape=\"rect\"\r\n                                    aspect={0.75}\r\n                                >\r\n                                    <Upload\r\n                                        name={`image${i}`}\r\n                                        listType=\"picture-card\"\r\n                                        className=\"image-uploader\"\r\n                                        showUploadList={false}\r\n                                        beforeUpload={(fl)=>beforeUploadFunction(fl,i)}\r\n\r\n                                    >\r\n                                        {\r\n                                            ele.link?<img src={`${apis.BASE_SERVER_URL}${ele.link}`} className=\"uploaded-image\"/>\r\n                                            :\r\n                                            <div>\r\n                                                {ele.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                                <div className=\"ant-upload-text\">Upload</div>\r\n                                            </div>\r\n                                        }\r\n                                    </Upload>\r\n                                </ImgCrop>\r\n                                {ele.hasremove?<Button type=\"default\" onClick={()=>removeImage(i)}>Remove Image</Button>:null}\r\n                            </Col>\r\n                        ))}\r\n                        \r\n                    </Row>\r\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\r\n                        <Col>\r\n                            <Button type=\"default\" onClick={addImage}>Add Image</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    Create\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductCreate);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title:'Image',\r\n        dataIndex:'images',\r\n        key:'images',\r\n        render : (img)=>{\r\n            if(img && Array.isArray(img) && img.length>0){\r\n                return(\r\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\r\n                )\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        }\r\n    },\r\n    {\r\n        title:'Categories',\r\n        dataIndex:'category',\r\n        key:'category',\r\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\r\n    },\r\n    {\r\n        title:'Regular Price',\r\n        dataIndex:'regularPrice',\r\n        key:'regularPrice'\r\n    },\r\n    {\r\n        title:'Sale Price',\r\n        dataIndex:'salePrice',\r\n        key:'salePrice'\r\n    },\r\n    {\r\n        title : 'Created On',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : \"Operations\",\r\n        render : (data)=>(\r\n            <Link to={`/admin/dashboard/product/details/${data._id}`}>\r\n                <Button type=\"default\">Details</Button>            \r\n            </Link>\r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport column from \"./productcolumnAdmin\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ProductListAdmin(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [productData,setProductData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(5);\r\n\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n    const fetchProductData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.LIST_PRODUCTS_FOR_ADMIN,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductData(result.data.data);\r\n                setTotalData(result.data.total);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductData();\r\n    },[currentPage])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"product-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Products\"\r\n                subTitle=\"List all products\"\r\n                extra={[<Link to=\"/admin/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \r\n            />\r\n            <div className=\"product-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1200 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={productData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductListAdmin);","import React from 'react';\r\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport apis from \"../../services/apis\";\r\nimport moment from \"moment\";\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default function UpdateProductStockSeller(props) {\r\n    return (\r\n        <Row gutter={16}>\r\n            <Col span=\"8\">\r\n                <Carousel autoplay>\r\n                    {props.productDetails && props.productDetails.images.map((ele,i)=>(\r\n                        <img src={`${apis.BASE_SERVER_URL}${ele}`} key={i} className=\"product-image\" />\r\n                    ))}\r\n                    \r\n                </Carousel>\r\n            </Col>\r\n            <Col span=\"16\">\r\n                <div className=\"product-detains-inner\">\r\n                    <Row justify=\"space-between\">\r\n                        <Col>\r\n                            <Title level={2}>{props.productDetails && props.productDetails.name}</Title>\r\n                            {props.productDetails && <p className=\"regularPrice\">Regular Price : {props.productDetails.regularPrice}</p>}\r\n                            {props.productDetails && props.productDetails.salePrice && <p className=\"salePrice\">Sale Price : {props.productDetails.salePrice}</p>}\r\n                        </Col>\r\n                        <Col>\r\n                            <Title level={4}>{props.productDetails && moment(props.productDetails.createdAt).format(\"DD-MM-YYYY\")}</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    {props.productDetails && props.productDetails.category.map((ele,i)=>(<Tag key={i} color={\"magenta\"}>{ele.name}</Tag>))}\r\n                    <div style={{marginBottom:'30px'}} />\r\n                    <Editor editorState={props.productDescription} readOnly={true} />\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        key: 'email'\r\n    },\r\n    {\r\n        title: 'Phone Number',\r\n        dataIndex: 'phoneNumber',\r\n        key: 'phoneNumber'\r\n    },\r\n    {\r\n        title: 'Stock',\r\n        dataIndex: 'stock',\r\n        key: 'stock'\r\n    },\r\n    {\r\n        title : 'Pin Codes',\r\n        dataIndex : 'deliverTo',\r\n        key:'deliverTo',\r\n        render : (data)=>{\r\n            let arr=data.map((ele,i)=>\r\n                <Tag key={i}>\r\n                    {ele}\r\n                </Tag>\r\n            )\r\n            return arr\r\n        }\r\n    },\r\n    \r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { Table,Pagination,Row,Col,Typography,message } from 'antd';\r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport column from \"./stockColumnAdmin\";\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default function ProductStockAdmin(props) {\r\n    const [productStock,setProductStock] = useState([]);\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(10);\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProducStock();\r\n    },[currentPage])\r\n\r\n\r\n\r\n    const fetchProducStock = ()=>{  \r\n        setIstableLoading(true);\r\n        let body = {\r\n            productId:props._id,\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(`${apis.STOCK_LIST_FOR_ADMIN}`,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setTotalData(result.data.total);\r\n                let stock = result.data.data.map(ele=>{\r\n                    return{\r\n                        ...ele,\r\n                        ...ele.seller,\r\n                        seller:null\r\n                    }\r\n                })\r\n                console.log(stock)\r\n                setProductStock(stock)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false);\r\n        })\r\n    }\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table \r\n                scroll={{ x: 1000 }} \r\n                bordered={true} \r\n                pagination={false} \r\n                loading={isTableLoading} \r\n                dataSource={productStock} \r\n                columns={column} \r\n                rowKey=\"_id\"\r\n                footer={() =>(\r\n                    <Row gutter={16} justify=\"end\">\r\n                        <Col>\r\n                            <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\r\nimport ProductStockAdmin from \"./ProductStockAdmin\"\r\nconst { Title } = Typography;\r\n\r\nfunction ProductDetailsAdmin(props) {\r\n    const {id} = useParams();\r\n    const [productDetails,setProductDetails] = useState();\r\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\r\n\r\n\r\n    const fetchProductDetails = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.PRODUCT_DETAILS_FOR_ADMIN}/${id}`).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductDetails(result.data.data);\r\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                setProductDescription(editorState)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductDetails();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"product-details-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Product Details\"\r\n                subTitle={productDetails?productDetails.name:\"\"}\r\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \r\n            />\r\n            <div className=\"product-details-inner padding-after-page-header\" >\r\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\r\n            </div>\r\n            <div className=\"product-stok-table-wrapper\">\r\n                <h2>Seller Stock</h2>\r\n                <ProductStockAdmin _id={id}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductDetailsAdmin);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link,useParams } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    UnorderedListOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./MyProfile.less\";\r\nconst { Option } = Select;\r\n\r\nfunction MyProfile(props) {\r\n    const {id} = useParams();\r\n    const [form] = Form.useForm(); \r\n    const [avatar,setAvatar] = useState();\r\n    const [isAvatarUploading,setIsAvatarUploading] = useState(false);\r\n    const [userType,setUserType] = useState();\r\n    const [profile,setProfile] = useState()\r\n\r\n    useEffect(()=>{\r\n        fetchProfileData()\r\n    },[])\r\n\r\n    const fetchProfileData = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.GET_PROFILE_DETAILS}?_id=${id}`).then((result)=>{\r\n            console.log(result.data);\r\n            if(result.data.status){\r\n                let user = result.data.data;\r\n                setAvatar(user.avatar);\r\n                form.setFieldsValue({ \r\n                    name:user.name,\r\n                    email:user.email,\r\n                    phoneNumber:user.phoneNumber   \r\n                });\r\n                setProfile(user)\r\n                if(user.userType==='seller'){\r\n                    form.setFieldsValue({ \r\n                        deliverTo:user.deliverTo  \r\n                    });\r\n                }\r\n                setUserType(user.userType);\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            message.error(\"server errror\")\r\n        }).finally(()=>{    \r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    const onFinish = (data)=>{\r\n        //console.log(avatar,data,apis.USER_CREATE);\r\n        const {email,name,phoneNumber,deliverTo} = data;\r\n        props.loading(true);\r\n        http.post(apis.UPDATE_PROFILE_DETAILS,{\r\n            _id:profile._id,\r\n            email,\r\n            name,\r\n            phoneNumber,\r\n            avatar,\r\n            deliverTo\r\n        }).then(result=>{\r\n            console.log(result.data);\r\n            if(result.data.status){\r\n                message.info(\"User updated sucessfully\");\r\n                fetchProfileData();\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{    \r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    const beforeUploadFunction = (file)=>{\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            setIsAvatarUploading(true);\r\n            const formData = new FormData();\r\n            formData.append('avatar',file);\r\n            http.post(apis.UPLOAD_USER_AVATAR,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    setAvatar(result.data.file);\r\n                    \r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                setIsAvatarUploading(false);\r\n            })\r\n            \r\n        })\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"my-profile-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"PROFILE\"\r\n                subTitle=\"Edit profile\"\r\n                extra={[]}                \r\n            />\r\n            <div className=\"my-profile-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the user's name!` }]}\r\n                            >\r\n                                <Input placeholder=\"Name\"  />\r\n                            </Form.Item>  \r\n                            <Form.Item \r\n                                label=\"Email Id\" \r\n                                name=\"email\"\r\n                                rules={[{ required: true, message: 'Please enter the email id!' },{type:'email',message:\"Enter a valid email id\"}]}\r\n                            >\r\n                                <Input placeholder=\"Email Id\" />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <ImgCrop grid={true} shape=\"round\">\r\n                                <Upload\r\n                                    name=\"avatar\"\r\n                                    listType=\"picture-card\"\r\n                                    className=\"avatar-uploader\"\r\n                                    showUploadList={false}\r\n                                    beforeUpload={beforeUploadFunction}\r\n\r\n                                >\r\n                                    {\r\n                                        avatar?<img src={`${apis.BASE_SERVER_URL}${avatar}`} className=\"uploaded-avatar\"/>\r\n                                        :\r\n                                        <div>\r\n                                            {isAvatarUploading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                            <div className=\"ant-upload-text\">Upload</div>\r\n                                        </div>\r\n                                    }\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Phone Number\" \r\n                                name=\"phoneNumber\"\r\n                                rules={[{ required: true, message: 'Please enter the phone number!' },{len:10,message:\"Enter a valid phone number!\"}]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"Phone Number\" style={{width:'100%'}}/>\r\n                            </Form.Item>\r\n                        </Col>                        \r\n                    </Row>\r\n                    {\r\n                        userType===\"seller\"?\r\n                            <Row justify=\"center\" gutter={16}>\r\n                                <Col span={24}>\r\n                                    <Form.Item \r\n                                        label=\"Delivery Pin Codes\" \r\n                                        name=\"deliverTo\"\r\n                                    >\r\n                                        <Select mode=\"tags\" style={{ width: '100%', minHeight:'50px' }} tokenSeparators={[',']}>\r\n\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            null\r\n                    }\r\n                    \r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    UPDATE\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(MyProfile);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title:'Image',\r\n        dataIndex:'images',\r\n        key:'images',\r\n        render : (img)=>{\r\n            if(img && Array.isArray(img) && img.length>0){\r\n                return(\r\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\r\n                )\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        }\r\n    },\r\n    {\r\n        title:'Categories',\r\n        dataIndex:'category',\r\n        key:'category',\r\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\r\n    },\r\n    {\r\n        title:'Stock',\r\n        dataIndex:'stock',\r\n        key:'stock'\r\n    },\r\n    {\r\n        title:'Regular Price',\r\n        dataIndex:'regularPrice',\r\n        key:'regularPrice'\r\n    },\r\n    {\r\n        title:'Sale Price',\r\n        dataIndex:'salePrice',\r\n        key:'salePrice'\r\n    },\r\n    {\r\n        title : 'Stock Updated',\r\n        dataIndex : 'stockUpdated',\r\n        key:'stockUpdated',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : \"Operations\",\r\n        render : (data)=>(\r\n            <Link to={`/admin/dashboard/product/details/${data.productId}`}>\r\n                <Button type=\"default\">Details</Button>            \r\n            </Link>\r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport column from \"./productcolumnSeller\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ProductListSeller(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [productData,setProductData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(5);\r\n\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n    const fetchProductData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.LIST_PRODUCT_FOR_SELLER,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductData(result.data.data);\r\n                setTotalData(result.data.total);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductData();\r\n    },[currentPage])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"product-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Products\"\r\n                subTitle=\"List all products\"\r\n                extra={[<Link to=\"/admin/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \r\n            />\r\n            <div className=\"product-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1200 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={productData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductListSeller);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Card,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\n\r\nfunction UpdateProductStock(props) {\r\n    const [form] = Form.useForm(); \r\n    const [isDisabled,setIsDisabled] = useState(true)\r\n\r\n\r\n    const onFinish = (data)=>{\r\n        if(isDisabled){\r\n            setIsDisabled(false);\r\n        }\r\n        else{\r\n            let {stock} = data;\r\n            try{\r\n                let n = parseInt(stock);\r\n                if(n>=0){\r\n                    props.loading(true);\r\n                    http.post(apis.UPDATE_PRODUCT_STOCK_SELLER,{\r\n                        id : props.productDetails._id,\r\n                        stock\r\n                    }).then((result)=>{\r\n                        console.log(result.data)\r\n                        if(result.data.status){\r\n                            message.success(result.data.message)\r\n                            setIsDisabled(true);\r\n                        }\r\n                        else{\r\n                            message.error(result.data.message)\r\n                        }\r\n                    }).catch((err)=>{\r\n                        console.log(err);\r\n                        Errorhandler(err,props.logout);\r\n                    }).finally(()=>{\r\n                        props.loading(false);\r\n                    })\r\n                }\r\n                else{\r\n                    message.error(\"Please enter a valid stock number\")\r\n                }\r\n            }\r\n            catch(err){\r\n                message.error(\"Please enter a valid stock number\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        form.setFieldsValue({\r\n            stock:props.productDetails?.stock\r\n        })\r\n    },[props.productDetails])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Card\r\n            title=\"Stock management\"\r\n            style={{marginTop:'50px'}}\r\n        >\r\n        \r\n            <Form\r\n                layout=\"inline\"\r\n                form={form}\r\n                onFinish={onFinish}\r\n                scrollToFirstError={true}\r\n                className=\"basic-form\"\r\n                initialValues={{\r\n                    stock:props.productDetails?.stock\r\n                }}\r\n            >\r\n                <Form.Item \r\n                    name=\"stock\"\r\n                    rules={[{ required: true, message: `Please enter the stock` }]}\r\n                >\r\n                    <Input disabled={isDisabled} placeholder=\"Stock\" type=\"number\"  />\r\n                </Form.Item> \r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">EDIT</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n        \r\n        \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(UpdateProductStock);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\r\nimport UpdateProductStock from \"./UpdateProductStock\";\r\nconst { Title } = Typography;\r\n\r\nfunction ProductDetailsSeller(props) {\r\n    const {id} = useParams();\r\n    const [productDetails,setProductDetails] = useState();\r\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\r\n\r\n\r\n    const fetchProductDetails = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.PRODUCT_DETAILS_FOR_SELLER}/${id}`).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductDetails(result.data.data);\r\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                setProductDescription(editorState)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductDetails();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"product-details-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Product Details\"\r\n                subTitle={productDetails?productDetails.name:\"\"}\r\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \r\n            />\r\n            <div className=\"product-details-inner padding-after-page-header\" >\r\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\r\n                <UpdateProductStock productDetails={productDetails} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductDetailsSeller);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Id',\r\n        dataIndex: '_id',\r\n        key: '_id'\r\n    },\r\n    {\r\n        title:\"Customer\",\r\n        dataIndex: 'user_details',\r\n        key: 'user_details',\r\n        render : (data)=>data.name\r\n    },\r\n    {\r\n        title:\"Address\",\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        render : (data)=>(\r\n            <>\r\n                <span>{data.city},</span>\r\n                <span>{data.pincode}</span>\r\n            </>\r\n        )\r\n    },\r\n    {\r\n        title: 'Placed On',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm:ss\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : \"Operations\",\r\n        render : (data)=>(\r\n            <Link to={`/admin/dashboard/order/details/${data._id}`}>\r\n                <Button type=\"default\">Details</Button>            \r\n            </Link>\r\n        )\r\n    }    \r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Order.less\";\r\nimport column from \"./OrderListColumn\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction OrderListSeller(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [orderData,setOrderData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(5);\r\n\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n    const fetchOrderData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.GET_ORDERS_LIST,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setOrderData(result.data.data);\r\n                setTotalData(result.data.total);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchOrderData();\r\n    },[currentPage])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"product-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Orders\"\r\n                subTitle=\"List all orders\"\r\n            />\r\n            <div className=\"product-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1200 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={orderData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(OrderListSeller);","import React, {useState,useEffect} from \"react\";\r\nimport apis from \"../../services/apis\"\r\nimport { Timeline ,Descriptions, Select, Card, Button, message, Input   } from 'antd';\r\nimport moment from \"moment\";\r\nimport http from \"../../services/httpCall\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nfunction SubOrder(props) {\r\n    const [options,setOptions]=useState([]);\r\n    const [selectedOption,setSelectedOption]=useState();\r\n    const [description,setDescription]=useState()\r\n\r\n    useEffect(()=>{\r\n        reCalculateOptions()\r\n    },[props.data])\r\n\r\n    const reCalculateOptions = ()=>{\r\n        let opts=[];\r\n        const lastStep =props.data.status[props.data.status.length - 1].name;\r\n        if(lastStep==='placed'){\r\n            opts = ['shipped','delivered']\r\n        }\r\n        else if(lastStep==='shipped'){\r\n            opts = ['delivered']\r\n        }\r\n        setOptions(opts)\r\n    }\r\n\r\n\r\n    const onSelect = (d)=>{\r\n        console.log(d);\r\n        setSelectedOption(d)\r\n    }\r\n\r\n    const onDescriptionChange=(d)=>{\r\n        setDescription(d.target.value)\r\n    }\r\n\r\n    const updateStatus = ()=>{\r\n        if(selectedOption){\r\n            props.loading(true)\r\n            http.post(apis.UPDATE_ORDER_STATUS,{\r\n                orderId : props.orderId,\r\n                subOrderId : props.data._id,\r\n                status : selectedOption,\r\n                description : description\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    message.success(result.data.message)\r\n                }\r\n                else{\r\n                    message.error(result.data.message)\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                message.error(\"server error\")\r\n            }).finally(()=>{\r\n                props.loading(false);\r\n                props.fetchOrderDetails();\r\n                setSelectedOption();\r\n                setDescription()\r\n            })\r\n        }\r\n        else{\r\n            message.error(\"please select a status\")\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Descriptions title=\"Item Info\"  bordered>\r\n                <Descriptions.Item label=\"Image\">\r\n                    <img className=\"item-image\" src={`${apis.BASE_SERVER_URL}${props.data.product.images[0]}`} />\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Name\">{props.data.product.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Ordered Quantity\">{props.data.count}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Unit Price\">{props.data.unitPrice}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Total Price\">{props.data.totalPrice}</Descriptions.Item>\r\n            </Descriptions>\r\n            <div className=\"status-tracker\">\r\n                <Timeline mode=\"left\">\r\n                    {\r\n                        props.data.status.map((ele,i)=>(\r\n                            <Timeline.Item label={`${ele.name} - ${moment(ele.date).format(\"DD-MM-YYYY hh:mm:ss\")}`} key={i}>{ele.remark}</Timeline.Item>\r\n                        ))\r\n                    }\r\n                </Timeline>\r\n                <Card className=\"status-control\">\r\n                    Update Status<br />\r\n                    <Select placeholder=\"select an option\" value={selectedOption}  style={{ width: 200 }} onSelect={onSelect}>\r\n                        <Option>Select an option</Option>\r\n                        {options.map((ele,i)=><Option key={i} value={ele}>{ele}</Option>)}\r\n                    </Select>\r\n                    <TextArea value={description} rows={4} onChange={onDescriptionChange}/>\r\n                    <Button onClick={updateStatus}>UPDATE</Button>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SubOrder;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Descriptions,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport SubOrder from \"./SingleOrder\"\r\nconst { Title } = Typography;\r\n\r\nfunction OrderDetails(props) {\r\n    const {id} = useParams();\r\n    const [orderDetails,setOrderDetails] = useState();\r\n    const [mySubOrder,setMySubOrder]=useState([])\r\n\r\n    const fetchOrderDetails = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.ORDER_DETAILS}/${id}`).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setOrderDetails(result.data.data);\r\n                let ords =[];\r\n                result.data.data.items.forEach(ele=>{\r\n                    if(ele.seller._id==result.data.userId){\r\n                        ords.push(ele)\r\n                    }\r\n                })\r\n                setMySubOrder(ords)\r\n                console.log(\"sub orders\",ords)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchOrderDetails();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"order-details-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Order Details\"\r\n                subTitle={id}\r\n                extra={[<Link to=\"/admin/dashboard/orders\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Orders</Button></Link>]}                \r\n            />\r\n            <div className=\"order-details-inner padding-after-page-header\" >\r\n                {orderDetails?\r\n                    <>\r\n                        <div className=\"details-info\">\r\n                            <Descriptions title=\"Customer Info\"  bordered>\r\n                                <Descriptions.Item label=\"Name\">{orderDetails.user.name}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Email Id\">{orderDetails.user.email}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Phone Number\">{orderDetails.user.phoneNumber}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Address\">\r\n                                    <div>\r\n                                        <div>{orderDetails.address.lineone}</div>\r\n                                        <div>{orderDetails.address.locality}</div>\r\n                                        <span>{orderDetails.address.city},</span>\r\n                                        <span>{orderDetails.address.state},</span>\r\n                                        <span>{orderDetails.address.pincode}</span>\r\n                                    </div>\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"Ordered On\">{moment(orderDetails.createdAt).format(\"DD-MM-YYYY hh:mm:ss\")}</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </div>\r\n                        <div className=\"item-details-wrapper\">\r\n                            {\r\n                                mySubOrder.map((ele,i)=><SubOrder loading={props.loading} orderId={id} fetchOrderDetails={fetchOrderDetails} key={i} data={ele} />)\r\n                            }\r\n                        </div>\r\n                    </>\r\n                    \r\n                    :\r\n                    null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(OrderDetails);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Layout,Row,Col } from 'antd';\r\nimport { useLocation, Switch, Route } from \"react-router-dom\";\r\nimport \"./Dashboard.less\";\r\nimport Header from \"./Header\";\r\nimport SideBar from \"./SideBar\";   \r\nimport UserList from \"../Users/UserList\"; \r\nimport UserCreate from \"../Users/UserCreate\";\r\nimport CategoryCreate from \"../Category/CategoryCreate\";\r\nimport CategoryList from \"../Category/CategoryList\";\r\nimport ProductCreate from \"../Product/ProductCreate\";\r\nimport ProductListAdmin from \"../Product/ProductListAdmin\";\r\nimport ProductDetailsAdmin from \"../Product/ProductDetailsAdmin\";\r\nimport MyProfile from \"../Profile/MyProfile\"\r\n\r\nimport ProductListSeller from \"../Product/ProductListSeller\";\r\nimport ProductDetailsSeller from \"../Product/ProductDetailsSeller\";\r\nimport OrderListSeller from \"../Order/OrderList\";\r\nimport OrderDetails from \"../Order/OrderDetails\"\r\n\r\n\r\nfunction Dashboard(props) {\r\n    const [sideBarCollapsed,setSideBarCollapsed] = useState(false);\r\n\r\n    let toggleSideBar = ()=>{\r\n        setSideBarCollapsed(!sideBarCollapsed);\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"dashboard-container\">\r\n            <Header toggleSideBar={toggleSideBar}/>\r\n            <Row className=\"dashboard-content-container\">\r\n                <Col>\r\n                    <SideBar key={props.Auth.userdetails} sideBarCollapsed={sideBarCollapsed} user={props.Auth.userdetails}/>\r\n                </Col>\r\n                <Col className={\"dashboard-content-col\"+(sideBarCollapsed?\" dashboadr-sidebar-collapsed\":\" dashboard-sidebar-normal\")}>\r\n                    <Layout.Content  className=\"dasboard-content-wrapper\">\r\n                        {\r\n                            props.Auth.userdetails.userType && props.Auth.userdetails.userType==='admin'?\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <Switch>\r\n                                    <Route exact={true} path=\"/admin/dashboard/user/list\">\r\n                                        <UserList />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/user/create\">\r\n                                        <UserCreate />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/category/create\">\r\n                                        <CategoryCreate />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/category/list\">\r\n                                        <CategoryList />\r\n                                    </Route> \r\n                                    <Route exact={true} path=\"/admin/dashboard/product/create\">\r\n                                        <ProductCreate />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/list\">\r\n                                        <ProductListAdmin />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/details/:id\">\r\n                                        <ProductDetailsAdmin />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/profile/:id\">\r\n                                        <MyProfile />\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                            :\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <Switch>\r\n                                    <Route path=\"/admin/dashboard/product/list\">\r\n                                        <ProductListSeller />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/details/:id\">\r\n                                        <ProductDetailsSeller />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/orders\">\r\n                                        <OrderListSeller />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/order/details/:id\">\r\n                                        <OrderDetails />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/profile/:id\">\r\n                                        <MyProfile />\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                        }\r\n                           \r\n                        <Layout.Footer className=\"dashboard-footer-wrapper\">BANDHAN SOLUTIONS</Layout.Footer>    \r\n                    </Layout.Content>\r\n                </Col>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n\r\n})(Dashboard);\r\n\r\n\r\n\r\n\r\n","import React,{ useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { logout, setUserDetails } from \"../../actions/authAction\"; \r\nimport EntryLoader from \"../Loader/EntryLoader\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport http from \"../../services/httpCall\";\r\nimport apis from \"../../services/apis\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\n\r\nfunction DashboardWrapper(props) {\r\n\r\n    let fetchUserDetails = ()=>{\r\n        http.get(apis.GET_USER_DETAILS).then((result)=>{\r\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\r\n                props.setUserDetails(result.data.data);\r\n            }\r\n            else{\r\n                props.logout();\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout)\r\n        })\r\n    }\r\n\r\n    //fetching user details on component load\r\n    useEffect(()=>{\r\n        if(!props.Auth.userdetails){\r\n            console.log(props.Auth.userdetails)\r\n            fetchUserDetails();\r\n        }        \r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            {props.Auth.userdetails?\r\n                <Dashboard />\r\n            :\r\n                <EntryLoader />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth,\r\n});\r\n  \r\nexport default connect(mapStateToProps, { setUserDetails, logout })(DashboardWrapper);\r\n\r\n","import React from \"react\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport {connect} from 'react-redux';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LoginWrapper from \"./components/Root/LoginWrapper\";\r\nimport PrivateRoute from \"./components/Root/PrivateWrapper\";\r\nimport Login from \"./components/Login/Login\";\r\nimport DashboardWrapper from \"./components/Wrapper/DashboardWrapper\";\r\nimport { login } from \"./actions/authAction\";\r\n\r\n\r\n\r\nlet App = (props)=>{\r\n    //auth check if token exist\r\n    let Token  = localStorage.getItem(\"Token\");\r\n    console.log(Token);\r\n    if(Token && Token!==\"null\" && Token!==\"undefined\"){\r\n      props.login(Token);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Loader />\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/admin\">\r\n                        <Redirect to={{pathname: \"/admin/dashboard\"}}/>\r\n                    </Route>\r\n                    <LoginWrapper exact={true} path=\"/admin/login\">\r\n                        <Login />\r\n                    </LoginWrapper>\r\n                    <PrivateRoute path=\"/admin/dashboard\">\r\n                        <DashboardWrapper />\r\n                    </PrivateRoute>\r\n                    <Route>\r\n                        <Redirect to=\"/admin\" />\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps= (state) => ({\r\n    \r\n})\r\nexport default connect(mapStateToProps, { \r\n    login\r\n})(App);","const initialState = {\r\n    loading_active : 0\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            let lc = state.loading_active;\r\n            if(action.payload){\r\n                lc++;\r\n            }\r\n            else{\r\n                lc = lc===0?0:lc-1;\r\n            }\r\n            return {\r\n                ...state,\r\n                loading_active : lc              \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    isLoggedIn : false,\r\n    token : null,\r\n    userdetails : null          \r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : true,\r\n                token : action.token,\r\n                userdetails : action.userdetails\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                token : null,\r\n                userdetails : null\r\n            }\r\n        case 'SET_USER_DETAILS':\r\n            return{\r\n                ...state,\r\n                userdetails : action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'; \r\nimport Loader from \"./loaderReducer\";\r\nimport Auth from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n    Loader,\r\n    Auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\n\r\nconst initialState={};\r\nconst middleware=[thunk,logger];\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    applyMiddleware(...middleware)\r\n);\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}