{"version":3,"sources":["static/brand-logo.png","static/loader.gif","components/Loader/Loader.js","components/Root/LoginWrapper.js","components/Root/PrivateWrapper.js","services/apis.js","services/httpCall.js","actions/loadingAction.js","services/errorHandler.js","actions/authAction.js","components/Login/Login.js","components/Loader/EntryLoader.js","components/Wrapper/Header.js","services/decideSideBar.js","components/Wrapper/SideBar.js","components/Users/userColumn.js","components/Users/UserList.js","services/beforeUpload.js","components/Users/UserCreate.js","components/Category/CategoryCreate.js","components/Category/categoryColumn.js","components/Category/CategoryList.js","services/TextEditor.js","components/Product/ProductCreate.js","components/Product/ProductEdit.js","components/Product/productcolumnAdmin.js","components/Product/ProductListAdmin.js","components/Product/ProductDetailsCommon.js","components/Product/stockColumnAdmin.js","components/Product/ProductStockAdmin.js","components/Product/ProductDetailsAdmin.js","components/Profile/MyProfile.js","components/Product/productcolumnSeller.js","components/Product/ProductListSeller.js","components/Product/UpdateProductStock.js","components/Product/ProductDetailsSeller.js","components/Order/OrderListColumn.js","components/Order/OrderListSeller.js","components/Order/OrderListAdmin.js","components/Order/SingleOrder.js","components/Order/OrderDetails.js","components/Poster/Poster.js","components/Wrapper/Dashboard.js","components/Wrapper/DashboardWrapper.js","App.js","reducers/loaderReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","connect","state","loader","Loader","props","className","loading_active","id","Auth","children","rest","render","location","isLoggedIn","to","pathname","from","apis","BASE_LOCAL_URL","BASE_SERVER_URL","LOGIN_WITH_EMAIL_AND_PASSWORD","GET_USER_DETAILS","GET_PROFILE_DETAILS","UPDATE_PROFILE_DETAILS","UPLOAD_USER_AVATAR","USER_CREATE","LIST_USERS","CATEGORY_CREATE","LIST_CATEGORY","CREATE_PRODUCT","EDIT_PRODUCT","UPLOAD_PRODUCT_IMAGE","LIST_PRODUCTS_FOR_ADMIN","PRODUCT_DETAILS_FOR_ADMIN","STOCK_LIST_FOR_ADMIN","LIST_PRODUCT_FOR_SELLER","PRODUCT_DETAILS_FOR_SELLER","UPDATE_PRODUCT_STOCK_SELLER","GET_ORDERS_LIST","ORDER_DETAILS","UPDATE_ORDER_STATUS","UPLOAD_POSTER","LIST_POSTER","DELETE_POSTER","http","axios","create","baseURL","loading","data","type","payload","Errorhandler","error","cb","console","log","response","status","message","e","login","token","userdetails","defaults","headers","common","logout","localStorage","removeItem","setUserDetails","user","Title","level","src","brandLogo","style","width","marginBottom","name","onFinish","values","post","then","result","userType","setItem","catch","err","finally","Item","hasFeedback","rules","required","prefix","MailOutlined","placeholder","Password","LockOutlined","htmlType","EntryLoader","require","alt","Theme","Header","justify","gutter","align","height","dot","BellOutlined","placement","trigger","UserOutlined","title","LogoutOutlined","onClick","AdminSideBar","theme","mode","SubMenu","key","PlusCircleOutlined","UnorderedListOutlined","BranchesOutlined","ShoppingCartOutlined","PictureOutlined","SellerSideBar","_id","Sider","Layout","collapsible","collapsed","sideBarCollapsed","columns","dataIndex","color","moment","format","row","useState","isTableLoading","setIstableLoading","userData","setUserData","currentPage","setCurrentpage","totalData","setTotalData","pageSize","setUserType","pageChanger","page","onUserTypeChange","value","useEffect","body","pageNumber","total","fetchUserData","subTitle","extra","icon","scroll","x","bordered","pagination","dataSource","column","rowKey","onChange","Option","footer","current","beforeUpload","file","extension","size","isJpgOrPng","includes","isLt2M","Select","Form","useForm","form","avatar","setAvatar","isAvatarUploading","setIsAvatarUploading","layout","email","phoneNumber","password","deliverTo","info","resetFields","scrollToFirstError","span","label","grid","shape","listType","showUploadList","formData","FormData","append","LoadingOutlined","PlusOutlined","len","min","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","minHeight","tokenSeparators","categoryData","setCategoryData","fetchCategoryData","RichEditorExample","focus","refs","editor","editorState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","propertyKey","link","hasremove","images","setImages","properties","setProperties","allCategories","setAllCategories","EditorState","createEmpty","productDescription","setProductDescription","fetchAllCategory","isAllImagePresent","flag","forEach","ele","accepted","i","raw","convertToRaw","category","regularPrice","salePrice","productVideo","description","JSON","stringify","success","push","ContentState","createFromText","showSearch","filterOption","input","option","toLowerCase","indexOf","val","index","p","setPropertyType","eleee","ii","changePropertyValue","target","splice","removeProperty","aspect","fl","img1","img2","img3","ind","img","l","length","removeImage","newImg","useParams","get","setFieldsValue","imgs","c","d","convertFromRaw","parse","createWithContent","Array","isArray","productData","setProductData","fetchProductData","Typography","ProductDetailsCommon","autoplay","productDetails","createdAt","readOnly","ProductStockAdmin","productStock","setProductStock","fetchProducStock","productId","stock","seller","setProductDetails","profile","setProfile","fetchProfileData","isDisabled","setIsDisabled","marginTop","parseInt","initialValues","disabled","city","pincode","orderData","setOrderData","fetchOrderData","allSellers","setAllSellers","selectedSeller","setSelectedSeller","sellerId","onSelect","TextArea","Input","SubOrder","options","setOptions","selectedOption","setSelectedOption","setDescription","reCalculateOptions","opts","lastStep","product","count","unitPrice","totalPrice","date","remark","rows","orderId","subOrderId","fetchOrderDetails","orderDetails","setOrderDetails","mySubOrder","setMySubOrder","items","ords","userId","address","lineone","locality","posters","setPosters","fetchPosters","a","responses","deleteMe","hoverable","cover","setSideBarCollapsed","toggleSideBar","Content","exact","path","Footer","Token","getItem","Fragment","initialState","combineReducers","action","lc","middleware","thunk","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.71823b0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brand-logo.26748af0.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.e6dcd181.gif\";","import React from 'react';\r\nimport \"./loader.less\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className={props.loader.loading_active>0?\"loader-wrapper vsbl\":\"loader-wrapper nt-vsbl\"}>  \r\n           <div id=\"loader_bar\"><b></b><i></i></div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps= (state) => ({\r\n    loader : state.Loader\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Loader);","import React,{ ReactNode } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction LoginWrapper({ children,Auth, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                !Auth.isLoggedIn ? \r\n                (\r\n                    children\r\n                ) \r\n                : \r\n                (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/admin/dashboard\"\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth : state.Auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{})(LoginWrapper);","import React,{ ReactNode } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction PrivateRoute({ children,Auth, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                Auth.isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/admin/login\",\r\n                        state: { from: location }\r\n                    }}\r\n                />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth : state.Auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{})(PrivateRoute);","const envoirnment = process.env.NODE_ENV;\r\nconst apis = {\r\n\r\n    BASE_LOCAL_URL : envoirnment === \"development\" ? \"http://localhost:7000\" : \"\",\r\n    BASE_SERVER_URL : envoirnment === \"development\"? \"http://localhost:4500\": \"\",\r\n\r\n    LOGIN_WITH_EMAIL_AND_PASSWORD : \"/apis/v1/login-with-email-password\",\r\n    GET_USER_DETAILS:\"/apis/v1/userdetails\",\r\n    GET_PROFILE_DETAILS:\"/apis/v1/profiledetails\",\r\n    UPDATE_PROFILE_DETAILS:\"/apis/v1/update-profile\",\r\n\r\n\r\n    UPLOAD_USER_AVATAR:\"/apis/v1/upload-avatar\",\r\n    USER_CREATE:\"/apis/v1/user/create\",\r\n    LIST_USERS:\"/apis/v1/user/list\",\r\n\r\n\r\n    CATEGORY_CREATE : \"/apis/v1/category/create\",\r\n    LIST_CATEGORY : \"/apis/v1/category/list\",\r\n\r\n\r\n    CREATE_PRODUCT : \"/apis/v1/product/create\",\r\n    EDIT_PRODUCT : \"/apis/v1/product/edit\",\r\n    UPLOAD_PRODUCT_IMAGE : \"/apis/v1/upload-product-image\",\r\n    LIST_PRODUCTS_FOR_ADMIN : \"/apis/v1/product/listforadmin\",\r\n    PRODUCT_DETAILS_FOR_ADMIN : \"/apis/v1/product/detailsofadmin\",\r\n    STOCK_LIST_FOR_ADMIN:\"/apis/v1/product/stock-list-foradmin\",\r\n\r\n    LIST_PRODUCT_FOR_SELLER : \"/apis/v1/product/listforseller\",\r\n    PRODUCT_DETAILS_FOR_SELLER : \"/apis/v1/product/detailsforseller\",\r\n    UPDATE_PRODUCT_STOCK_SELLER : '/apis/v1/product/stock/updatebyseller',\r\n\r\n\r\n\r\n\r\n    GET_ORDERS_LIST:\"/apis/v1/seller/get-my-orders\",\r\n    ORDER_DETAILS:\"/apis/v1/order/details\",\r\n    UPDATE_ORDER_STATUS:\"/apis/v1/order/update-status-details\",\r\n\r\n\r\n\r\n\r\n    UPLOAD_POSTER : \"/apis/v1/upload-poster\",\r\n    LIST_POSTER : \"/apis/v1/list-poster\",\r\n    DELETE_POSTER:\"/apis/v1/delete-poster\"\r\n\r\n\r\n};\r\n\r\nexport default apis;","import axios from 'axios';\r\nimport apis from \"./apis\";\r\n\r\nconst http = axios.create({\r\n    baseURL: apis.BASE_SERVER_URL\r\n});\r\n\r\n\r\nexport default http;","export const loading = (data) => {\r\n    return {\r\n        type: 'LOADING',\r\n        payload : data\r\n    };\r\n};","import {message} from \"antd\";\r\n\r\nconst Errorhandler = (error,cb)=>{\r\n    try{\r\n        console.log(error.response)\r\n        if(error.response.status === 401){\r\n            cb();\r\n        }\r\n        else if(error.response.status === 422){\r\n            message.error(\"Server Error!\")\r\n        }\r\n        else{\r\n            message.error(error.response.data.message || \"server error\");\r\n        }\r\n    }\r\n    catch(e){\r\n        console.log(e)\r\n        message.error(\"Server Error!\")\r\n    }\r\n}\r\n\r\nexport default Errorhandler;","import http from \"../services/httpCall\";\r\n\r\nexport const login = (token,userdetails) => {\r\n    http.defaults.headers.common['Authorization']='Bearer '+ token;\r\n    return {\r\n        type: 'LOGIN',\r\n        token : token,\r\n        userdetails:userdetails\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"Token\");\r\n    return {\r\n        type: 'LOGOUT'\r\n    };\r\n};\r\n  \r\nexport const setUserDetails = (user)=>{\r\n    return {\r\n        type : 'SET_USER_DETAILS',\r\n        payload : user\r\n    }\r\n}","import React from 'react';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { loading } from \"../../actions/loadingAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport { Typography, Form, Input, Button, message } from 'antd';\r\nimport { MailOutlined , LockOutlined } from '@ant-design/icons';\r\nimport { login, setUserDetails, logout } from \"../../actions/authAction\"\r\nimport \"./login.less\";\r\nimport brandLogo from \"../../static/brand-logo.png\"\r\n\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    let onFinish = (values)=>{\r\n        console.log(`getting ${values} from the form`);\r\n        props.loading(true);\r\n        http.post(apis.LOGIN_WITH_EMAIL_AND_PASSWORD,values).then((result)=>{\r\n            console.log(result.data);\r\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\r\n                localStorage.setItem(\"Token\", result.data.token);\r\n                props.login(result.data.token,result.data.data);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);   \r\n            Errorhandler(err,props.logout)\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <div className=\"login-section-wrapper\">\r\n                <Typography.Title level={1}>BANDHAN</Typography.Title>\r\n                \r\n                <img src={brandLogo} style={{width:'100px',marginBottom:'20px'}} />\r\n                <p className=\"brand-sub-name\">ADMIN PANEL</p>\r\n                <Form\r\n                    name=\"login-form\"\r\n                    className=\"login-form\"\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        hasFeedback={true}\r\n                        rules={[\r\n                            { \r\n                                required: true, \r\n                                message: 'Please input your E-mail!' \r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"email id\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        hasFeedback={true}\r\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                    >\r\n                        <Input.Password\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Log in\r\n                        </Button>\r\n                    </Form.Item>\r\n                    {/* <Form.Item>\r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                            Forgot password\r\n                        </a>\r\n                    </Form.Item> */}\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth,\r\n});\r\n  \r\nexport default connect(mapStateToProps, { \r\n    loading,\r\n    login,\r\n    setUserDetails,\r\n    logout\r\n})(Login);","import React from 'react';\r\nimport \"./loader.less\";\r\nimport { Typography } from \"antd\";\r\n\r\nexport default function EntryLoader() {\r\n    return (\r\n        <div className=\"entry-loader-container\">\r\n            <img src={require(\"../../static/loader.gif\")} className=\"entry-loader-brand-logo\" alt=\"entry-loader\" />\r\n            <Typography.Title level={4}>Loading...</Typography.Title>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Layout, Row, Col, Badge, Typography, Tooltip, Popover } from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    BellOutlined,\r\n    SearchOutlined,\r\n    LogoutOutlined\r\n} from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {connect} from \"react-redux\";\r\nimport brandLogo from \"../../static/brand-logo.png\"\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <Layout.Header className=\"dashboard-header-wrapper\" >\r\n            <Row justify=\"space-between\">\r\n                <Col>\r\n                    <Row gutter={20} align=\"middle\">\r\n                        <Col>\r\n                            <Link to=\"/admin/dashboard\">\r\n                                <img src={brandLogo} style={{height:'50px'}}/>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col className=\"header-brand-name-wrapper\">\r\n                            <Typography.Title className=\"header-brand-name\" level={3}>BANDHAN</Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Row gutter={30}>\r\n                        <Col>\r\n                            <Badge dot={true}>\r\n                                <BellOutlined  className=\"header-option-icons\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Popover placement=\"bottomRight\" trigger=\"click\">\r\n                                <UserOutlined className=\"header-option-icons\" />\r\n                            </Popover>\r\n                        </Col>\r\n                        <Col>\r\n                            <Tooltip title=\"logout\">\r\n                                <LogoutOutlined className=\"header-option-icons\" onClick={props.logout}/>\r\n                            </Tooltip>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Layout.Header>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Theme : state.Theme\r\n});\r\n\r\nexport default connect(mapStateToProps, { \r\n    logout\r\n})(Header);\r\n\r\n","import React from \"react\";\r\nimport {Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined,\r\n    ShoppingCartOutlined,\r\n    BranchesOutlined,\r\n    PictureOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nexport const AdminSideBar = (props)=>(\r\n    <Menu  theme=\"dark\" mode=\"inline\">\r\n        <Menu.SubMenu key=\"admin1\" title={<span><UserOutlined /><span>USER</span></span>}>\r\n            <Menu.Item  key=\"11\">\r\n                <Link to=\"/admin/dashboard/user/create\">\r\n                    <PlusCircleOutlined />\r\n                    <span>CREATE USER</span>\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Item  key=\"12\">\r\n                <Link to=\"/admin/dashboard/user/list\">\r\n                    <UnorderedListOutlined />\r\n                    <span>USER LIST</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.SubMenu key=\"admin2\" title={<span><BranchesOutlined /><span>CATEGORY</span></span>}>\r\n            <Menu.Item  key=\"21\">\r\n                <Link to=\"/admin/dashboard/category/create\">\r\n                    <PlusCircleOutlined />\r\n                    <span>CREATE CATEGORY</span>\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Item  key=\"22\">\r\n                <Link to=\"/admin/dashboard/category/list\">\r\n                    <UnorderedListOutlined />\r\n                    <span>CATEGORY LIST</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.SubMenu key=\"admin3\" title={<span><ShoppingCartOutlined /><span>PRODUCT</span></span>}>\r\n            <Menu.Item  key=\"31\">\r\n                <Link to=\"/admin/dashboard/product/create\">\r\n                    <PlusCircleOutlined />\r\n                    <span>CREATE PRODUCT</span>\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Item  key=\"32\">\r\n                <Link to=\"/admin/dashboard/product/list\">\r\n                    <UnorderedListOutlined />\r\n                    <span>PRODUCT LIST</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.Item  key=\"admin-44\">\r\n            <Link to={ `/admin/dashboard/orders`}>\r\n                <ShoppingCartOutlined />\r\n                <span>ORDERS</span>\r\n            </Link>\r\n        </Menu.Item>\r\n        <Menu.Item  key=\"admin-54\">\r\n            <Link to={ `/admin/dashboard/posters`}>\r\n                <PictureOutlined />\r\n                <span>POSTERS</span>\r\n            </Link>\r\n        </Menu.Item>\r\n    </Menu>\r\n)\r\n\r\nexport const SellerSideBar = (props)=>(\r\n    <Menu  theme=\"dark\" mode=\"inline\">\r\n        <Menu.Item  key=\"32\">\r\n            <Link to=\"/admin/dashboard/product/list\">\r\n                <UnorderedListOutlined />\r\n                <span>PRODUCT LIST</span>\r\n            </Link>\r\n        </Menu.Item>\r\n        <Menu.Item  key=\"33\">\r\n            <Link to={ `/admin/dashboard/orders`}>\r\n                <ShoppingCartOutlined />\r\n                <span>ORDERS</span>\r\n            </Link>\r\n        </Menu.Item>\r\n        <Menu.Item  key=\"34\">\r\n            <Link to={ `/admin/dashboard/profile/${props.user?props.user._id:\"\"}`}>\r\n                <UserOutlined />\r\n                <span>PROFILE</span>\r\n            </Link>\r\n        </Menu.Item>\r\n\r\n    </Menu>\r\n)\r\n\r\n","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AdminSideBar,SellerSideBar} from \"../../services/decideSideBar\";\r\nconst { Sider } = Layout;\r\n\r\nfunction SideBar(props) {\r\n    return (\r\n        <Sider key={props.Auth.userdetails} trigger={null} collapsible collapsed={props.sideBarCollapsed} className=\"dasboard-sidebar-wrapper\">\r\n            {\r\n                props.Auth.userdetails.userType==='admin'?\r\n                    <AdminSideBar user={props.user} />\r\n                :null   \r\n            }\r\n            {\r\n                props.Auth.userdetails.userType==='seller'?\r\n                    <SellerSideBar user={props.user} />\r\n                :null   \r\n            }\r\n        </Sider>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n\r\n})(SideBar);\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag, Button} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title:'Email Id',\r\n        dataIndex:'email',\r\n        key:'email'\r\n    },\r\n    {\r\n        title:'Phone Number',\r\n        dataIndex:'phoneNumber',\r\n        key:'phoneNumber'\r\n    },\r\n    {\r\n        title : 'Registration Timestamp',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : 'CONTROLS',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data,row)=>(\r\n            <>\r\n                <Link to={`/admin/dashboard/profile/${row._id}`}>Edit</Link>\r\n            </>\r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./User.less\";\r\nimport column from \"./userColumn\";\r\n\r\nfunction UserList(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [userData,setUserData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(10);\r\n    const [userType,setUserType] = useState(\"customer\");\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n    const onUserTypeChange = (value)=>{\r\n        setCurrentpage(1);\r\n        setUserType(value);\r\n    }\r\n\r\n    const fetchUserData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize,\r\n            userType : userType\r\n        }\r\n        http.post(apis.LIST_USERS,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setUserData(result.data.data);\r\n                setTotalData(result.data.total)\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUserData();\r\n    },[currentPage,userType])\r\n\r\n    return (\r\n        <div className=\"user-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Users\"\r\n                subTitle=\"List all Users\"\r\n                extra={[<Link to=\"/admin/dashboard/user/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create User</Button></Link>]}                \r\n            />\r\n            <div className=\"user-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1000 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={userData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    title={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Select\r\n                                style={{width:'200px'}}\r\n                                    value={userType}\r\n                                    onChange={onUserTypeChange}\r\n                                >\r\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\r\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\r\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\r\n                                </Select>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(UserList);","import { message } from 'antd';\r\n\r\nexport const beforeUpload = (file,extension,size,cb)=>{\r\n    console.log(file.size/1024/1024,file.type)\r\n    const isJpgOrPng = extension.includes(file.type);\r\n    const isLt2M = (file.size / 1024 / 1024) < size;\r\n    if (!isJpgOrPng) {\r\n        message.error('Invalid file type!');\r\n    }\r\n    else{\r\n        if (!isLt2M) {\r\n            message.error('Too large file!');\r\n        }\r\n        else{\r\n            cb();\r\n        }\r\n    }\r\n}","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    UnorderedListOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./User.less\";\r\nconst { Option } = Select;\r\n\r\nfunction UserCreate(props) {\r\n    const [form] = Form.useForm(); \r\n    const [avatar,setAvatar] = useState();\r\n    const [isAvatarUploading,setIsAvatarUploading] = useState(false);\r\n    const [userType,setUserType] = useState();\r\n\r\n    const onFinish = (data)=>{\r\n        if(!avatar){\r\n            message.error(\"please upload an avatar.\")\r\n        }\r\n        else{\r\n            //console.log(avatar,data,apis.USER_CREATE);\r\n            const {email,name,phoneNumber,userType,password,deliverTo} = data;\r\n            props.loading(true);\r\n            http.post(apis.USER_CREATE,{\r\n                email,\r\n                name,\r\n                phoneNumber,\r\n                userType,\r\n                password,\r\n                avatar,\r\n                deliverTo\r\n            }).then(result=>{\r\n                console.log(result.data);\r\n                if(result.data.status){\r\n                    message.info(\"User created sucessfully\");\r\n                    form.resetFields();\r\n                    setAvatar();\r\n                    setUserType();\r\n                }\r\n                else{\r\n                    message.error(result.data.message)\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{    \r\n                props.loading(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    const beforeUploadFunction = (file)=>{\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            setIsAvatarUploading(true);\r\n            const formData = new FormData();\r\n            formData.append('avatar',file);\r\n            http.post(apis.UPLOAD_USER_AVATAR,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    setAvatar(result.data.file);\r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                setIsAvatarUploading(false);\r\n            })\r\n            \r\n        })\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"user-create-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Create Users\"\r\n                subTitle=\"Add new User\"\r\n                extra={[<Link to=\"/admin/dashboard/user/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Users</Button></Link>]}                \r\n            />\r\n            <div className=\"user-create-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the user's name!` }]}\r\n                            >\r\n                                <Input placeholder=\"Name\"  />\r\n                            </Form.Item>  \r\n                            <Form.Item \r\n                                label=\"Email Id\" \r\n                                name=\"email\"\r\n                                rules={[{ required: true, message: 'Please enter the email id!' },{type:'email',message:\"Enter a valid email id\"}]}\r\n                            >\r\n                                <Input placeholder=\"Email Id\" />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <ImgCrop grid={true} shape=\"round\">\r\n                                <Upload\r\n                                    name=\"avatar\"\r\n                                    listType=\"picture-card\"\r\n                                    className=\"avatar-uploader\"\r\n                                    showUploadList={false}\r\n                                    beforeUpload={beforeUploadFunction}\r\n\r\n                                >\r\n                                    {\r\n                                        avatar?<img src={`${apis.BASE_SERVER_URL}${avatar}`} className=\"uploaded-avatar\"/>\r\n                                        :\r\n                                        <div>\r\n                                            {isAvatarUploading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                            <div className=\"ant-upload-text\">Upload</div>\r\n                                        </div>\r\n                                    }\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Phone Number\" \r\n                                name=\"phoneNumber\"\r\n                                rules={[{ required: true, message: 'Please enter the phone number!' },{len:10,message:\"Enter a valid phone number!\"}]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"Phone Number\" style={{width:'100%'}}/>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"User type\" \r\n                                name=\"userType\"\r\n                                rules={[{ required: true, message: `Please select one option!` }]}\r\n                            >\r\n                                <Select\r\n                                    onChange={setUserType}\r\n                                    placeholder=\"Select a user type\"\r\n                                >\r\n                                    <Select.Option value=\"admin\">Admin</Select.Option>\r\n                                    <Select.Option value=\"seller\">Seller</Select.Option>\r\n                                    <Select.Option value=\"customer\">Customer</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} align=\"bottom\">\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Password\" \r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: 'Please enter the password!' },{min:6,message:\"Password must be atleast 6 character long!\"}]}\r\n                            >\r\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Confirm Password\" \r\n                                name=\"ConfirmPassword\"\r\n                                dependencies={['password']}\r\n                                rules={[\r\n                                    { required: true, message: 'Please enter the password again!' },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(rule, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n                                            return Promise.reject('The two passwords that you entered do not match!');\r\n                                        },\r\n                                    })\r\n                                ]}\r\n                            >\r\n                                <Input.Password type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        userType===\"seller\"?\r\n                            <Row justify=\"center\" gutter={16}>\r\n                                <Col span={24}>\r\n                                    <Form.Item \r\n                                        label=\"Delivery Pin Codes\" \r\n                                        name=\"deliverTo\"\r\n                                    >\r\n                                        <Select mode=\"tags\" style={{ width: '100%', minHeight:'50px' }} tokenSeparators={[',']}>\r\n\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            null\r\n                    }\r\n                    \r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    Create\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(UserCreate);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    UnorderedListOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nconst { Option } = Select;\r\n\r\nfunction CategoryCreate(props) {\r\n    const [form] = Form.useForm(); \r\n    \r\n    const onFinish = (data)=>{\r\n        console.log(data);\r\n        let { name } =data;\r\n        props.loading(true);\r\n        http.post(apis.CATEGORY_CREATE,{name}).then(result=>{\r\n            console.log(result.data);\r\n            if(result.data.status){\r\n                message.info(\"Category created sucessfully\");\r\n                form.resetFields();\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{    \r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"category-create-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Create Category\"\r\n                subTitle=\"Add new Category\"\r\n                extra={[<Link to=\"/admin/dashboard/category/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Categories</Button></Link>]}                \r\n            />\r\n            <div className=\"category-create-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Category Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the category name!` }]}\r\n                            >\r\n                                <Input placeholder=\"Category Name\"  />\r\n                            </Form.Item>                          \r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    Create\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(CategoryCreate);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag} from \"antd\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title : 'Category Created',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport column from \"./categoryColumn\";\r\n\r\nfunction CategoryList(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [categoryData,setCategoryData] = useState([]);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [pageSize,setPageSize] = useState(2);\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n    const fetchCategoryData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setCategoryData(result.data.data);\r\n                setTotalData(result.data.total)\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchCategoryData();\r\n    },[currentPage])\r\n\r\n    return (\r\n        <div className=\"category-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Categories\"\r\n                subTitle=\"List all Categories\"\r\n                extra={[<Link to=\"/admin/dashboard/category/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Category</Button></Link>]}                \r\n            />\r\n            <div className=\"category-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1000 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={categoryData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(CategoryList);","import React from \"react\";\r\nimport 'draft-js/dist/Draft.css'; \r\nimport \"./TextEditor.css\";\r\nimport {Editor, EditorState, RichUtils, getDefaultKeyBinding} from 'draft-js';\r\n\r\nclass RichEditorExample extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.onChange = (editorState) => this.props.onChange(editorState);\r\n\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(\r\n                e,\r\n                this.props.editorState,\r\n                4, /* maxDepth */\r\n            );\r\n            if (newEditorState !== this.props.editorState) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(\r\n            RichUtils.toggleBlockType(\r\n            this.props.editorState,\r\n            blockType\r\n            )\r\n        );\r\n    }\r\n\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n                this.props.editorState,\r\n                inlineStyle\r\n            )\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {editorState} = this.props;\r\n\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = 'RichEditor-editor';\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n            className += ' RichEditor-hidePlaceholder';\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"RichEditor-root\">\r\n                <BlockStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleBlockType}\r\n                />\r\n                <InlineStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleInlineStyle}\r\n                />\r\n                <div className={className} onClick={this.focus}>\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={styleMap}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Product Description\"\r\n                        ref=\"editor\"\r\n                        spellCheck={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case 'blockquote': return 'RichEditor-blockquote';\r\n        default: return null;\r\n    }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let className = 'RichEditor-styleButton';\r\n        if (this.props.active) {\r\n            className += ' RichEditor-activeButton';\r\n        }\r\n\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n            {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n    {label: 'H1', style: 'header-one'},\r\n    {label: 'H2', style: 'header-two'},\r\n    {label: 'H3', style: 'header-three'},\r\n    {label: 'H4', style: 'header-four'},\r\n    {label: 'H5', style: 'header-five'},\r\n    {label: 'H6', style: 'header-six'},\r\n    {label: 'Blockquote', style: 'blockquote'},\r\n    {label: 'UL', style: 'unordered-list-item'},\r\n    {label: 'OL', style: 'ordered-list-item'},\r\n    {label: 'Code Block', style: 'code-block'},\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n    const {editorState} = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n    .getCurrentContent()\r\n    .getBlockForKey(selection.getStartKey())\r\n    .getType();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n    {label: 'Bold', style: 'BOLD'},\r\n    {label: 'Italic', style: 'ITALIC'},\r\n    {label: 'Underline', style: 'UNDERLINE'},\r\n    {label: 'Monospace', style: 'CODE'},\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default RichEditorExample;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    MinusCircleOutlined,\r\n    PlusOutlined,\r\n    UnorderedListOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport RichRextEditor from \"../../services/TextEditor\";\r\nimport {EditorState,convertToRaw,ContentState} from 'draft-js';\r\nimport \"./Product.less\";\r\nconst { Option } = Select;\r\nconst propertyKey = [\"KG\",\"GRAM\",\"Pack\",\"Piece\",\"LTR\",\"ML\"]\r\n\r\nfunction ProductCreate(props) {\r\n    const [form] = Form.useForm(); \r\n    const [images,setImages] = useState([{link:null,loading:false,hasremove:false}]);\r\n    const [properties,setProperties] = useState([])\r\n    const [allCategories,setAllCategories] = useState([]);\r\n    const [productDescription, setProductDescription] = useState(() => EditorState.createEmpty())\r\n\r\n    const fetchAllCategory = ()=>{\r\n        props.loading(true);\r\n        let body = {\r\n            pageNumber : 1,\r\n            pageSize : 1000\r\n        }\r\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setAllCategories(result.data.data);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    const beforeUploadFunction = (file,index)=>{\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            let img1 = [...images];\r\n            img1[index][\"loading\"]=true;\r\n            setImages(img1);\r\n            const formData = new FormData();\r\n            formData.append('image',file);\r\n            http.post(apis.UPLOAD_PRODUCT_IMAGE,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    let img2 = [...images];\r\n                    img2[index][\"link\"]=result.data.file;\r\n                    setImages(img2);\r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                let img3 = [...images];\r\n                img3[index][\"loading\"]=false;\r\n                setImages(img3);\r\n            })\r\n            \r\n        })\r\n        return false;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchAllCategory();\r\n    },[])\r\n\r\n    const onFinish = (data)=>{\r\n        let accepted=true;\r\n        properties.forEach((ele,i)=>{\r\n            if(ele && ele.type && ele.value){\r\n                \r\n            }\r\n            else{\r\n                accepted = false;\r\n            }\r\n        })\r\n        if(isAllImagePresent()){\r\n            if(accepted){\r\n                let raw = convertToRaw(productDescription.getCurrentContent());\r\n                const {name,category,regularPrice,salePrice,productVideo} = data;\r\n                let body = {\r\n                    name,\r\n                    category,\r\n                    regularPrice,\r\n                    salePrice,\r\n                    images : images.map(ele=>ele.link),\r\n                    description : JSON.stringify(raw),\r\n                    properties,\r\n                    productVideo\r\n                }\r\n                console.log(body);\r\n                props.loading(true);\r\n                http.post(apis.CREATE_PRODUCT,body).then((result)=>{\r\n                    if(result.data.status){\r\n                        message.success(result.data.message);\r\n                        form.resetFields();\r\n                        setImages([{link:null,loading:false,hasremove:false}]);\r\n                        const editorState = EditorState.push(productDescription, ContentState.createFromText(''));\r\n                        setProductDescription(editorState);\r\n                    }\r\n                    else{\r\n                        message.error(result.data.message)\r\n                    }\r\n                }).catch((err)=>{\r\n                    console.log(err);\r\n                    Errorhandler(err,props.logout);\r\n                }).finally(()=>{\r\n                    props.loading(false);\r\n                })\r\n            }\r\n            else{\r\n                message.error('Please clear the unwanted properties')   \r\n            }\r\n            \r\n        }\r\n        else{\r\n            message.error('Please upload all images or remove them')   \r\n        }\r\n    }\r\n\r\n\r\n    const addImage = ()=>{\r\n        let img = [...images];\r\n        let l = img.length;\r\n        if(img[l-1].link){\r\n            img.push({link:null,loading:false,hasremove:true});\r\n            let newImg = img.map(ele=>{\r\n                return {\r\n                    ...ele,\r\n                    hasremove : true\r\n                }\r\n            })\r\n            setImages(newImg);        \r\n        }\r\n        \r\n    }\r\n\r\n    const removeImage = (ind)=>{\r\n        let img = [...images];\r\n        let l = img.length;\r\n        if(l>1){\r\n            img.splice(ind, 1);\r\n        }\r\n        if(l==2){\r\n            img[0][\"hasremove\"]=false;\r\n        }\r\n        setImages(img);\r\n    }\r\n\r\n    const isAllImagePresent = ()=>{\r\n        var flag = true;\r\n        images.forEach(ele=>{\r\n            if(!ele.link){\r\n                flag = false;\r\n            }\r\n        })\r\n        return flag\r\n    }\r\n\r\n\r\n    const addProperty = ()=>{\r\n        let p = [...properties]\r\n        p.push({type:\"\",value:\"\"})\r\n        setProperties(p)\r\n    }\r\n\r\n\r\n    const setPropertyType = (index,value)=>{\r\n        let p = [...properties]\r\n        p[index].type=value;\r\n        setProperties(p)\r\n    }\r\n    const changePropertyValue = (index,value)=>{\r\n        let p = [...properties]\r\n        p[index].value=value;\r\n        setProperties(p)\r\n    }\r\n\r\n    const removeProperty = (index)=>{\r\n        let p = [...properties]\r\n        p.splice(index, 1);\r\n        setProperties(p)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"product-create-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Create Product\"\r\n                subTitle=\"Add new Product\"\r\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Products</Button></Link>]}                \r\n            />\r\n            <div className=\"product-create-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form product-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Product Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the product name` }]}\r\n                            >\r\n                                <Input placeholder=\"Product Name\"  />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Categories\"\r\n                                name=\"category\"\r\n\r\n                                rules={[{ required: true, message: `Please select the categories` }]}\r\n                            >\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Select one or more category\"\r\n                                    mode=\"multiple\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        allCategories.map((ele,i)=>(\r\n                                            <Select.Option key={i} value={ele._id}>{ele.name}</Select.Option>\r\n                                        ))\r\n                                    }\r\n                                    \r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} style={{marginBottom:'40px'}}>\r\n                        <Col span=\"24\">\r\n                            <RichRextEditor editorState={productDescription} onChange={setProductDescription} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} style={{marginBottom:'20px'}}>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Regular Price (in rupees)\" \r\n                                name=\"regularPrice\"\r\n                                rules={[{ required: true, message: `Please enter the regular Price` }]}\r\n                            >\r\n                                <Input placeholder=\"Regular Price\" type=\"number\"  />\r\n                            </Form.Item> \r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Sale Price (in rupees)\" \r\n                                name=\"salePrice\"\r\n                            >\r\n                                <Input placeholder=\"Sale Price\" type=\"number\"  />\r\n                            </Form.Item> \r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Product Video( video Id only)\" \r\n                                name=\"productVideo\"\r\n                            >\r\n                                <Input placeholder=\"Product video( video Id only)\"  />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                    </Row>\r\n                    <p style={{marginBottom:'10px'}}>Product Properties</p>\r\n                    \r\n                        {properties.map((ele,i)=>(\r\n                            <Row gutter={16} key={i} style={{marginBottom:'5px'}}>\r\n                                <Col span=\"8\" >\r\n                                    <Select\r\n                                        showSearch\r\n                                        placeholder=\"Select a property\"\r\n                                        style={{width:\"100%\"}}\r\n                                        value={ele.type}\r\n                                        filterOption={(input, option) =>\r\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                        onChange={(val)=>setPropertyType(i,val)}\r\n                                    >\r\n                                        <Select.Option key={11111} value={\"\"}>please select a key</Select.Option>\r\n                                        {\r\n                                            \r\n                                            propertyKey.map((eleee,ii)=>(\r\n                                                <Select.Option key={ii} value={eleee}>{eleee}</Select.Option>\r\n                                            ))\r\n                                        }\r\n                                        \r\n                                    </Select>\r\n                                </Col>\r\n                                <Col span=\"8\" >\r\n                                    <Input type=\"text\" onChange={(val)=>changePropertyValue(i,val.target.value)} placeholder=\"please enter the value\" value={ele.value} />\r\n                                </Col>\r\n                                <Col span=\"8\" >\r\n                                    <Button onClick={()=>removeProperty(i)}>\r\n                                        remove\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        ))}\r\n                    \r\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\r\n                        <Col>\r\n                            <Button type=\"default\" onClick={addProperty}>Add Propert</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <p style={{marginBottom:'10px'}}>Product Images</p>\r\n\r\n                    <Row gutter={16}>\r\n                        {images.map((ele,i)=>(\r\n                            <Col span=\"8\" key={i}>\r\n                                <ImgCrop \r\n                                    grid={true} \r\n                                    shape=\"rect\"\r\n                                    aspect={0.75}\r\n                                >\r\n                                    <Upload\r\n                                        name={`image${i}`}\r\n                                        listType=\"picture-card\"\r\n                                        className=\"image-uploader\"\r\n                                        showUploadList={false}\r\n                                        beforeUpload={(fl)=>beforeUploadFunction(fl,i)}\r\n\r\n                                    >\r\n                                        {\r\n                                            ele.link?<img src={`${apis.BASE_SERVER_URL}${ele.link}`} className=\"uploaded-image\"/>\r\n                                            :\r\n                                            <div>\r\n                                                {ele.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                                <div className=\"ant-upload-text\">Upload</div>\r\n                                            </div>\r\n                                        }\r\n                                    </Upload>\r\n                                </ImgCrop>\r\n                                {ele.hasremove?<Button type=\"default\" onClick={()=>removeImage(i)}>Remove Image</Button>:null}\r\n                            </Col>\r\n                        ))}\r\n                        \r\n                    </Row>\r\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\r\n                        <Col>\r\n                            <Button type=\"default\" onClick={addImage}>Add Image</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    Create\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductCreate);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    MinusCircleOutlined,\r\n    PlusOutlined,\r\n    UnorderedListOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport RichRextEditor from \"../../services/TextEditor\";\r\nimport {EditorState,convertToRaw,ContentState,convertFromRaw} from 'draft-js';\r\nimport \"./Product.less\";\r\nconst { Option } = Select;\r\nconst propertyKey = [\"KG\",\"GRAM\",\"Pack\",\"Piece\",\"LTR\",\"ML\"]\r\n\r\nfunction ProductEdit(props) {\r\n    const {id} = useParams();\r\n    const [form] = Form.useForm(); \r\n    const [images,setImages] = useState([{link:null,loading:false,hasremove:false}]);\r\n    const [properties,setProperties] = useState([])\r\n    const [allCategories,setAllCategories] = useState([]);\r\n    const [productDescription, setProductDescription] = useState(() => EditorState.createEmpty())\r\n\r\n    const fetchAllCategory = ()=>{\r\n        props.loading(true);\r\n        let body = {\r\n            pageNumber : 1,\r\n            pageSize : 1000\r\n        }\r\n        http.post(apis.LIST_CATEGORY,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setAllCategories(result.data.data);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    const fetchProductDetails = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.PRODUCT_DETAILS_FOR_ADMIN}/${id}`).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                console.log(result.data.data)\r\n                form.setFieldsValue({\r\n                    name : result.data.data.name,\r\n                    category : result.data.data.category.map(e=>e._id),\r\n                    regularPrice:result.data.data.regularPrice,\r\n                    salePrice:result.data.data.salePrice,\r\n                    productVideo:result.data.data.productVideo\r\n                })\r\n                let imgs = result.data.data.images.map((img,c)=>{\r\n                    let d = {\r\n                        link:img,loading:false,hasremove:false\r\n                    }\r\n                    if(c!=0){\r\n                        d[\"hasremove\"]=true\r\n                    }\r\n                    return d\r\n                })\r\n                setImages(imgs)\r\n                setProperties(result.data.data.properties)\r\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                setProductDescription(editorState)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    const beforeUploadFunction = (file,index)=>{\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            let img1 = [...images];\r\n            img1[index][\"loading\"]=true;\r\n            setImages(img1);\r\n            const formData = new FormData();\r\n            formData.append('image',file);\r\n            http.post(apis.UPLOAD_PRODUCT_IMAGE,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    let img2 = [...images];\r\n                    img2[index][\"link\"]=result.data.file;\r\n                    setImages(img2);\r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                let img3 = [...images];\r\n                img3[index][\"loading\"]=false;\r\n                setImages(img3);\r\n            })\r\n            \r\n        })\r\n        return false;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchAllCategory();\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(allCategories.length>0){\r\n            fetchProductDetails()\r\n        }\r\n    },[allCategories])\r\n\r\n    const onFinish = (data)=>{\r\n        let accepted=true;\r\n        properties.forEach((ele,i)=>{\r\n            if(ele && ele.type && ele.value){\r\n                \r\n            }\r\n            else{\r\n                accepted = false;\r\n            }\r\n        })\r\n        if(isAllImagePresent()){\r\n            if(accepted){\r\n                let raw = convertToRaw(productDescription.getCurrentContent());\r\n                const {name,category,regularPrice,salePrice,productVideo} = data;\r\n                let body = {\r\n                    name,\r\n                    category,\r\n                    regularPrice,\r\n                    salePrice,\r\n                    images : images.map(ele=>ele.link),\r\n                    description : JSON.stringify(raw),\r\n                    properties,\r\n                    productVideo\r\n                }\r\n                console.log(body);\r\n                props.loading(true);\r\n                http.post(`${apis.EDIT_PRODUCT}/${id}`,body).then((result)=>{\r\n                    if(result.data.status){\r\n                        message.success(result.data.message);\r\n                    }\r\n                    else{\r\n                        message.error(result.data.message)\r\n                    }\r\n                }).catch((err)=>{\r\n                    console.log(err);\r\n                    Errorhandler(err,props.logout);\r\n                }).finally(()=>{\r\n                    props.loading(false);\r\n                })\r\n            }\r\n            else{\r\n                message.error('Please clear the unwanted properties')   \r\n            }\r\n            \r\n        }\r\n        else{\r\n            message.error('Please upload all images or remove them')   \r\n        }\r\n    }\r\n\r\n\r\n    const addImage = ()=>{\r\n        let img = [...images];\r\n        let l = img.length;\r\n        if(img[l-1].link){\r\n            img.push({link:null,loading:false,hasremove:true});\r\n            let newImg = img.map(ele=>{\r\n                return {\r\n                    ...ele,\r\n                    hasremove : true\r\n                }\r\n            })\r\n            setImages(newImg);        \r\n        }\r\n        \r\n    }\r\n\r\n    const removeImage = (ind)=>{\r\n        let img = [...images];\r\n        let l = img.length;\r\n        if(l>1){\r\n            img.splice(ind, 1);\r\n        }\r\n        if(l==2){\r\n            img[0][\"hasremove\"]=false;\r\n        }\r\n        setImages(img);\r\n    }\r\n\r\n    const isAllImagePresent = ()=>{\r\n        var flag = true;\r\n        images.forEach(ele=>{\r\n            if(!ele.link){\r\n                flag = false;\r\n            }\r\n        })\r\n        return flag\r\n    }\r\n\r\n\r\n    const addProperty = ()=>{\r\n        let p = [...properties]\r\n        p.push({type:\"\",value:\"\"})\r\n        setProperties(p)\r\n    }\r\n\r\n\r\n    const setPropertyType = (index,value)=>{\r\n        let p = [...properties]\r\n        p[index].type=value;\r\n        setProperties(p)\r\n    }\r\n    const changePropertyValue = (index,value)=>{\r\n        let p = [...properties]\r\n        p[index].value=value;\r\n        setProperties(p)\r\n    }\r\n\r\n    const removeProperty = (index)=>{\r\n        let p = [...properties]\r\n        p.splice(index, 1);\r\n        setProperties(p)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"product-create-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Edit Product\"\r\n                subTitle=\"Update Product\"\r\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>List Products</Button></Link>]}                \r\n            />\r\n            <div className=\"product-create-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form product-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Product Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the product name` }]}\r\n                            >\r\n                                <Input placeholder=\"Product Name\"  />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Categories\"\r\n                                name=\"category\"\r\n\r\n                                rules={[{ required: true, message: `Please select the categories` }]}\r\n                            >\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Select one or more category\"\r\n                                    mode=\"multiple\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        allCategories.map((ele,i)=>(\r\n                                            <Select.Option key={i} value={ele._id}>{ele.name}</Select.Option>\r\n                                        ))\r\n                                    }\r\n                                    \r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} style={{marginBottom:'40px'}}>\r\n                        <Col span=\"24\">\r\n                            <RichRextEditor editorState={productDescription} onChange={setProductDescription} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16} style={{marginBottom:'20px'}}>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Regular Price (in rupees)\" \r\n                                name=\"regularPrice\"\r\n                                rules={[{ required: true, message: `Please enter the regular Price` }]}\r\n                            >\r\n                                <Input placeholder=\"Regular Price\" type=\"number\"  />\r\n                            </Form.Item> \r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Sale Price (in rupees)\" \r\n                                name=\"salePrice\"\r\n                            >\r\n                                <Input placeholder=\"Sale Price\" type=\"number\"  />\r\n                            </Form.Item> \r\n                        </Col>\r\n                        <Col span=\"8\">\r\n                            <Form.Item \r\n                                label=\"Product Video( video Id only)\" \r\n                                name=\"productVideo\"\r\n                            >\r\n                                <Input placeholder=\"Product video( video Id only)\"  />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                    </Row>\r\n                    <p style={{marginBottom:'10px'}}>Product Properties</p>\r\n                    \r\n                        {properties.map((ele,i)=>(\r\n                            <Row gutter={16} key={i} style={{marginBottom:'5px'}}>\r\n                                <Col span=\"8\" >\r\n                                    <Select\r\n                                        showSearch\r\n                                        placeholder=\"Select a property\"\r\n                                        style={{width:\"100%\"}}\r\n                                        value={ele.type}\r\n                                        filterOption={(input, option) =>\r\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                        onChange={(val)=>setPropertyType(i,val)}\r\n                                    >\r\n                                        <Select.Option key={11111} value={\"\"}>please select a key</Select.Option>\r\n                                        {\r\n                                            \r\n                                            propertyKey.map((eleee,ii)=>(\r\n                                                <Select.Option key={ii} value={eleee}>{eleee}</Select.Option>\r\n                                            ))\r\n                                        }\r\n                                        \r\n                                    </Select>\r\n                                </Col>\r\n                                <Col span=\"8\" >\r\n                                    <Input type=\"text\" onChange={(val)=>changePropertyValue(i,val.target.value)} placeholder=\"please enter the value\" value={ele.value} />\r\n                                </Col>\r\n                                <Col span=\"8\" >\r\n                                    <Button onClick={()=>removeProperty(i)}>\r\n                                        remove\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        ))}\r\n                    \r\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\r\n                        <Col>\r\n                            <Button type=\"default\" onClick={addProperty}>Add Propert</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <p style={{marginBottom:'10px'}}>Product Images</p>\r\n\r\n                    <Row gutter={16}>\r\n                        {images.map((ele,i)=>(\r\n                            <Col span=\"8\" key={i}>\r\n                                <ImgCrop \r\n                                    grid={true} \r\n                                    shape=\"rect\"\r\n                                    aspect={0.75}\r\n                                >\r\n                                    <Upload\r\n                                        name={`image${i}`}\r\n                                        listType=\"picture-card\"\r\n                                        className=\"image-uploader\"\r\n                                        showUploadList={false}\r\n                                        beforeUpload={(fl)=>beforeUploadFunction(fl,i)}\r\n\r\n                                    >\r\n                                        {\r\n                                            ele.link?<img src={`${apis.BASE_SERVER_URL}${ele.link}`} className=\"uploaded-image\"/>\r\n                                            :\r\n                                            <div>\r\n                                                {ele.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                                <div className=\"ant-upload-text\">Upload</div>\r\n                                            </div>\r\n                                        }\r\n                                    </Upload>\r\n                                </ImgCrop>\r\n                                {ele.hasremove?<Button type=\"default\" onClick={()=>removeImage(i)}>Remove Image</Button>:null}\r\n                            </Col>\r\n                        ))}\r\n                        \r\n                    </Row>\r\n                    <Row gutter={16} justify=\"end\" style={{marginBottom:'30px'}}>\r\n                        <Col>\r\n                            <Button type=\"default\" onClick={addImage}>Add Image</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    UPDATE\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductEdit);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title:'Image',\r\n        dataIndex:'images',\r\n        key:'images',\r\n        render : (img)=>{\r\n            if(img && Array.isArray(img) && img.length>0){\r\n                return(\r\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\r\n                )\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        }\r\n    },\r\n    {\r\n        title:'Categories',\r\n        dataIndex:'category',\r\n        key:'category',\r\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\r\n    },\r\n    {\r\n        title:'Regular Price',\r\n        dataIndex:'regularPrice',\r\n        key:'regularPrice'\r\n    },\r\n    {\r\n        title:'Sale Price',\r\n        dataIndex:'salePrice',\r\n        key:'salePrice'\r\n    },\r\n    {\r\n        title : 'Created On',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : \"Operations\",\r\n        render : (data)=>(\r\n            <>\r\n                <Link to={`/admin/dashboard/product/details/${data._id}`}>\r\n                    <Button type=\"default\">Details</Button>            \r\n                </Link>\r\n                <Link to={`/admin/dashboard/product/edit/${data._id}`}>\r\n                    <Button type=\"default\">Edit</Button>            \r\n                </Link>\r\n            </>\r\n            \r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport column from \"./productcolumnAdmin\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ProductListAdmin(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [productData,setProductData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(5);\r\n\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n    const fetchProductData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.LIST_PRODUCTS_FOR_ADMIN,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductData(result.data.data);\r\n                setTotalData(result.data.total);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductData();\r\n    },[currentPage])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"product-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Products\"\r\n                subTitle=\"List all products\"\r\n                extra={[<Link to=\"/admin/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \r\n            />\r\n            <div className=\"product-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1200 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={productData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductListAdmin);","import React from 'react';\r\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport apis from \"../../services/apis\";\r\nimport moment from \"moment\";\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default function ProductDetailsCommon(props) {\r\n    return (\r\n        <Row gutter={16}>\r\n            <Col span=\"8\">\r\n                <Carousel autoplay>\r\n                    {props.productDetails && props.productDetails.images.map((ele,i)=>(\r\n                        <img src={`${apis.BASE_SERVER_URL}${ele}`} key={i} className=\"product-image\" />\r\n                    ))}\r\n                    \r\n                </Carousel>\r\n            </Col>\r\n            <Col span=\"16\">\r\n                <div className=\"product-detains-inner\">\r\n                    <Row justify=\"space-between\">\r\n                        <Col>\r\n                            <Title level={2}>{props.productDetails && props.productDetails.name}</Title>\r\n                            {props.productDetails && <p className=\"regularPrice\">Regular Price : {props.productDetails.regularPrice}</p>}\r\n                            {props.productDetails && props.productDetails.salePrice && <p className=\"salePrice\">Sale Price : {props.productDetails.salePrice}</p>}\r\n                            {props.productDetails && props.productDetails.properties && props.productDetails.properties.map((ele,i)=>(\r\n                                <p className=\"properties-single\" key={i}>{ele.type} : {ele.value} </p>\r\n                            ))}\r\n                        </Col>\r\n                        <Col>\r\n                            <Title level={4}>{props.productDetails && moment(props.productDetails.createdAt).format(\"DD-MM-YYYY\")}</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    {props.productDetails && props.productDetails.category.map((ele,i)=>(<Tag key={i} color={\"magenta\"}>{ele.name}</Tag>))}\r\n                    <div style={{marginBottom:'30px'}} />\r\n                    <Editor editorState={props.productDescription} readOnly={true} />\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        key: 'email'\r\n    },\r\n    {\r\n        title: 'Phone Number',\r\n        dataIndex: 'phoneNumber',\r\n        key: 'phoneNumber'\r\n    },\r\n    {\r\n        title: 'Stock',\r\n        dataIndex: 'stock',\r\n        key: 'stock'\r\n    },\r\n    {\r\n        title : 'Pin Codes',\r\n        dataIndex : 'deliverTo',\r\n        key:'deliverTo',\r\n        render : (data)=>{\r\n            let arr=data.map((ele,i)=>\r\n                <Tag key={i}>\r\n                    {ele}\r\n                </Tag>\r\n            )\r\n            return arr\r\n        }\r\n    },\r\n    \r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { Table,Pagination,Row,Col,Typography,message } from 'antd';\r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport column from \"./stockColumnAdmin\";\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default function ProductStockAdmin(props) {\r\n    const [productStock,setProductStock] = useState([]);\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(10);\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProducStock();\r\n    },[currentPage])\r\n\r\n\r\n\r\n    const fetchProducStock = ()=>{  \r\n        setIstableLoading(true);\r\n        let body = {\r\n            productId:props._id,\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(`${apis.STOCK_LIST_FOR_ADMIN}`,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setTotalData(result.data.total);\r\n                let stock = result.data.data.map(ele=>{\r\n                    return{\r\n                        ...ele,\r\n                        ...ele.seller,\r\n                        seller:null\r\n                    }\r\n                })\r\n                console.log(stock)\r\n                setProductStock(stock)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false);\r\n        })\r\n    }\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table \r\n                scroll={{ x: 1000 }} \r\n                bordered={true} \r\n                pagination={false} \r\n                loading={isTableLoading} \r\n                dataSource={productStock} \r\n                columns={column} \r\n                rowKey=\"_id\"\r\n                footer={() =>(\r\n                    <Row gutter={16} justify=\"end\">\r\n                        <Col>\r\n                            <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\r\nimport ProductStockAdmin from \"./ProductStockAdmin\"\r\nconst { Title } = Typography;\r\n\r\nfunction ProductDetailsAdmin(props) {\r\n    const {id} = useParams();\r\n    const [productDetails,setProductDetails] = useState();\r\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\r\n\r\n\r\n    const fetchProductDetails = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.PRODUCT_DETAILS_FOR_ADMIN}/${id}`).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductDetails(result.data.data);\r\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                setProductDescription(editorState)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductDetails();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"product-details-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Product Details\"\r\n                subTitle={productDetails?productDetails.name:\"\"}\r\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \r\n            />\r\n            <div className=\"product-details-inner padding-after-page-header\" >\r\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\r\n            </div>\r\n            <div className=\"product-stok-table-wrapper\">\r\n                <h2>Seller Stock</h2>\r\n                <ProductStockAdmin _id={id}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductDetailsAdmin);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport { Link,useParams } from \"react-router-dom\";\r\nimport {\r\n    LoadingOutlined,\r\n    PlusCircleOutlined,\r\n    UnorderedListOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./MyProfile.less\";\r\nconst { Option } = Select;\r\n\r\nfunction MyProfile(props) {\r\n    const {id} = useParams();\r\n    const [form] = Form.useForm(); \r\n    const [avatar,setAvatar] = useState();\r\n    const [isAvatarUploading,setIsAvatarUploading] = useState(false);\r\n    const [userType,setUserType] = useState();\r\n    const [profile,setProfile] = useState()\r\n\r\n    useEffect(()=>{\r\n        fetchProfileData()\r\n    },[])\r\n\r\n    const fetchProfileData = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.GET_PROFILE_DETAILS}?_id=${id}`).then((result)=>{\r\n            console.log(result.data);\r\n            if(result.data.status){\r\n                let user = result.data.data;\r\n                setAvatar(user.avatar);\r\n                form.setFieldsValue({ \r\n                    name:user.name,\r\n                    email:user.email,\r\n                    phoneNumber:user.phoneNumber   \r\n                });\r\n                setProfile(user)\r\n                if(user.userType==='seller'){\r\n                    form.setFieldsValue({ \r\n                        deliverTo:user.deliverTo  \r\n                    });\r\n                }\r\n                setUserType(user.userType);\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            message.error(\"server errror\")\r\n        }).finally(()=>{    \r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    const onFinish = (data)=>{\r\n        //console.log(avatar,data,apis.USER_CREATE);\r\n        const {email,name,phoneNumber,deliverTo} = data;\r\n        props.loading(true);\r\n        http.post(apis.UPDATE_PROFILE_DETAILS,{\r\n            _id:profile._id,\r\n            email,\r\n            name,\r\n            phoneNumber,\r\n            avatar,\r\n            deliverTo\r\n        }).then(result=>{\r\n            console.log(result.data);\r\n            if(result.data.status){\r\n                message.info(\"User updated sucessfully\");\r\n                fetchProfileData();\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{    \r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n    const beforeUploadFunction = (file)=>{\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            setIsAvatarUploading(true);\r\n            const formData = new FormData();\r\n            formData.append('avatar',file);\r\n            http.post(apis.UPLOAD_USER_AVATAR,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    setAvatar(result.data.file);\r\n                    \r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                setIsAvatarUploading(false);\r\n            })\r\n            \r\n        })\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"my-profile-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"PROFILE\"\r\n                subTitle=\"Edit profile\"\r\n                extra={[]}                \r\n            />\r\n            <div className=\"my-profile-from padding-after-page-header\" >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError={true}\r\n                    className=\"basic-form\"\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Name\" \r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: `Please enter the user's name!` }]}\r\n                            >\r\n                                <Input placeholder=\"Name\"  />\r\n                            </Form.Item>  \r\n                            <Form.Item \r\n                                label=\"Email Id\" \r\n                                name=\"email\"\r\n                                rules={[{ required: true, message: 'Please enter the email id!' },{type:'email',message:\"Enter a valid email id\"}]}\r\n                            >\r\n                                <Input placeholder=\"Email Id\" />\r\n                            </Form.Item>                         \r\n                        </Col>\r\n                        <Col span=\"12\">\r\n                            <ImgCrop grid={true} shape=\"round\">\r\n                                <Upload\r\n                                    name=\"avatar\"\r\n                                    listType=\"picture-card\"\r\n                                    className=\"avatar-uploader\"\r\n                                    showUploadList={false}\r\n                                    beforeUpload={beforeUploadFunction}\r\n\r\n                                >\r\n                                    {\r\n                                        avatar?<img src={`${apis.BASE_SERVER_URL}${avatar}`} className=\"uploaded-avatar\"/>\r\n                                        :\r\n                                        <div>\r\n                                            {isAvatarUploading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                                            <div className=\"ant-upload-text\">Upload</div>\r\n                                        </div>\r\n                                    }\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span=\"12\">\r\n                            <Form.Item \r\n                                label=\"Phone Number\" \r\n                                name=\"phoneNumber\"\r\n                                rules={[{ required: true, message: 'Please enter the phone number!' },{len:10,message:\"Enter a valid phone number!\"}]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"Phone Number\" style={{width:'100%'}}/>\r\n                            </Form.Item>\r\n                        </Col>                        \r\n                    </Row>\r\n                    {\r\n                        userType===\"seller\"?\r\n                            <Row justify=\"center\" gutter={16}>\r\n                                <Col span={24}>\r\n                                    <Form.Item \r\n                                        label=\"Delivery Pin Codes\" \r\n                                        name=\"deliverTo\"\r\n                                    >\r\n                                        <Select mode=\"tags\" style={{ width: '100%', minHeight:'50px' }} tokenSeparators={[',']}>\r\n\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            null\r\n                    }\r\n                    \r\n                    <Row justify=\"end\" gutter={16}>\r\n                        <Col>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    UPDATE\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(MyProfile);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title:'Image',\r\n        dataIndex:'images',\r\n        key:'images',\r\n        render : (img)=>{\r\n            if(img && Array.isArray(img) && img.length>0){\r\n                return(\r\n                    <img className=\"product-img\" src={`${apis.BASE_SERVER_URL}${img[0]}`} />\r\n                )\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        }\r\n    },\r\n    {\r\n        title:'Categories',\r\n        dataIndex:'category',\r\n        key:'category',\r\n        render : (category)=>category.map((ele,i)=><Tag key={i} color={\"cyan\"}>{ele.name}</Tag>)\r\n    },\r\n    {\r\n        title:'Stock',\r\n        dataIndex:'stock',\r\n        key:'stock'\r\n    },\r\n    {\r\n        title:'Regular Price',\r\n        dataIndex:'regularPrice',\r\n        key:'regularPrice'\r\n    },\r\n    {\r\n        title:'Sale Price',\r\n        dataIndex:'salePrice',\r\n        key:'salePrice'\r\n    },\r\n    {\r\n        title : 'Stock Updated',\r\n        dataIndex : 'stockUpdated',\r\n        key:'stockUpdated',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : \"Operations\",\r\n        render : (data)=>(\r\n            <Link to={`/admin/dashboard/product/details/${data.productId}`}>\r\n                <Button type=\"default\">Details</Button>            \r\n            </Link>\r\n        )\r\n    }\r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport column from \"./productcolumnSeller\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ProductListSeller(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [productData,setProductData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(5);\r\n\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n    const fetchProductData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.LIST_PRODUCT_FOR_SELLER,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductData(result.data.data);\r\n                setTotalData(result.data.total);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductData();\r\n    },[currentPage])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"product-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Products\"\r\n                subTitle=\"List all products\"\r\n                extra={[<Link to=\"/admin/dashboard/product/create\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<PlusCircleOutlined />}>Create Product</Button></Link>]}                \r\n            />\r\n            <div className=\"product-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1200 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={productData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductListSeller);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Card,message,Row,Col,Button, Form,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\n\r\nfunction UpdateProductStock(props) {\r\n    const [form] = Form.useForm(); \r\n    const [isDisabled,setIsDisabled] = useState(true)\r\n\r\n\r\n    const onFinish = (data)=>{\r\n        if(isDisabled){\r\n            setIsDisabled(false);\r\n        }\r\n        else{\r\n            let {stock} = data;\r\n            try{\r\n                let n = parseInt(stock);\r\n                if(n>=0){\r\n                    props.loading(true);\r\n                    http.post(apis.UPDATE_PRODUCT_STOCK_SELLER,{\r\n                        id : props.productDetails._id,\r\n                        stock\r\n                    }).then((result)=>{\r\n                        console.log(result.data)\r\n                        if(result.data.status){\r\n                            message.success(result.data.message)\r\n                            setIsDisabled(true);\r\n                        }\r\n                        else{\r\n                            message.error(result.data.message)\r\n                        }\r\n                    }).catch((err)=>{\r\n                        console.log(err);\r\n                        Errorhandler(err,props.logout);\r\n                    }).finally(()=>{\r\n                        props.loading(false);\r\n                    })\r\n                }\r\n                else{\r\n                    message.error(\"Please enter a valid stock number\")\r\n                }\r\n            }\r\n            catch(err){\r\n                message.error(\"Please enter a valid stock number\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        form.setFieldsValue({\r\n            stock:props.productDetails?.stock\r\n        })\r\n    },[props.productDetails])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Card\r\n            title=\"Stock management\"\r\n            style={{marginTop:'50px'}}\r\n        >\r\n        \r\n            <Form\r\n                layout=\"inline\"\r\n                form={form}\r\n                onFinish={onFinish}\r\n                scrollToFirstError={true}\r\n                className=\"basic-form\"\r\n                initialValues={{\r\n                    stock:props.productDetails?.stock\r\n                }}\r\n            >\r\n                <Form.Item \r\n                    name=\"stock\"\r\n                    rules={[{ required: true, message: `Please enter the stock` }]}\r\n                >\r\n                    <Input disabled={isDisabled} placeholder=\"Stock\" type=\"number\"  />\r\n                </Form.Item> \r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">EDIT</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n        \r\n        \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(UpdateProductStock);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Carousel,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Product.less\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\nimport ProductDetailsCommon from \"./ProductDetailsCommon\";\r\nimport UpdateProductStock from \"./UpdateProductStock\";\r\nconst { Title } = Typography;\r\n\r\nfunction ProductDetailsSeller(props) {\r\n    const {id} = useParams();\r\n    const [productDetails,setProductDetails] = useState();\r\n    const [productDescription,setProductDescription] = useState(() => EditorState.createEmpty());\r\n\r\n\r\n    const fetchProductDetails = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.PRODUCT_DETAILS_FOR_SELLER}/${id}`).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setProductDetails(result.data.data);\r\n                const contentState = convertFromRaw(JSON.parse(result.data.data.description));\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                setProductDescription(editorState)\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchProductDetails();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"product-details-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Product Details\"\r\n                subTitle={productDetails?productDetails.name:\"\"}\r\n                extra={[<Link to=\"/admin/dashboard/product/list\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Product Lists</Button></Link>]}                \r\n            />\r\n            <div className=\"product-details-inner padding-after-page-header\" >\r\n                <ProductDetailsCommon productDescription={productDescription} productDetails={productDetails}/>\r\n                <UpdateProductStock productDetails={productDetails} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(ProductDetailsSeller);","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport {Tag,Button} from \"antd\";\r\nimport apis from \"../../services/apis\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Id',\r\n        dataIndex: '_id',\r\n        key: '_id'\r\n    },\r\n    {\r\n        title:\"Customer\",\r\n        dataIndex: 'user_details',\r\n        key: 'user_details',\r\n        render : (data)=>data.name\r\n    },\r\n    {\r\n        title:\"Address\",\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        render : (data)=>(\r\n            <>\r\n                <span>{data.city},</span>\r\n                <span>{data.pincode}</span>\r\n            </>\r\n        )\r\n    },\r\n    {\r\n        title: 'Placed On',\r\n        dataIndex : 'createdAt',\r\n        key:'createdAt',\r\n        render : (data)=>(\r\n            <Tag color={'geekblue'}>\r\n                {moment(data).format(\"DD-MM-YYYY hh:mm:ss\")}\r\n            </Tag>\r\n        )\r\n    },\r\n    {\r\n        title : \"Operations\",\r\n        render : (data)=>(\r\n            <Link to={`/admin/dashboard/order/details/${data._id}`}>\r\n                <Button type=\"default\">Details</Button>            \r\n            </Link>\r\n        )\r\n    }    \r\n]\r\n\r\nexport default  columns;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Button,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Order.less\";\r\nimport column from \"./OrderListColumn\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction OrderListSeller(props) {\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [orderData,setOrderData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(5);\r\n\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n    const fetchOrderData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize\r\n        }\r\n        http.post(apis.GET_ORDERS_LIST,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setOrderData(result.data.data);\r\n                setTotalData(result.data.total);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchOrderData();\r\n    },[currentPage])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"product-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Orders\"\r\n                subTitle=\"List all orders\"\r\n            />\r\n            <div className=\"product-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1200 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={orderData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(OrderListSeller);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Pagination,Row,Col,Table,Select,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Order.less\";\r\nimport column from \"./OrderListColumn\";\r\nimport {Link} from \"react-router-dom\";\r\nconst { Option } = Select;\r\n\r\nfunction OrderListAdmin(props) {\r\n    const [allSellers,setAllSellers]=useState([]);\r\n    const [selectedSeller,setSelectedSeller] = useState()\r\n    const [isTableLoading,setIstableLoading] = useState(false);\r\n    const [orderData,setOrderData] = useState([]);\r\n    const [currentPage,setCurrentpage] = useState(1);\r\n    const [totalData,setTotalData] = useState(0);\r\n    const [pageSize,setPageSize] = useState(5);\r\n\r\n\r\n    const pageChanger=(page)=>{\r\n        setCurrentpage(page);\r\n    }\r\n\r\n\r\n    const fetchUserData = ()=>{\r\n        props.loading(true)\r\n        let body = {\r\n            pageNumber : 1,\r\n            pageSize:1000000,\r\n            userType : 'seller'\r\n        }\r\n        http.post(apis.LIST_USERS,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setAllSellers(result.data.data);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false)\r\n        })\r\n    }\r\n\r\n\r\n    const fetchOrderData = ()=>{\r\n        setIstableLoading(true);\r\n        let body = {\r\n            pageNumber : currentPage,\r\n            pageSize:pageSize,\r\n            sellerId:selectedSeller\r\n        }\r\n        console.log(body)\r\n        http.post(apis.GET_ORDERS_LIST,body).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setOrderData(result.data.data);\r\n                setTotalData(result.data.total);\r\n            }\r\n            else{\r\n                message.error(result.data.message);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            setIstableLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUserData()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(selectedSeller){\r\n            fetchOrderData();\r\n        }\r\n    },[currentPage,selectedSeller])\r\n\r\n    const onSelect = (d)=>{\r\n        console.log(d);\r\n        setSelectedSeller(d)\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Orders\"\r\n                subTitle=\"List all orders\"\r\n                extra={[\r\n                    <Select key=\"1\" placeholder=\"select an option\" value={selectedSeller}  style={{ width: 200 }} onSelect={onSelect}>\r\n                        <Option>Select a seller</Option>\r\n                        {allSellers.map((ele,i)=><Option key={i} value={ele._id}>{ele.name}</Option>)}\r\n                    </Select>\r\n                ]}\r\n            />\r\n            <div className=\"product-list padding-after-page-header\" >\r\n                <Table \r\n                    scroll={{ x: 1200 }} \r\n                    bordered={true} \r\n                    pagination={false} \r\n                    loading={isTableLoading} \r\n                    dataSource={orderData} \r\n                    columns={column} \r\n                    rowKey=\"_id\"\r\n                    footer={() =>(\r\n                        <Row gutter={16} justify=\"end\">\r\n                            <Col>\r\n                                <Pagination pageSize={pageSize} current={currentPage} onChange={pageChanger} total={totalData} />\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(OrderListAdmin);","import React, {useState,useEffect} from \"react\";\r\nimport apis from \"../../services/apis\"\r\nimport { Timeline ,Descriptions, Select, Card, Button, message, Input   } from 'antd';\r\nimport moment from \"moment\";\r\nimport http from \"../../services/httpCall\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nfunction SubOrder(props) {\r\n    const [options,setOptions]=useState([]);\r\n    const [selectedOption,setSelectedOption]=useState();\r\n    const [description,setDescription]=useState()\r\n\r\n    useEffect(()=>{\r\n        reCalculateOptions()\r\n    },[props.data])\r\n\r\n    const reCalculateOptions = ()=>{\r\n        let opts=[];\r\n        const lastStep =props.data.status[props.data.status.length - 1].name;\r\n        if(lastStep==='placed'){\r\n            opts = ['shipped','delivered']\r\n        }\r\n        else if(lastStep==='shipped'){\r\n            opts = ['delivered']\r\n        }\r\n        setOptions(opts)\r\n    }\r\n\r\n\r\n    const onSelect = (d)=>{\r\n        console.log(d);\r\n        setSelectedOption(d)\r\n    }\r\n\r\n    const onDescriptionChange=(d)=>{\r\n        setDescription(d.target.value)\r\n    }\r\n\r\n    const updateStatus = ()=>{\r\n        if(selectedOption){\r\n            props.loading(true)\r\n            http.post(apis.UPDATE_ORDER_STATUS,{\r\n                orderId : props.orderId,\r\n                subOrderId : props.data._id,\r\n                status : selectedOption,\r\n                description : description\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    message.success(result.data.message)\r\n                }\r\n                else{\r\n                    message.error(result.data.message)\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                message.error(\"server error\")\r\n            }).finally(()=>{\r\n                props.loading(false);\r\n                props.fetchOrderDetails();\r\n                setSelectedOption();\r\n                setDescription()\r\n            })\r\n        }\r\n        else{\r\n            message.error(\"please select a status\")\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Descriptions title=\"Item Info\"  bordered>\r\n                <Descriptions.Item label=\"Image\">\r\n                    <img className=\"item-image\" src={`${apis.BASE_SERVER_URL}${props.data.product.images[0]}`} />\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Name\">{props.data.product.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Ordered Quantity\">{props.data.count}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Unit Price\">{props.data.unitPrice}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Total Price\">{props.data.totalPrice}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Seller Name\">{props.data.seller.name}</Descriptions.Item>\r\n            </Descriptions>\r\n            <div className=\"status-tracker\">\r\n                <Timeline mode=\"left\">\r\n                    {\r\n                        props.data.status.map((ele,i)=>(\r\n                            <Timeline.Item label={`${ele.name} - ${moment(ele.date).format(\"DD-MM-YYYY hh:mm:ss\")}`} key={i}>{ele.remark}</Timeline.Item>\r\n                        ))\r\n                    }\r\n                </Timeline>\r\n                <Card className=\"status-control\">\r\n                    Update Status<br />\r\n                    <Select placeholder=\"select an option\" value={selectedOption}  style={{ width: 200 }} onSelect={onSelect}>\r\n                        <Option>Select an option</Option>\r\n                        {options.map((ele,i)=><Option key={i} value={ele}>{ele}</Option>)}\r\n                    </Select>\r\n                    <TextArea value={description} rows={4} onChange={onDescriptionChange}/>\r\n                    <Button onClick={updateStatus}>UPDATE</Button>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SubOrder;","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,Descriptions,Row,Col,Button,Tag,Typography,message } from 'antd';\r\nimport { logout } from \"../../actions/authAction\"; \r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport moment from \"moment\";\r\nimport {\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    PlusCircleOutlined\r\n} from '@ant-design/icons';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport SubOrder from \"./SingleOrder\"\r\nconst { Title } = Typography;\r\n\r\nfunction OrderDetails(props) {\r\n    const {id} = useParams();\r\n    const [orderDetails,setOrderDetails] = useState();\r\n    const [mySubOrder,setMySubOrder]=useState([])\r\n\r\n    const fetchOrderDetails = ()=>{\r\n        props.loading(true);\r\n        http.get(`${apis.ORDER_DETAILS}/${id}`).then((result)=>{\r\n            console.log(result.data)\r\n            if(result.data.status){\r\n                setOrderDetails(result.data.data);\r\n                if(props.Auth.userdetails.userType==='admin'){\r\n                    setMySubOrder(result.data.data.items)\r\n                }\r\n                else{\r\n                    let ords =[];\r\n                    result.data.data.items.forEach(ele=>{\r\n                        if(ele.seller._id==result.data.userId){\r\n                            ords.push(ele)\r\n                        }\r\n                    })\r\n                    setMySubOrder(ords)\r\n                    console.log(\"sub orders\",ords)\r\n                }\r\n            }\r\n            else{\r\n                message.error(result.data.message)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }).finally(()=>{\r\n            props.loading(false);\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchOrderDetails();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"order-details-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"Order Details\"\r\n                subTitle={id}\r\n                extra={[<Link to=\"/admin/dashboard/orders\" key=\"1\"><Button key=\"1\" type=\"primary\"  icon={<UnorderedListOutlined />}>Orders</Button></Link>]}                \r\n            />\r\n            <div className=\"order-details-inner padding-after-page-header\" >\r\n                {orderDetails?\r\n                    <>\r\n                        <div className=\"details-info\">\r\n                            <Descriptions title=\"Customer Info\"  bordered>\r\n                                <Descriptions.Item label=\"Name\">{orderDetails.user.name}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Email Id\">{orderDetails.user.email}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Phone Number\">{orderDetails.user.phoneNumber}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Address\">\r\n                                    <div>\r\n                                        <div>{orderDetails.address.lineone}</div>\r\n                                        <div>{orderDetails.address.locality}</div>\r\n                                        <span>{orderDetails.address.city},</span>\r\n                                        <span>{orderDetails.address.state},</span>\r\n                                        <span>{orderDetails.address.pincode}</span>\r\n                                    </div>\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"Ordered On\">{moment(orderDetails.createdAt).format(\"DD-MM-YYYY hh:mm:ss\")}</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </div>\r\n                        <div className=\"item-details-wrapper\">\r\n                            {\r\n                                mySubOrder.map((ele,i)=><SubOrder loading={props.loading} orderId={id} fetchOrderDetails={fetchOrderDetails} key={i} data={ele} />)\r\n                            }\r\n                        </div>\r\n                    </>\r\n                    \r\n                    :\r\n                    null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, { \r\n    logout,\r\n    loading\r\n})(OrderDetails);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PageHeader,message,Row,Col,Button, Card,Input, Upload, Select } from 'antd';\r\nimport { logout } from \"../../actions/authAction\";\r\nimport {loading} from \"../../actions/loadingAction\";\r\nimport {\r\n    PictureOutlined\r\n} from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport apis from \"../../services/apis\";\r\nimport http from \"../../services/httpCall\";\r\nimport { beforeUpload } from \"../../services/beforeUpload\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\nimport \"./Poster.less\"\r\n\r\n\r\nfunction Poster(props) {\r\n    const [posters,setPosters] = useState([])\r\n\r\n\r\n    const fetchPosters = async()=>{\r\n        try{\r\n            props.loading(true);\r\n            let responses = await http.get(apis.LIST_POSTER);\r\n            console.log(responses.data)\r\n            if(responses.data.status){\r\n                setPosters(responses.data.data)\r\n            }\r\n            else{\r\n                message.error(responses.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }\r\n        finally{\r\n            props.loading(false)\r\n        }\r\n    }\r\n\r\n\r\n    const beforeUploadFunction = (file)=>{\r\n        props.loading(true)\r\n        beforeUpload(file,['image/jpeg','image/png'],2,()=>{\r\n            const formData = new FormData();\r\n            formData.append('poster',file);\r\n            http.post(apis.UPLOAD_POSTER,formData,{\r\n                headers : {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((result)=>{\r\n                if(result.data.status){\r\n                    setPosters(result.data.data);\r\n                    message.success(result.data.message);\r\n                }\r\n                else{\r\n                    message.error(result.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n                Errorhandler(err,props.logout);\r\n            }).finally(()=>{\r\n                props.loading(false)\r\n            })\r\n\r\n        })\r\n        return false;\r\n    }\r\n\r\n\r\n    const deleteMe = async(file)=>{\r\n        try{\r\n            props.loading(true);\r\n            let responses = await http.post(apis.DELETE_POSTER,{file});\r\n            console.log(responses.data)\r\n            if(responses.data.status){\r\n                setPosters(responses.data.data)\r\n            }\r\n            else{\r\n                message.error(responses.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            Errorhandler(err,props.logout);\r\n        }\r\n        finally{\r\n            props.loading(false)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchPosters()\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"poster-list-wrapper full-width-height\">\r\n            <PageHeader\r\n                className=\"site-page-header-responsive\"\r\n                title=\"All Posters\"\r\n                subTitle=\"List all posters\"\r\n                extra={[\r\n                    <ImgCrop\r\n                        grid={true}\r\n                        shape=\"rect\"\r\n                        aspect={2.5}\r\n                        key=\"1\"\r\n                    >\r\n                        <Upload\r\n                            name='file'\r\n                            className=\"poster-uploader\"\r\n                            showUploadList={false}\r\n                            beforeUpload={beforeUploadFunction}\r\n\r\n                        >\r\n                            <Button  type=\"primary\"  icon={<PictureOutlined />}>Upload Poster</Button>\r\n                        </Upload>\r\n                    </ImgCrop>\r\n                ]}\r\n            />\r\n            <div className=\"poster-list-inner padding-after-page-header\" >\r\n                {posters.length>0?\r\n                    <div>\r\n                        <Row gutter={20}>\r\n                            {posters.map((ele,i)=>\r\n                                <Col key={i} span={8} style={{marginBottom:'20px'}}>\r\n                                    <Card\r\n                                        hoverable\r\n                                        style={{ width: '100%' }}\r\n                                        cover={<img  src={ `${apis.BASE_SERVER_URL}${ele}`} />}\r\n\r\n\r\n                                    >\r\n                                        <Button onClick={()=>deleteMe(ele)} type=\"default\" style={{width:'100%'}}>Delete</Button>\r\n                                    </Card>\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n\r\n                    </div>\r\n                    :\r\n                    <div className=\"no-poster\">\r\n                        <h4>No posters are uploaded</h4>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, {\r\n    logout,\r\n    loading\r\n})(Poster);","import React,{ useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Layout,Row,Col } from 'antd';\r\nimport { useLocation, Switch, Route } from \"react-router-dom\";\r\nimport \"./Dashboard.less\";\r\nimport Header from \"./Header\";\r\nimport SideBar from \"./SideBar\";\r\nimport UserList from \"../Users/UserList\";\r\nimport UserCreate from \"../Users/UserCreate\";\r\nimport CategoryCreate from \"../Category/CategoryCreate\";\r\nimport CategoryList from \"../Category/CategoryList\";\r\nimport ProductCreate from \"../Product/ProductCreate\";\r\nimport ProductEdit from \"../Product/ProductEdit\"\r\nimport ProductListAdmin from \"../Product/ProductListAdmin\";\r\nimport ProductDetailsAdmin from \"../Product/ProductDetailsAdmin\";\r\nimport MyProfile from \"../Profile/MyProfile\"\r\n\r\nimport ProductListSeller from \"../Product/ProductListSeller\";\r\nimport ProductDetailsSeller from \"../Product/ProductDetailsSeller\";\r\nimport OrderListSeller from \"../Order/OrderListSeller\";\r\nimport OrderListAdmin from \"../Order/OrderListAdmin\"\r\nimport OrderDetails from \"../Order/OrderDetails\"\r\nimport Poster from \"../Poster/Poster\"\r\n\r\n\r\nfunction Dashboard(props) {\r\n    const [sideBarCollapsed,setSideBarCollapsed] = useState(false);\r\n\r\n    let toggleSideBar = ()=>{\r\n        setSideBarCollapsed(!sideBarCollapsed);\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"dashboard-container\">\r\n            <Header toggleSideBar={toggleSideBar}/>\r\n            <Row className=\"dashboard-content-container\">\r\n                <Col>\r\n                    <SideBar key={props.Auth.userdetails} sideBarCollapsed={sideBarCollapsed} user={props.Auth.userdetails}/>\r\n                </Col>\r\n                <Col className={\"dashboard-content-col\"+(sideBarCollapsed?\" dashboadr-sidebar-collapsed\":\" dashboard-sidebar-normal\")}>\r\n                    <Layout.Content  className=\"dasboard-content-wrapper\">\r\n                        {\r\n                            props.Auth.userdetails.userType && props.Auth.userdetails.userType==='admin'?\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <Switch>\r\n                                    <Route exact={true} path=\"/admin/dashboard/posters\">\r\n                                        <Poster />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/user/list\">\r\n                                        <UserList />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/user/create\">\r\n                                        <UserCreate />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/category/create\">\r\n                                        <CategoryCreate />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/category/list\">\r\n                                        <CategoryList />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/create\">\r\n                                        <ProductCreate />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/edit/:id\">\r\n                                        <ProductEdit />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/list\">\r\n                                        <ProductListAdmin />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/details/:id\">\r\n                                        <ProductDetailsAdmin />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/orders\">\r\n                                        <OrderListAdmin />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/order/details/:id\">\r\n                                        <OrderDetails />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/profile/:id\">\r\n                                        <MyProfile />\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                            :\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <Switch>\r\n                                    <Route path=\"/admin/dashboard/product/list\">\r\n                                        <ProductListSeller />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/product/details/:id\">\r\n                                        <ProductDetailsSeller />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/orders\">\r\n                                        <OrderListSeller />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/order/details/:id\">\r\n                                        <OrderDetails />\r\n                                    </Route>\r\n                                    <Route exact={true} path=\"/admin/dashboard/profile/:id\">\r\n                                        <MyProfile />\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                        }\r\n\r\n                        <Layout.Footer className=\"dashboard-footer-wrapper\">BANDHAN SOLUTIONS</Layout.Footer>\r\n                    </Layout.Content>\r\n                </Col>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n});\r\nexport default connect(mapStateToProps, {\r\n\r\n})(Dashboard);\r\n\r\n\r\n\r\n\r\n","import React,{ useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { logout, setUserDetails } from \"../../actions/authAction\"; \r\nimport EntryLoader from \"../Loader/EntryLoader\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport http from \"../../services/httpCall\";\r\nimport apis from \"../../services/apis\";\r\nimport Errorhandler from \"../../services/errorHandler\";\r\n\r\nfunction DashboardWrapper(props) {\r\n\r\n    let fetchUserDetails = ()=>{\r\n        http.get(apis.GET_USER_DETAILS).then((result)=>{\r\n            if(result.data.status && (result.data.data.userType==='admin' || result.data.data.userType==='seller')){\r\n                props.setUserDetails(result.data.data);\r\n            }\r\n            else{\r\n                props.logout();\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            Errorhandler(err,props.logout)\r\n        })\r\n    }\r\n\r\n    //fetching user details on component load\r\n    useEffect(()=>{\r\n        if(!props.Auth.userdetails){\r\n            console.log(props.Auth.userdetails)\r\n            fetchUserDetails();\r\n        }        \r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            {props.Auth.userdetails?\r\n                <Dashboard />\r\n            :\r\n                <EntryLoader />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth,\r\n});\r\n  \r\nexport default connect(mapStateToProps, { setUserDetails, logout })(DashboardWrapper);\r\n\r\n","import React from \"react\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport {connect} from 'react-redux';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LoginWrapper from \"./components/Root/LoginWrapper\";\r\nimport PrivateRoute from \"./components/Root/PrivateWrapper\";\r\nimport Login from \"./components/Login/Login\";\r\nimport DashboardWrapper from \"./components/Wrapper/DashboardWrapper\";\r\nimport { login } from \"./actions/authAction\";\r\n\r\n\r\n\r\nlet App = (props)=>{\r\n    //auth check if token exist\r\n    let Token  = localStorage.getItem(\"Token\");\r\n    console.log(Token);\r\n    if(Token && Token!==\"null\" && Token!==\"undefined\"){\r\n      props.login(Token);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Loader />\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/admin\">\r\n                        <Redirect to={{pathname: \"/admin/dashboard\"}}/>\r\n                    </Route>\r\n                    <LoginWrapper exact={true} path=\"/admin/login\">\r\n                        <Login />\r\n                    </LoginWrapper>\r\n                    <PrivateRoute path=\"/admin/dashboard\">\r\n                        <DashboardWrapper />\r\n                    </PrivateRoute>\r\n                    <Route>\r\n                        <Redirect to=\"/admin\" />\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps= (state) => ({\r\n    \r\n})\r\nexport default connect(mapStateToProps, { \r\n    login\r\n})(App);","const initialState = {\r\n    loading_active : 0\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'LOADING':\r\n            let lc = state.loading_active;\r\n            if(action.payload){\r\n                lc++;\r\n            }\r\n            else{\r\n                lc = lc===0?0:lc-1;\r\n            }\r\n            return {\r\n                ...state,\r\n                loading_active : lc              \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    isLoggedIn : false,\r\n    token : null,\r\n    userdetails : null          \r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : true,\r\n                token : action.token,\r\n                userdetails : action.userdetails\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                token : null,\r\n                userdetails : null\r\n            }\r\n        case 'SET_USER_DETAILS':\r\n            return{\r\n                ...state,\r\n                userdetails : action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'; \r\nimport Loader from \"./loaderReducer\";\r\nimport Auth from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n    Loader,\r\n    Auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\n\r\nconst initialState={};\r\nconst middleware=[thunk,logger];\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    applyMiddleware(...middleware)\r\n);\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}